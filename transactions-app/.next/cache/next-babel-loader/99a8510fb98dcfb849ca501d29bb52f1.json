{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useCallback, useEffect } from 'react';\nimport { API, graphqlOperation } from 'aws-amplify';\nimport { Page, Card, Toast, Frame, Tabs } from '@shopify/polaris';\nimport config from '../aws-exports';\nimport AcceptedPaymentRequest from '../components/AcceptedPaymentRequest';\nimport PendingPaymentRequest from '../components/PendingPaymentRequest';\nimport DeclinedPaymentRequest from '../components/DeclinedPaymentRequest';\nimport { onUpdatePaymentSubscription, paymentSubscription } from '../graphql/subscriptions';\nAPI.configure(config);\n\nconst AcceptPayment = () => {\n  const {\n    0: activeToast,\n    1: setActiveToast\n  } = useState(false);\n  const {\n    0: selected,\n    1: setSelected\n  } = useState(0);\n  const {\n    0: createUpdatePaymentSubscription,\n    1: setCreateUpdatePaymentSubscription\n  } = useState('');\n  useEffect(() => {\n    const listener = API.graphql(graphqlOperation(paymentSubscription)).subscribe({\n      next: paymentResponse => {\n        setCreateUpdatePaymentSubscription(paymentResponse);\n      }\n    });\n    const onUpdatePayment = API.graphql(graphqlOperation(onUpdatePaymentSubscription)).subscribe({\n      next: onUpdatePaymentResponse => {\n        setCreateUpdatePaymentSubscription(onUpdatePaymentResponse);\n      }\n    });\n    return () => {\n      listener.unsubscribe();\n      onUpdatePayment.unsubscribe();\n    };\n  }, []);\n  const tabs = [{\n    id: 'pending-payments',\n    content: 'Pending Payment Requests',\n    accessibilityLabel: 'Pending Requests',\n    panelID: 'pending-payments-content'\n  }, {\n    id: 'accepted-payments',\n    content: 'Accepted Payment Requests',\n    accessibilityLabel: 'Accepted Request',\n    panelID: 'accepted-payments-content'\n  }, {\n    id: 'declined-payments',\n    content: 'Declined Payment Requests',\n    accessibilityLabel: 'Declined Requests',\n    panelID: 'declined-payments-content'\n  }];\n  const toastMarkup = activeToast ? __jsx(Toast, {\n    content: \"Order has been successfully created\",\n    onDismiss: () => setActiveToast(false)\n  }) : null;\n\n  const renderPaymentRequest = selected => {\n    switch (selected) {\n      case 0:\n        return __jsx(PendingPaymentRequest, {\n          createUpdatePaymentSubscription: createUpdatePaymentSubscription\n        });\n\n      case 1:\n        return __jsx(AcceptedPaymentRequest, null);\n\n      case 2:\n        return __jsx(DeclinedPaymentRequest, null);\n\n      default:\n        return;\n    }\n  };\n\n  return __jsx(Frame, null, __jsx(Page, {\n    title: \"Payment Request\"\n  }, __jsx(Card, null, __jsx(Tabs, {\n    tabs: tabs,\n    selected: selected,\n    onSelect: handleTabChange\n  }, __jsx(Card.Section, {\n    title: tabs[selected].content\n  }, renderPaymentRequest(selected)))), toastMarkup));\n};\n\nexport default AcceptPayment;","map":{"version":3,"sources":["C:/Users/Admin/Desktop/transactions/components/PaymentRequest.js"],"names":["React","useState","useCallback","useEffect","API","graphqlOperation","Page","Card","Toast","Frame","Tabs","config","AcceptedPaymentRequest","PendingPaymentRequest","DeclinedPaymentRequest","onUpdatePaymentSubscription","paymentSubscription","configure","AcceptPayment","activeToast","setActiveToast","selected","setSelected","createUpdatePaymentSubscription","setCreateUpdatePaymentSubscription","listener","graphql","subscribe","next","paymentResponse","onUpdatePayment","onUpdatePaymentResponse","unsubscribe","tabs","id","content","accessibilityLabel","panelID","toastMarkup","renderPaymentRequest","handleTabChange"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, useEffect } from 'react'\r\nimport { API, graphqlOperation } from 'aws-amplify'\r\nimport { Page, Card, Toast, Frame, Tabs } from '@shopify/polaris'\r\nimport config from '../aws-exports'\r\nimport AcceptedPaymentRequest from '../components/AcceptedPaymentRequest'\r\nimport PendingPaymentRequest from '../components/PendingPaymentRequest'\r\nimport DeclinedPaymentRequest from '../components/DeclinedPaymentRequest'\r\nimport { onUpdatePaymentSubscription, paymentSubscription } from '../graphql/subscriptions'\r\n\r\nAPI.configure(config)\r\n\r\nconst AcceptPayment = () => {\r\n    const [activeToast, setActiveToast] = useState(false)\r\n    const [selected, setSelected] = useState(0)\r\n    const [createUpdatePaymentSubscription, setCreateUpdatePaymentSubscription] = useState('')\r\n\r\n    useEffect(() => {\r\n        const listener = API.graphql(graphqlOperation(paymentSubscription)).subscribe({\r\n            next: (paymentResponse) => {\r\n                setCreateUpdatePaymentSubscription(paymentResponse)\r\n            }\r\n        })\r\n\r\n        const onUpdatePayment = API.graphql(\r\n            graphqlOperation(onUpdatePaymentSubscription)\r\n        ).subscribe({\r\n            next: (onUpdatePaymentResponse) => {\r\n                setCreateUpdatePaymentSubscription(onUpdatePaymentResponse)\r\n            }\r\n        })\r\n\r\n        return () => {\r\n            listener.unsubscribe()\r\n            onUpdatePayment.unsubscribe()\r\n        }\r\n    }, [])\r\n\r\n    const tabs = [\r\n        {\r\n            id: 'pending-payments',\r\n            content: 'Pending Payment Requests',\r\n            accessibilityLabel: 'Pending Requests',\r\n            panelID: 'pending-payments-content'\r\n        },\r\n        {\r\n            id: 'accepted-payments',\r\n            content: 'Accepted Payment Requests',\r\n            accessibilityLabel: 'Accepted Request',\r\n            panelID: 'accepted-payments-content'\r\n        },\r\n        {\r\n            id: 'declined-payments',\r\n            content: 'Declined Payment Requests',\r\n            accessibilityLabel: 'Declined Requests',\r\n            panelID: 'declined-payments-content'\r\n        }\r\n    ]\r\n\r\n    const toastMarkup = activeToast ? (\r\n        <Toast\r\n            content=\"Order has been successfully created\"\r\n            onDismiss={() => setActiveToast(false)}\r\n        />\r\n    ) : null\r\n\r\n    const renderPaymentRequest = (selected) => {\r\n        switch (selected) {\r\n            case 0:\r\n                return (\r\n                    <PendingPaymentRequest\r\n                        createUpdatePaymentSubscription={createUpdatePaymentSubscription}\r\n                    />\r\n                )\r\n            case 1:\r\n                return <AcceptedPaymentRequest />\r\n            case 2:\r\n                return <DeclinedPaymentRequest />\r\n            default:\r\n                return\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Frame>\r\n            <Page title=\"Payment Request\">\r\n                <Card>\r\n                    <Tabs tabs={tabs} selected={selected} onSelect={handleTabChange}>\r\n                        <Card.Section title={tabs[selected].content}>\r\n                            {renderPaymentRequest(selected)}\r\n                        </Card.Section>\r\n                    </Tabs>\r\n                </Card>\r\n                {toastMarkup}\r\n            </Page>\r\n        </Frame>\r\n    )\r\n}\r\n\r\nexport default AcceptPayment\r\n"]},"metadata":{},"sourceType":"module"}