{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useCallback } from 'react';\nimport axios from 'axios';\nimport { API, graphqlOperation } from 'aws-amplify';\nimport gql from 'graphql-tag';\nimport { useQuery } from '@apollo/client';\nimport { Modal, Thumbnail, Checkbox, TextStyle, TextField } from '@shopify/polaris';\nimport { Table, Header, Icon } from 'semantic-ui-react';\nimport { toCurrency, formatDate } from '../utils/helper';\nimport config from '../aws-exports';\n\nvar BranchRow = function BranchRow(_ref) {\n  _s();\n\n  var product = _ref.product,\n      state = _ref.state,\n      setState = _ref.setState;\n\n  var _useState = useState(product),\n      fetchedProduct = _useState[0],\n      setFetchedProduct = _useState[1];\n\n  var _useState2 = useState([]),\n      rowId = _useState2[0],\n      setRowId = _useState2[1];\n\n  var _useState3 = useState(null),\n      searchValue = _useState3[0],\n      setSearchValue = _useState3[1];\n\n  var _useState4 = useState(''),\n      bonus = _useState4[0],\n      setBonus = _useState4[1];\n\n  var handleSearchInput = useCallback(function (newValue) {\n    return setSearchValue(newValue);\n  }, []);\n  var handleBonus = useCallback(function (value) {\n    setBonus(value);\n    fetchedProduct.node.tags = [value];\n    setFetchedProduct(fetchedProduct);\n  }, []);\n  return __jsx(Table.Row, {\n    key: product.node.id\n  }, __jsx(Table.Cell, null, __jsx(Header, {\n    as: \"h4\",\n    image: true,\n    className: \"product-header\"\n  }, __jsx(Checkbox, {\n    checked: rowId.includes(product.node.id) && true,\n    onClick: function onClick() {\n      if (rowId.includes(product.node.id)) {\n        setRowId(rowId.filter(function (id) {\n          return id !== product.node.id;\n        }));\n        setState({\n          products: state.products.filter(function (filteredProduct) {\n            return filteredProduct.node.id !== product.node.id;\n          })\n        });\n      } else {\n        setRowId([].concat(_toConsumableArray(rowId), [product.node.id]));\n        setState(_objectSpread(_objectSpread({}, state), {}, {\n          products: [].concat(_toConsumableArray(state.products), [product])\n        }));\n      }\n    }\n  }), __jsx(Thumbnail, {\n    source: product.node.images.edges[0] && product.node.images.edges[0].node.originalSrc,\n    size: \"small\",\n    alt: \"\"\n  }), __jsx(Header.Content, null, product.node.title))), __jsx(Table.Cell, {\n    textAlign: \"center\"\n  }, __jsx(TextStyle, {\n    variation: \"subdued\"\n  }, product.node.variants.edges[0] && toCurrency(product.node.variants.edges[0].node.price))), __jsx(Table.Cell, null, __jsx(TextField, {\n    id: \"percentage-input\",\n    placeholder: \"Bonus Percentage\",\n    value: bonus,\n    onChange: handleBonus,\n    prefix: __jsx(Icon, {\n      name: \"percent\"\n    }),\n    disabled: !rowId.includes(product.node.id)\n  })));\n};\n\n_s(BranchRow, \"+u3wwCJP7r4iU5SBbS1okhypj98=\");\n\n_c = BranchRow;\nexport default BranchRow;\n\nvar _c;\n\n$RefreshReg$(_c, \"BranchRow\");","map":{"version":3,"sources":["C:/Users/Admin/Desktop/transactions/components/BranchRow.js"],"names":["React","useState","useCallback","axios","API","graphqlOperation","gql","useQuery","Modal","Thumbnail","Checkbox","TextStyle","TextField","Table","Header","Icon","toCurrency","formatDate","config","BranchRow","product","state","setState","fetchedProduct","setFetchedProduct","rowId","setRowId","searchValue","setSearchValue","bonus","setBonus","handleSearchInput","newValue","handleBonus","value","node","tags","id","includes","filter","products","filteredProduct","images","edges","originalSrc","title","variants","price"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from 'react'\r\nimport axios from 'axios'\r\nimport { API, graphqlOperation } from 'aws-amplify'\r\nimport gql from 'graphql-tag'\r\nimport { useQuery } from '@apollo/client'\r\nimport { Modal, Thumbnail, Checkbox, TextStyle, TextField } from '@shopify/polaris'\r\nimport { Table, Header, Icon } from 'semantic-ui-react'\r\nimport { toCurrency, formatDate } from '../utils/helper'\r\nimport config from '../aws-exports'\r\n\r\nconst BranchRow = ({ product, state, setState }) => {\r\n    const [fetchedProduct, setFetchedProduct] = useState(product)\r\n    const [rowId, setRowId] = useState([])\r\n    const [searchValue, setSearchValue] = useState(null)\r\n    const [bonus, setBonus] = useState('')\r\n    const handleSearchInput = useCallback((newValue) => setSearchValue(newValue), [])\r\n\r\n    const handleBonus = useCallback((value) => {\r\n        setBonus(value)\r\n        fetchedProduct.node.tags = [value]\r\n        setFetchedProduct(fetchedProduct)\r\n    }, [])\r\n\r\n    return (\r\n        <Table.Row key={product.node.id}>\r\n            <Table.Cell>\r\n                <Header as=\"h4\" image className=\"product-header\">\r\n                    <Checkbox\r\n                        checked={rowId.includes(product.node.id) && true}\r\n                        onClick={() => {\r\n                            if (rowId.includes(product.node.id)) {\r\n                                setRowId(rowId.filter((id) => id !== product.node.id))\r\n                                setState({\r\n                                    products: state.products.filter(\r\n                                        (filteredProduct) =>\r\n                                            filteredProduct.node.id !== product.node.id\r\n                                    )\r\n                                })\r\n                            } else {\r\n                                setRowId([...rowId, product.node.id])\r\n                                setState({\r\n                                    ...state,\r\n                                    products: [...state.products, product]\r\n                                })\r\n                            }\r\n                        }}\r\n                    />\r\n                    <Thumbnail\r\n                        source={\r\n                            product.node.images.edges[0] &&\r\n                            product.node.images.edges[0].node.originalSrc\r\n                        }\r\n                        size=\"small\"\r\n                        alt=\"\"\r\n                    />\r\n                    <Header.Content>{product.node.title}</Header.Content>\r\n                </Header>\r\n            </Table.Cell>\r\n            <Table.Cell textAlign=\"center\">\r\n                <TextStyle variation=\"subdued\">\r\n                    {product.node.variants.edges[0] &&\r\n                        toCurrency(product.node.variants.edges[0].node.price)}\r\n                </TextStyle>\r\n            </Table.Cell>\r\n            <Table.Cell>\r\n                <TextField\r\n                    id=\"percentage-input\"\r\n                    placeholder=\"Bonus Percentage\"\r\n                    value={bonus}\r\n                    onChange={handleBonus}\r\n                    prefix={<Icon name=\"percent\" />}\r\n                    disabled={!rowId.includes(product.node.id)}\r\n                />\r\n            </Table.Cell>\r\n        </Table.Row>\r\n    )\r\n}\r\n\r\nexport default BranchRow\r\n"]},"metadata":{},"sourceType":"module"}