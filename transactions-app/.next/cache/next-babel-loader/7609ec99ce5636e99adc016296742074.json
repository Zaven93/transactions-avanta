{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { API, graphqlOperation } from 'aws-amplify';\nimport config from '../aws-exports';\nAPI.configure(config);\nconst listPaymentRequest = gql`\n    query listPaymentRequest {\n        listPaymentRequests {\n            items {\n                bonusAmount\n                createdAt\n                customerId\n                id\n                orderId\n                status\n                updatedAt\n            }\n        }\n    }\n`;\n\nclass AcceptPayment extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      paymentRequestItems: this.props.paymentRequests\n    });\n  }\n\n  render() {\n    console.log('Payment request data from class component', this.state.paymentRequestItems);\n    return __jsx(\"div\", null, \"Hello from payment\");\n  }\n\n}\n\nexport async function getStaticProps() {\n  let result;\n\n  try {\n    result = await API.graphql(graphqlOperation(listPaymentRequest));\n  } catch (error) {\n    console.log(error);\n  }\n\n  if (result.errors) {\n    console.warn('Failed to fetch transactions.', result.errors);\n    return {\n      props: {\n        paymentRequests: []\n      }\n    };\n  }\n\n  if (result.data !== null) {\n    return {\n      props: {\n        paymentRequests: result.data\n      }\n    };\n  }\n}\nexport default AcceptPayment;","map":{"version":3,"sources":["C:/Users/Admin/Desktop/transactions/pages/accept-payment.js"],"names":["API","graphqlOperation","config","configure","listPaymentRequest","gql","AcceptPayment","React","Component","paymentRequestItems","props","paymentRequests","render","console","log","state","getStaticProps","result","graphql","error","errors","warn","data"],"mappings":";;;;;AAAA,SAASA,GAAT,EAAcC,gBAAd,QAAsC,aAAtC;AACA,OAAOC,MAAP,MAAmB,gBAAnB;AAEAF,GAAG,CAACG,SAAJ,CAAcD,MAAd;AAEA,MAAME,kBAAkB,GAAGC,GAAI;;;;;;;;;;;;;;CAA/B;;AAgBA,MAAMC,aAAN,SAA4BC,KAAK,CAACC,SAAlC,CAA4C;AAAA;AAAA;;AAAA,mCAChC;AACJC,MAAAA,mBAAmB,EAAE,KAAKC,KAAL,CAAWC;AAD5B,KADgC;AAAA;;AAKxCC,EAAAA,MAAM,GAAG;AACLC,IAAAA,OAAO,CAACC,GAAR,CAAY,2CAAZ,EAAyD,KAAKC,KAAL,CAAWN,mBAApE;AACA,WAAO,wCAAP;AACH;;AARuC;;AAW5C,OAAO,eAAeO,cAAf,GAAgC;AACnC,MAAIC,MAAJ;;AACA,MAAI;AACAA,IAAAA,MAAM,GAAG,MAAMjB,GAAG,CAACkB,OAAJ,CAAYjB,gBAAgB,CAACG,kBAAD,CAA5B,CAAf;AACH,GAFD,CAEE,OAAOe,KAAP,EAAc;AACZN,IAAAA,OAAO,CAACC,GAAR,CAAYK,KAAZ;AACH;;AAED,MAAIF,MAAM,CAACG,MAAX,EAAmB;AACfP,IAAAA,OAAO,CAACQ,IAAR,CAAa,+BAAb,EAA8CJ,MAAM,CAACG,MAArD;AACA,WAAO;AAAEV,MAAAA,KAAK,EAAE;AAAEC,QAAAA,eAAe,EAAE;AAAnB;AAAT,KAAP;AACH;;AACD,MAAIM,MAAM,CAACK,IAAP,KAAgB,IAApB,EAA0B;AACtB,WAAO;AAAEZ,MAAAA,KAAK,EAAE;AAAEC,QAAAA,eAAe,EAAEM,MAAM,CAACK;AAA1B;AAAT,KAAP;AACH;AACJ;AAED,eAAehB,aAAf","sourcesContent":["import { API, graphqlOperation } from 'aws-amplify'\r\nimport config from '../aws-exports'\r\n\r\nAPI.configure(config)\r\n\r\nconst listPaymentRequest = gql`\r\n    query listPaymentRequest {\r\n        listPaymentRequests {\r\n            items {\r\n                bonusAmount\r\n                createdAt\r\n                customerId\r\n                id\r\n                orderId\r\n                status\r\n                updatedAt\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nclass AcceptPayment extends React.Component {\r\n    state = {\r\n        paymentRequestItems: this.props.paymentRequests\r\n    }\r\n\r\n    render() {\r\n        console.log('Payment request data from class component', this.state.paymentRequestItems)\r\n        return <div>Hello from payment</div>\r\n    }\r\n}\r\n\r\nexport async function getStaticProps() {\r\n    let result\r\n    try {\r\n        result = await API.graphql(graphqlOperation(listPaymentRequest))\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n\r\n    if (result.errors) {\r\n        console.warn('Failed to fetch transactions.', result.errors)\r\n        return { props: { paymentRequests: [] } }\r\n    }\r\n    if (result.data !== null) {\r\n        return { props: { paymentRequests: result.data } }\r\n    }\r\n}\r\n\r\nexport default AcceptPayment\r\n"]},"metadata":{},"sourceType":"module"}