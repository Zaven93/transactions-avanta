{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useCallback, useEffect } from \"react\";\nimport { API, graphqlOperation } from \"aws-amplify\";\nimport { Page, Card, Toast, Frame, Tabs, Button } from \"@shopify/polaris\";\nimport config from \"../aws-exports\";\nimport AcceptedPaymentRequest from \"./AcceptedPaymentRequest\";\nimport PendingPaymentRequest from \"./PendingPaymentRequest\";\nimport DeclinedPaymentRequest from \"./DeclinedPaymentRequest\";\nimport { onUpdatePaymentSubscription, paymentSubscription } from \"../graphql/subscriptions\";\nAPI.configure(config);\n\nconst AcceptPayment = ({\n  branchId,\n  setShowPaymentRequest\n}) => {\n  const {\n    0: activeToast,\n    1: setActiveToast\n  } = useState(false);\n  const {\n    0: selected,\n    1: setSelected\n  } = useState(0);\n  const {\n    0: createUpdatePaymentSubscription,\n    1: setCreateUpdatePaymentSubscription\n  } = useState(\"\");\n  const handleTabChange = useCallback(selectedTabIndex => setSelected(selectedTabIndex), []);\n  useEffect(() => {\n    const listener = API.graphql(graphqlOperation(paymentSubscription)).subscribe({\n      next: paymentResponse => {\n        setCreateUpdatePaymentSubscription(paymentResponse);\n      }\n    });\n    const onUpdatePayment = API.graphql(graphqlOperation(onUpdatePaymentSubscription)).subscribe({\n      next: onUpdatePaymentResponse => {\n        setCreateUpdatePaymentSubscription(onUpdatePaymentResponse);\n      }\n    });\n    return () => {\n      listener.unsubscribe();\n      onUpdatePayment.unsubscribe();\n    };\n  }, []);\n  const tabs = [{\n    id: \"pending-payments\",\n    content: \"Pending Payment Requests\",\n    accessibilityLabel: \"Pending Requests\",\n    panelID: \"pending-payments-content\"\n  }, {\n    id: \"accepted-payments\",\n    content: \"Accepted Payment Requests\",\n    accessibilityLabel: \"Accepted Request\",\n    panelID: \"accepted-payments-content\"\n  }, {\n    id: \"declined-payments\",\n    content: \"Declined Payment Requests\",\n    accessibilityLabel: \"Declined Requests\",\n    panelID: \"declined-payments-content\"\n  }];\n  const toastMarkup = activeToast ? __jsx(Toast, {\n    content: \"Order has been successfully created\",\n    onDismiss: () => setActiveToast(false)\n  }) : null;\n\n  const renderPaymentRequest = selected => {\n    switch (selected) {\n      case 0:\n        return __jsx(PendingPaymentRequest, {\n          branchId: branchId,\n          createUpdatePaymentSubscription: createUpdatePaymentSubscription\n        });\n\n      case 1:\n        return __jsx(AcceptedPaymentRequest, {\n          branchId: branchId\n        });\n\n      case 2:\n        return __jsx(DeclinedPaymentRequest, {\n          branchId: branchId\n        });\n\n      default:\n        return;\n    }\n  };\n\n  return __jsx(Frame, null, __jsx(Page, {\n    title: \"Payment Request\"\n  }, __jsx(Button, {\n    onClick: () => setShowPaymentRequest(false)\n  }, \"Go back\"), __jsx(Card, null, __jsx(Tabs, {\n    tabs: tabs,\n    selected: selected,\n    onSelect: handleTabChange\n  }, __jsx(Card.Section, {\n    title: tabs[selected].content\n  }, renderPaymentRequest(selected)))), toastMarkup));\n};\n\nexport default AcceptPayment;","map":{"version":3,"sources":["/var/www/transactions-avanta/components/PaymentRequest.js"],"names":["React","useState","useCallback","useEffect","API","graphqlOperation","Page","Card","Toast","Frame","Tabs","Button","config","AcceptedPaymentRequest","PendingPaymentRequest","DeclinedPaymentRequest","onUpdatePaymentSubscription","paymentSubscription","configure","AcceptPayment","branchId","setShowPaymentRequest","activeToast","setActiveToast","selected","setSelected","createUpdatePaymentSubscription","setCreateUpdatePaymentSubscription","handleTabChange","selectedTabIndex","listener","graphql","subscribe","next","paymentResponse","onUpdatePayment","onUpdatePaymentResponse","unsubscribe","tabs","id","content","accessibilityLabel","panelID","toastMarkup","renderPaymentRequest"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,EAAuCC,SAAvC,QAAwD,OAAxD;AACA,SAASC,GAAT,EAAcC,gBAAd,QAAsC,aAAtC;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,KAArB,EAA4BC,KAA5B,EAAmCC,IAAnC,EAAyCC,MAAzC,QAAuD,kBAAvD;AACA,OAAOC,MAAP,MAAmB,gBAAnB;AACA,OAAOC,sBAAP,MAAmC,0BAAnC;AACA,OAAOC,qBAAP,MAAkC,yBAAlC;AACA,OAAOC,sBAAP,MAAmC,0BAAnC;AACA,SAASC,2BAAT,EAAsCC,mBAAtC,QAAiE,0BAAjE;AAEAb,GAAG,CAACc,SAAJ,CAAcN,MAAd;;AAEA,MAAMO,aAAa,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAAyC;AAC7D,QAAM;AAAA,OAACC,WAAD;AAAA,OAAcC;AAAd,MAAgCtB,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM;AAAA,OAACuB,QAAD;AAAA,OAAWC;AAAX,MAA0BxB,QAAQ,CAAC,CAAD,CAAxC;AACA,QAAM;AAAA,OAACyB,+BAAD;AAAA,OAAkCC;AAAlC,MAAwE1B,QAAQ,CAAC,EAAD,CAAtF;AAEA,QAAM2B,eAAe,GAAG1B,WAAW,CAAE2B,gBAAD,IAAsBJ,WAAW,CAACI,gBAAD,CAAlC,EAAsD,EAAtD,CAAnC;AAEA1B,EAAAA,SAAS,CAAC,MAAM;AACd,UAAM2B,QAAQ,GAAG1B,GAAG,CAAC2B,OAAJ,CAAY1B,gBAAgB,CAACY,mBAAD,CAA5B,EAAmDe,SAAnD,CAA6D;AAC5EC,MAAAA,IAAI,EAAGC,eAAD,IAAqB;AACzBP,QAAAA,kCAAkC,CAACO,eAAD,CAAlC;AACD;AAH2E,KAA7D,CAAjB;AAMA,UAAMC,eAAe,GAAG/B,GAAG,CAAC2B,OAAJ,CAAY1B,gBAAgB,CAACW,2BAAD,CAA5B,EAA2DgB,SAA3D,CAAqE;AAC3FC,MAAAA,IAAI,EAAGG,uBAAD,IAA6B;AACjCT,QAAAA,kCAAkC,CAACS,uBAAD,CAAlC;AACD;AAH0F,KAArE,CAAxB;AAMA,WAAO,MAAM;AACXN,MAAAA,QAAQ,CAACO,WAAT;AACAF,MAAAA,eAAe,CAACE,WAAhB;AACD,KAHD;AAID,GAjBQ,EAiBN,EAjBM,CAAT;AAmBA,QAAMC,IAAI,GAAG,CACX;AACEC,IAAAA,EAAE,EAAE,kBADN;AAEEC,IAAAA,OAAO,EAAE,0BAFX;AAGEC,IAAAA,kBAAkB,EAAE,kBAHtB;AAIEC,IAAAA,OAAO,EAAE;AAJX,GADW,EAOX;AACEH,IAAAA,EAAE,EAAE,mBADN;AAEEC,IAAAA,OAAO,EAAE,2BAFX;AAGEC,IAAAA,kBAAkB,EAAE,kBAHtB;AAIEC,IAAAA,OAAO,EAAE;AAJX,GAPW,EAaX;AACEH,IAAAA,EAAE,EAAE,mBADN;AAEEC,IAAAA,OAAO,EAAE,2BAFX;AAGEC,IAAAA,kBAAkB,EAAE,mBAHtB;AAIEC,IAAAA,OAAO,EAAE;AAJX,GAbW,CAAb;AAqBA,QAAMC,WAAW,GAAGrB,WAAW,GAC7B,MAAC,KAAD;AAAO,IAAA,OAAO,EAAC,qCAAf;AAAqD,IAAA,SAAS,EAAE,MAAMC,cAAc,CAAC,KAAD;AAApF,IAD6B,GAE3B,IAFJ;;AAIA,QAAMqB,oBAAoB,GAAIpB,QAAD,IAAc;AACzC,YAAQA,QAAR;AACE,WAAK,CAAL;AACE,eACE,MAAC,qBAAD;AACE,UAAA,QAAQ,EAAEJ,QADZ;AAEE,UAAA,+BAA+B,EAAEM;AAFnC,UADF;;AAMF,WAAK,CAAL;AACE,eAAO,MAAC,sBAAD;AAAwB,UAAA,QAAQ,EAAEN;AAAlC,UAAP;;AACF,WAAK,CAAL;AACE,eAAO,MAAC,sBAAD;AAAwB,UAAA,QAAQ,EAAEA;AAAlC,UAAP;;AACF;AACE;AAbJ;AAeD,GAhBD;;AAkBA,SACE,MAAC,KAAD,QACE,MAAC,IAAD;AAAM,IAAA,KAAK,EAAC;AAAZ,KACE,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAE,MAAMC,qBAAqB,CAAC,KAAD;AAA5C,eADF,EAEE,MAAC,IAAD,QACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAEiB,IAAZ;AAAkB,IAAA,QAAQ,EAAEd,QAA5B;AAAsC,IAAA,QAAQ,EAAEI;AAAhD,KACE,MAAC,IAAD,CAAM,OAAN;AAAc,IAAA,KAAK,EAAEU,IAAI,CAACd,QAAD,CAAJ,CAAegB;AAApC,KACGI,oBAAoB,CAACpB,QAAD,CADvB,CADF,CADF,CAFF,EASGmB,WATH,CADF,CADF;AAeD,CApFD;;AAsFA,eAAexB,aAAf","sourcesContent":["import React, { useState, useCallback, useEffect } from \"react\"\nimport { API, graphqlOperation } from \"aws-amplify\"\nimport { Page, Card, Toast, Frame, Tabs, Button } from \"@shopify/polaris\"\nimport config from \"../aws-exports\"\nimport AcceptedPaymentRequest from \"./AcceptedPaymentRequest\"\nimport PendingPaymentRequest from \"./PendingPaymentRequest\"\nimport DeclinedPaymentRequest from \"./DeclinedPaymentRequest\"\nimport { onUpdatePaymentSubscription, paymentSubscription } from \"../graphql/subscriptions\"\n\nAPI.configure(config)\n\nconst AcceptPayment = ({ branchId, setShowPaymentRequest }) => {\n  const [activeToast, setActiveToast] = useState(false)\n  const [selected, setSelected] = useState(0)\n  const [createUpdatePaymentSubscription, setCreateUpdatePaymentSubscription] = useState(\"\")\n\n  const handleTabChange = useCallback((selectedTabIndex) => setSelected(selectedTabIndex), [])\n\n  useEffect(() => {\n    const listener = API.graphql(graphqlOperation(paymentSubscription)).subscribe({\n      next: (paymentResponse) => {\n        setCreateUpdatePaymentSubscription(paymentResponse)\n      },\n    })\n\n    const onUpdatePayment = API.graphql(graphqlOperation(onUpdatePaymentSubscription)).subscribe({\n      next: (onUpdatePaymentResponse) => {\n        setCreateUpdatePaymentSubscription(onUpdatePaymentResponse)\n      },\n    })\n\n    return () => {\n      listener.unsubscribe()\n      onUpdatePayment.unsubscribe()\n    }\n  }, [])\n\n  const tabs = [\n    {\n      id: \"pending-payments\",\n      content: \"Pending Payment Requests\",\n      accessibilityLabel: \"Pending Requests\",\n      panelID: \"pending-payments-content\",\n    },\n    {\n      id: \"accepted-payments\",\n      content: \"Accepted Payment Requests\",\n      accessibilityLabel: \"Accepted Request\",\n      panelID: \"accepted-payments-content\",\n    },\n    {\n      id: \"declined-payments\",\n      content: \"Declined Payment Requests\",\n      accessibilityLabel: \"Declined Requests\",\n      panelID: \"declined-payments-content\",\n    },\n  ]\n\n  const toastMarkup = activeToast ? (\n    <Toast content=\"Order has been successfully created\" onDismiss={() => setActiveToast(false)} />\n  ) : null\n\n  const renderPaymentRequest = (selected) => {\n    switch (selected) {\n      case 0:\n        return (\n          <PendingPaymentRequest\n            branchId={branchId}\n            createUpdatePaymentSubscription={createUpdatePaymentSubscription}\n          />\n        )\n      case 1:\n        return <AcceptedPaymentRequest branchId={branchId} />\n      case 2:\n        return <DeclinedPaymentRequest branchId={branchId} />\n      default:\n        return\n    }\n  }\n\n  return (\n    <Frame>\n      <Page title=\"Payment Request\">\n        <Button onClick={() => setShowPaymentRequest(false)}>Go back</Button>\n        <Card>\n          <Tabs tabs={tabs} selected={selected} onSelect={handleTabChange}>\n            <Card.Section title={tabs[selected].content}>\n              {renderPaymentRequest(selected)}\n            </Card.Section>\n          </Tabs>\n        </Card>\n        {toastMarkup}\n      </Page>\n    </Frame>\n  )\n}\n\nexport default AcceptPayment\n"]},"metadata":{},"sourceType":"module"}