{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from \"react\";\nimport { API, graphqlOperation } from \"aws-amplify\";\nimport { useQuery } from \"@apollo/client\";\nimport { Modal, Thumbnail, Checkbox, TextStyle } from \"@shopify/polaris\";\nimport { Table, Header } from \"semantic-ui-react\";\nimport { toCurrency } from \"../utils/helper\";\nimport config from \"../aws-exports\";\nimport { listProducts } from \"../graphql/queries\";\nimport { updatePaymentRequest } from \"../graphql/mutation\";\nAPI.configure(config);\n\nvar ProductsList = function ProductsList(_ref) {\n  _s();\n\n  var active = _ref.active,\n      handleChange = _ref.handleChange,\n      paymentRequestId = _ref.paymentRequestId;\n\n  var _useQuery = useQuery(listProducts),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  var _useState = useState([]),\n      rowId = _useState[0],\n      setRowId = _useState[1];\n\n  var _useState2 = useState({\n    products: []\n  }),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  if (loading) {\n    return __jsx(\"div\", null, \"Loading products...\");\n  }\n\n  if (error) {\n    return __jsx(\"div\", null, \"Some error occured\");\n  }\n\n  var acceptPayment = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var paymentResponse;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return API.graphql(graphqlOperation(updatePaymentRequest, {\n                input: {\n                  id: paymentRequestId,\n                  status: \"APPROVED\",\n                  products: state.products.map(function (product) {\n                    return {\n                      originalUnitPrice: product.node.variants.edges[0].node.price,\n                      quantity: 1,\n                      variantId: product.node.variants.edges[0].node.id\n                    };\n                  })\n                }\n              }));\n\n            case 3:\n              paymentResponse = _context.sent;\n              _context.next = 9;\n              break;\n\n            case 6:\n              _context.prev = 6;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 6]]);\n    }));\n\n    return function acceptPayment() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(Modal, {\n    open: active,\n    onClose: handleChange,\n    title: \"Choose products\",\n    primaryAction: {\n      content: \"Proceed\",\n      onAction: function onAction() {\n        acceptPayment();\n        handleChange();\n      }\n    }\n  }, __jsx(Modal.Section, null, __jsx(Table, {\n    celled: true,\n    striped: true,\n    selectable: true\n  }, __jsx(Table.Header, null, __jsx(Table.Row, null, __jsx(Table.HeaderCell, null, \"Products\"), __jsx(Table.HeaderCell, null, \"Description\"), __jsx(Table.HeaderCell, {\n    textAlign: \"center\"\n  }, \"Price\"))), __jsx(Table.Body, null, data && data.products.edges.map(function (product) {\n    return __jsx(Table.Row, {\n      key: product.node.id,\n      onClick: function onClick() {\n        if (rowId.includes(product.node.id)) {\n          setRowId(rowId.filter(function (id) {\n            return id !== product.node.id;\n          }));\n          setState({\n            products: state.products.filter(function (filteredProduct) {\n              return filteredProduct.node.id !== product.node.id;\n            })\n          });\n        } else {\n          setRowId([].concat(_toConsumableArray(rowId), [product.node.id]));\n          setState(_objectSpread(_objectSpread({}, state), {}, {\n            products: [].concat(_toConsumableArray(state.products), [product])\n          }));\n        }\n      }\n    }, __jsx(Table.Cell, null, __jsx(Header, {\n      as: \"h4\",\n      image: true,\n      className: \"product-header\"\n    }, __jsx(Checkbox, {\n      checked: rowId.includes(product.node.id) && true\n    }), __jsx(Thumbnail, {\n      source: product.node.images.edges[0] && product.node.images.edges[0].node.originalSrc,\n      size: \"small\",\n      alt: \"\"\n    }), __jsx(Header.Content, null, product.node.title))), __jsx(Table.Cell, null, __jsx(TextStyle, {\n      variation: \"subdued\"\n    }, product.node.description)), __jsx(Table.Cell, {\n      textAlign: \"center\"\n    }, __jsx(TextStyle, {\n      variation: \"subdued\"\n    }, product.node.variants.edges[0] && toCurrency(product.node.variants.edges[0].node.price))));\n  })), __jsx(Table.Footer, {\n    fullWidth: true\n  }, __jsx(Table.Row, null)))));\n};\n\n_s(ProductsList, \"LKnN1HAELYFSLrWmcPT3UMjxRAk=\", false, function () {\n  return [useQuery];\n});\n\n_c = ProductsList;\nexport default ProductsList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductsList\");","map":{"version":3,"sources":["/var/www/transactions-avanta/components/ProductsList.js"],"names":["React","useState","API","graphqlOperation","useQuery","Modal","Thumbnail","Checkbox","TextStyle","Table","Header","toCurrency","config","listProducts","updatePaymentRequest","configure","ProductsList","active","handleChange","paymentRequestId","loading","error","data","rowId","setRowId","products","state","setState","acceptPayment","graphql","input","id","status","map","product","originalUnitPrice","node","variants","edges","price","quantity","variantId","paymentResponse","console","log","content","onAction","includes","filter","filteredProduct","images","originalSrc","title","description"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,GAAT,EAAcC,gBAAd,QAAsC,aAAtC;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,SAASC,KAAT,EAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,SAArC,QAAsD,kBAAtD;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,mBAA9B;AACA,SAASC,UAAT,QAA2B,iBAA3B;AACA,OAAOC,MAAP,MAAmB,gBAAnB;AACA,SAASC,YAAT,QAA6B,oBAA7B;AACA,SAASC,oBAAT,QAAqC,qBAArC;AAEAZ,GAAG,CAACa,SAAJ,CAAcH,MAAd;;AAEA,IAAMI,YAAY,GAAG,SAAfA,YAAe,OAAgD;AAAA;;AAAA,MAA7CC,MAA6C,QAA7CA,MAA6C;AAAA,MAArCC,YAAqC,QAArCA,YAAqC;AAAA,MAAvBC,gBAAuB,QAAvBA,gBAAuB;;AAAA,kBAClCf,QAAQ,CAACS,YAAD,CAD0B;AAAA,MAC3DO,OAD2D,aAC3DA,OAD2D;AAAA,MAClDC,KADkD,aAClDA,KADkD;AAAA,MAC3CC,IAD2C,aAC3CA,IAD2C;;AAAA,kBAEzCrB,QAAQ,CAAC,EAAD,CAFiC;AAAA,MAE5DsB,KAF4D;AAAA,MAErDC,QAFqD;;AAAA,mBAGzCvB,QAAQ,CAAC;AACjCwB,IAAAA,QAAQ,EAAE;AADuB,GAAD,CAHiC;AAAA,MAG5DC,KAH4D;AAAA,MAGrDC,QAHqD;;AAOnE,MAAIP,OAAJ,EAAa;AACX,WAAO,yCAAP;AACD;;AAED,MAAIC,KAAJ,EAAW;AACT,WAAO,wCAAP;AACD;;AAED,MAAMO,aAAa;AAAA,yEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEY1B,GAAG,CAAC2B,OAAJ,CAC5B1B,gBAAgB,CAACW,oBAAD,EAAuB;AACrCgB,gBAAAA,KAAK,EAAE;AACLC,kBAAAA,EAAE,EAAEZ,gBADC;AAELa,kBAAAA,MAAM,EAAE,UAFH;AAGLP,kBAAAA,QAAQ,EAAEC,KAAK,CAACD,QAAN,CAAeQ,GAAf,CAAmB,UAACC,OAAD;AAAA,2BAAc;AACzCC,sBAAAA,iBAAiB,EAAED,OAAO,CAACE,IAAR,CAAaC,QAAb,CAAsBC,KAAtB,CAA4B,CAA5B,EAA+BF,IAA/B,CAAoCG,KADd;AAEzCC,sBAAAA,QAAQ,EAAE,CAF+B;AAGzCC,sBAAAA,SAAS,EAAEP,OAAO,CAACE,IAAR,CAAaC,QAAb,CAAsBC,KAAtB,CAA4B,CAA5B,EAA+BF,IAA/B,CAAoCL;AAHN,qBAAd;AAAA,mBAAnB;AAHL;AAD8B,eAAvB,CADY,CAFZ;;AAAA;AAEZW,cAAAA,eAFY;AAAA;AAAA;;AAAA;AAAA;AAAA;AAgBlBC,cAAAA,OAAO,CAACC,GAAR;;AAhBkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAbhB,aAAa;AAAA;AAAA;AAAA,KAAnB;;AAoBA,SACE,MAAC,KAAD;AACE,IAAA,IAAI,EAAEX,MADR;AAEE,IAAA,OAAO,EAAEC,YAFX;AAGE,IAAA,KAAK,EAAC,iBAHR;AAIE,IAAA,aAAa,EAAE;AACb2B,MAAAA,OAAO,EAAE,SADI;AAEbC,MAAAA,QAAQ,EAAE,oBAAM;AACdlB,QAAAA,aAAa;AACbV,QAAAA,YAAY;AACb;AALY;AAJjB,KAWE,MAAC,KAAD,CAAO,OAAP,QACE,MAAC,KAAD;AAAO,IAAA,MAAM,MAAb;AAAc,IAAA,OAAO,MAArB;AAAsB,IAAA,UAAU;AAAhC,KACE,MAAC,KAAD,CAAO,MAAP,QACE,MAAC,KAAD,CAAO,GAAP,QACE,MAAC,KAAD,CAAO,UAAP,mBADF,EAEE,MAAC,KAAD,CAAO,UAAP,sBAFF,EAGE,MAAC,KAAD,CAAO,UAAP;AAAkB,IAAA,SAAS,EAAC;AAA5B,aAHF,CADF,CADF,EAQE,MAAC,KAAD,CAAO,IAAP,QACGI,IAAI,IACHA,IAAI,CAACG,QAAL,CAAca,KAAd,CAAoBL,GAApB,CAAwB,UAACC,OAAD;AAAA,WACtB,MAAC,KAAD,CAAO,GAAP;AACE,MAAA,GAAG,EAAEA,OAAO,CAACE,IAAR,CAAaL,EADpB;AAEE,MAAA,OAAO,EAAE,mBAAM;AACb,YAAIR,KAAK,CAACwB,QAAN,CAAeb,OAAO,CAACE,IAAR,CAAaL,EAA5B,CAAJ,EAAqC;AACnCP,UAAAA,QAAQ,CAACD,KAAK,CAACyB,MAAN,CAAa,UAACjB,EAAD;AAAA,mBAAQA,EAAE,KAAKG,OAAO,CAACE,IAAR,CAAaL,EAA5B;AAAA,WAAb,CAAD,CAAR;AACAJ,UAAAA,QAAQ,CAAC;AACPF,YAAAA,QAAQ,EAAEC,KAAK,CAACD,QAAN,CAAeuB,MAAf,CACR,UAACC,eAAD;AAAA,qBAAqBA,eAAe,CAACb,IAAhB,CAAqBL,EAArB,KAA4BG,OAAO,CAACE,IAAR,CAAaL,EAA9D;AAAA,aADQ;AADH,WAAD,CAAR;AAKD,SAPD,MAOO;AACLP,UAAAA,QAAQ,8BAAKD,KAAL,IAAYW,OAAO,CAACE,IAAR,CAAaL,EAAzB,GAAR;AACAJ,UAAAA,QAAQ,iCACHD,KADG;AAEND,YAAAA,QAAQ,+BAAMC,KAAK,CAACD,QAAZ,IAAsBS,OAAtB;AAFF,aAAR;AAID;AACF;AAjBH,OAkBE,MAAC,KAAD,CAAO,IAAP,QACE,MAAC,MAAD;AAAQ,MAAA,EAAE,EAAC,IAAX;AAAgB,MAAA,KAAK,MAArB;AAAsB,MAAA,SAAS,EAAC;AAAhC,OACE,MAAC,QAAD;AAAU,MAAA,OAAO,EAAEX,KAAK,CAACwB,QAAN,CAAeb,OAAO,CAACE,IAAR,CAAaL,EAA5B,KAAmC;AAAtD,MADF,EAEE,MAAC,SAAD;AACE,MAAA,MAAM,EACJG,OAAO,CAACE,IAAR,CAAac,MAAb,CAAoBZ,KAApB,CAA0B,CAA1B,KACAJ,OAAO,CAACE,IAAR,CAAac,MAAb,CAAoBZ,KAApB,CAA0B,CAA1B,EAA6BF,IAA7B,CAAkCe,WAHtC;AAKE,MAAA,IAAI,EAAC,OALP;AAME,MAAA,GAAG,EAAC;AANN,MAFF,EAUE,MAAC,MAAD,CAAQ,OAAR,QAAiBjB,OAAO,CAACE,IAAR,CAAagB,KAA9B,CAVF,CADF,CAlBF,EAgCE,MAAC,KAAD,CAAO,IAAP,QACE,MAAC,SAAD;AAAW,MAAA,SAAS,EAAC;AAArB,OAAgClB,OAAO,CAACE,IAAR,CAAaiB,WAA7C,CADF,CAhCF,EAmCE,MAAC,KAAD,CAAO,IAAP;AAAY,MAAA,SAAS,EAAC;AAAtB,OACE,MAAC,SAAD;AAAW,MAAA,SAAS,EAAC;AAArB,OACGnB,OAAO,CAACE,IAAR,CAAaC,QAAb,CAAsBC,KAAtB,CAA4B,CAA5B,KACC3B,UAAU,CAACuB,OAAO,CAACE,IAAR,CAAaC,QAAb,CAAsBC,KAAtB,CAA4B,CAA5B,EAA+BF,IAA/B,CAAoCG,KAArC,CAFd,CADF,CAnCF,CADsB;AAAA,GAAxB,CAFJ,CARF,EAuDE,MAAC,KAAD,CAAO,MAAP;AAAc,IAAA,SAAS;AAAvB,KACE,MAAC,KAAD,CAAO,GAAP,OADF,CAvDF,CADF,CAXF,CADF;AA2ED,CA9GD;;GAAMvB,Y;UAC6BZ,Q;;;KAD7BY,Y;AAgHN,eAAeA,YAAf","sourcesContent":["import React, { useState } from \"react\"\nimport { API, graphqlOperation } from \"aws-amplify\"\nimport { useQuery } from \"@apollo/client\"\nimport { Modal, Thumbnail, Checkbox, TextStyle } from \"@shopify/polaris\"\nimport { Table, Header } from \"semantic-ui-react\"\nimport { toCurrency } from \"../utils/helper\"\nimport config from \"../aws-exports\"\nimport { listProducts } from \"../graphql/queries\"\nimport { updatePaymentRequest } from \"../graphql/mutation\"\n\nAPI.configure(config)\n\nconst ProductsList = ({ active, handleChange, paymentRequestId }) => {\n  const { loading, error, data } = useQuery(listProducts)\n  const [rowId, setRowId] = useState([])\n  const [state, setState] = useState({\n    products: [],\n  })\n\n  if (loading) {\n    return <div>Loading products...</div>\n  }\n\n  if (error) {\n    return <div>Some error occured</div>\n  }\n\n  const acceptPayment = async () => {\n    try {\n      const paymentResponse = await API.graphql(\n        graphqlOperation(updatePaymentRequest, {\n          input: {\n            id: paymentRequestId,\n            status: \"APPROVED\",\n            products: state.products.map((product) => ({\n              originalUnitPrice: product.node.variants.edges[0].node.price,\n              quantity: 1,\n              variantId: product.node.variants.edges[0].node.id,\n            })),\n          },\n        })\n      )\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  return (\n    <Modal\n      open={active}\n      onClose={handleChange}\n      title=\"Choose products\"\n      primaryAction={{\n        content: \"Proceed\",\n        onAction: () => {\n          acceptPayment()\n          handleChange()\n        },\n      }}>\n      <Modal.Section>\n        <Table celled striped selectable>\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell>Products</Table.HeaderCell>\n              <Table.HeaderCell>Description</Table.HeaderCell>\n              <Table.HeaderCell textAlign=\"center\">Price</Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            {data &&\n              data.products.edges.map((product) => (\n                <Table.Row\n                  key={product.node.id}\n                  onClick={() => {\n                    if (rowId.includes(product.node.id)) {\n                      setRowId(rowId.filter((id) => id !== product.node.id))\n                      setState({\n                        products: state.products.filter(\n                          (filteredProduct) => filteredProduct.node.id !== product.node.id\n                        ),\n                      })\n                    } else {\n                      setRowId([...rowId, product.node.id])\n                      setState({\n                        ...state,\n                        products: [...state.products, product],\n                      })\n                    }\n                  }}>\n                  <Table.Cell>\n                    <Header as=\"h4\" image className=\"product-header\">\n                      <Checkbox checked={rowId.includes(product.node.id) && true} />\n                      <Thumbnail\n                        source={\n                          product.node.images.edges[0] &&\n                          product.node.images.edges[0].node.originalSrc\n                        }\n                        size=\"small\"\n                        alt=\"\"\n                      />\n                      <Header.Content>{product.node.title}</Header.Content>\n                    </Header>\n                  </Table.Cell>\n                  <Table.Cell>\n                    <TextStyle variation=\"subdued\">{product.node.description}</TextStyle>\n                  </Table.Cell>\n                  <Table.Cell textAlign=\"center\">\n                    <TextStyle variation=\"subdued\">\n                      {product.node.variants.edges[0] &&\n                        toCurrency(product.node.variants.edges[0].node.price)}\n                    </TextStyle>\n                  </Table.Cell>\n                </Table.Row>\n              ))}\n          </Table.Body>\n          <Table.Footer fullWidth>\n            <Table.Row></Table.Row>\n          </Table.Footer>\n        </Table>\n      </Modal.Section>\n    </Modal>\n  )\n}\n\nexport default ProductsList\n"]},"metadata":{},"sourceType":"module"}