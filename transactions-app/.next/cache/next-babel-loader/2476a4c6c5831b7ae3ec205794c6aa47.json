{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState, useEffect } from 'react';\nimport { Auth, Hub } from 'aws-amplify';\nconst initialFormState = {\n  username: '',\n  password: '',\n  email: '',\n  authCode: '',\n  formType: 'signUp'\n};\n\nconst Profile = () => {\n  const {\n    0: formState,\n    1: updateFormState\n  } = useState(initialFormState);\n  const {\n    0: user,\n    1: updateUser\n  } = useState(null);\n  useEffect(() => {\n    checkUser();\n  }, []);\n\n  const checkUser = async () => {\n    try {\n      const user = await Auth.currentAuthenticatedUser();\n\n      if (!user) {\n        return;\n      }\n\n      updateUser(user);\n      updateFormState(() => _objectSpread(_objectSpread({}, formState), {}, {\n        formType: 'signedIn'\n      }));\n      console.log('User: ', user);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const onChange = e => {\n    e.persist();\n    updateFormState(() => _objectSpread(_objectSpread({}, formState), {}, {\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  const signUp = async () => {\n    const {\n      username,\n      email,\n      password\n    } = formState;\n    await Auth.signUp({\n      username,\n      password,\n      attributes: {\n        email\n      }\n    });\n    updateFormState(() => _objectSpread(_objectSpread({}, formState), {}, {\n      formType: 'confirmSignUp'\n    }));\n  };\n\n  const signIn = async () => {\n    const {\n      username,\n      password\n    } = formState;\n    const signedInUser = await Auth.signIn(username, password);\n    console.log('SignedIn user: ', signedInUser);\n    updateFormState(() => _objectSpread(_objectSpread({}, formState), {}, {\n      formType: 'signedIn'\n    }));\n    const currentAuthenticatedUser = await Auth.currentAuthenticatedUser();\n    console.log('Current authenticated user', currentAuthenticatedUser);\n  };\n\n  const confirmSignUp = async () => {\n    const {\n      username,\n      authCode\n    } = formState;\n    Auth.confirmSignUp(username, authCode);\n    updateFormState(() => _objectSpread(_objectSpread({}, formState), {}, {\n      formType: 'signIn'\n    }));\n  };\n\n  const {\n    formType\n  } = formState;\n  console.log('State data', formState);\n  console.log('User state: ', user);\n  return __jsx(\"div\", null, formType === 'signUp' && __jsx(\"div\", null, __jsx(\"input\", {\n    name: \"username\",\n    placeholder: \"username\",\n    onChange: onChange\n  }), __jsx(\"input\", {\n    name: \"password\",\n    type: \"password\",\n    placeholder: \"password\",\n    onChange: onChange\n  }), __jsx(\"input\", {\n    name: \"email\",\n    placeholder: \"email\",\n    onChange: onChange\n  }), __jsx(\"button\", {\n    onClick: signUp\n  }, \"Sign Up\")), formType === 'signIn' && __jsx(\"div\", null, __jsx(\"input\", {\n    name: \"username\",\n    placeholder: \"username\",\n    onChange: onChange\n  }), __jsx(\"input\", {\n    type: \"password\",\n    type: \"password\",\n    placeholder: \"password\",\n    onChange: onChange\n  }), __jsx(\"button\", {\n    onClick: signIn\n  }, \"Sign In\")), formType === 'confirmSignUp' && __jsx(\"div\", null, __jsx(\"input\", {\n    name: \"authCode\",\n    placeholder: \"Confirmation code\",\n    onChange: onChange\n  }), __jsx(\"button\", {\n    onClick: confirmSignUp\n  }, \"Confirm sign up\")), formType === 'signedIn' && __jsx(\"div\", null, __jsx(\"p\", null, \"You've signed in successfully\"), __jsx(\"button\", {\n    onClick: () => Auth.signOut()\n  }, \"Sign out\")));\n};\n\nexport default Profile;","map":{"version":3,"sources":["C:/Users/Admin/Desktop/transactions/pages/profile.js"],"names":["useState","useEffect","Auth","Hub","initialFormState","username","password","email","authCode","formType","Profile","formState","updateFormState","user","updateUser","checkUser","currentAuthenticatedUser","console","log","error","onChange","e","persist","target","name","value","signUp","attributes","signIn","signedInUser","confirmSignUp","signOut"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\r\nimport { Auth, Hub } from 'aws-amplify'\r\n\r\nconst initialFormState = {\r\n    username: '',\r\n    password: '',\r\n    email: '',\r\n    authCode: '',\r\n    formType: 'signUp'\r\n}\r\n\r\nconst Profile = () => {\r\n    const [formState, updateFormState] = useState(initialFormState)\r\n    const [user, updateUser] = useState(null)\r\n\r\n    useEffect(() => {\r\n        checkUser()\r\n    }, [])\r\n\r\n    const checkUser = async () => {\r\n        try {\r\n            const user = await Auth.currentAuthenticatedUser()\r\n\r\n            if (!user) {\r\n                return\r\n            }\r\n\r\n            updateUser(user)\r\n            updateFormState(() => ({ ...formState, formType: 'signedIn' }))\r\n            console.log('User: ', user)\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    const onChange = (e) => {\r\n        e.persist()\r\n        updateFormState(() => ({ ...formState, [e.target.name]: e.target.value }))\r\n    }\r\n\r\n    const signUp = async () => {\r\n        const { username, email, password } = formState\r\n\r\n        await Auth.signUp({ username, password, attributes: { email } })\r\n        updateFormState(() => ({ ...formState, formType: 'confirmSignUp' }))\r\n    }\r\n\r\n    const signIn = async () => {\r\n        const { username, password } = formState\r\n\r\n        const signedInUser = await Auth.signIn(username, password)\r\n\r\n        console.log('SignedIn user: ', signedInUser)\r\n        updateFormState(() => ({ ...formState, formType: 'signedIn' }))\r\n\r\n        const currentAuthenticatedUser = await Auth.currentAuthenticatedUser()\r\n\r\n        console.log('Current authenticated user', currentAuthenticatedUser)\r\n    }\r\n\r\n    const confirmSignUp = async () => {\r\n        const { username, authCode } = formState\r\n\r\n        Auth.confirmSignUp(username, authCode)\r\n        updateFormState(() => ({ ...formState, formType: 'signIn' }))\r\n    }\r\n\r\n    const { formType } = formState\r\n\r\n    console.log('State data', formState)\r\n    console.log('User state: ', user)\r\n\r\n    return (\r\n        <div>\r\n            {formType === 'signUp' && (\r\n                <div>\r\n                    <input name=\"username\" placeholder=\"username\" onChange={onChange} />\r\n                    <input\r\n                        name=\"password\"\r\n                        type=\"password\"\r\n                        placeholder=\"password\"\r\n                        onChange={onChange}\r\n                    />\r\n                    <input name=\"email\" placeholder=\"email\" onChange={onChange} />\r\n                    <button onClick={signUp}>Sign Up</button>\r\n                </div>\r\n            )}\r\n            {formType === 'signIn' && (\r\n                <div>\r\n                    <input name=\"username\" placeholder=\"username\" onChange={onChange} />\r\n                    <input\r\n                        type=\"password\"\r\n                        type=\"password\"\r\n                        placeholder=\"password\"\r\n                        onChange={onChange}\r\n                    />\r\n                    <button onClick={signIn}>Sign In</button>\r\n                </div>\r\n            )}\r\n            {formType === 'confirmSignUp' && (\r\n                <div>\r\n                    <input name=\"authCode\" placeholder=\"Confirmation code\" onChange={onChange} />\r\n                    <button onClick={confirmSignUp}>Confirm sign up</button>\r\n                </div>\r\n            )}\r\n\r\n            {formType === 'signedIn' && (\r\n                <div>\r\n                    <p>You've signed in successfully</p>\r\n                    <button onClick={() => Auth.signOut()}>Sign out</button>\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile\r\n"]},"metadata":{},"sourceType":"module"}