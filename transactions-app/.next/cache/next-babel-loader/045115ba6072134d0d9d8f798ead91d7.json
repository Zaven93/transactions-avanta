{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useCallback } from \"react\";\nimport { Card, Button, TextField, Form, FormLayout } from \"@shopify/polaris\";\nimport { useMutation } from \"react-query\";\nimport { useForm } from \"react-hook-form\";\nimport { AuthService } from \"../core/services\";\nimport Amplify from \"aws-amplify\";\nimport { useLogin } from \"../core/hooks\";\nimport config from \"../aws-exports\";\nAmplify.configure(config);\nconst Profile = React.forwardRef(({\n  setUser\n}, ref) => {\n  const {\n    0: username,\n    1: setUsername\n  } = useState(\"\");\n  const {\n    0: password,\n    1: setPassword\n  } = useState(\"\");\n  const {\n    handleSubmit,\n    errors,\n    register\n  } = useForm();\n  const {\n    login,\n    status,\n    data,\n    error\n  } = useLogin();\n  const onChangeUsername = useCallback(newValue => {\n    setUsername(newValue);\n  }, []);\n  const onChangePassword = useCallback(newValue => {\n    setPassword(newValue);\n  }, []); // const handleSubmit = (e) => {\n  //   e.preventDefault()\n  //   login({ username, password })\n  //   setUser(data)\n  // }\n\n  return __jsx(\"div\", {\n    className: \"authentication-container\"\n  }, __jsx(Card, {\n    title: \"Log into your branch\",\n    sectioned: true\n  }, __jsx(Form, {\n    onSubmit: handleSubmit(login)\n  }, __jsx(FormLayout, null, __jsx(\"input\", {\n    ref: register({\n      required: \"Username is required\"\n    }),\n    name: \"username\",\n    placeholder: \"username\"\n  }), errors.username && errors.username.message, __jsx(\"input\", {\n    ref: register({\n      required: \"Password is required\"\n    }),\n    name: \"password\",\n    placeholder: \"password\"\n  }), errors.password && errors.password.message, __jsx(Button, {\n    primary: true,\n    submit: true\n  }, \"Login\")))));\n});\nexport default Profile;","map":{"version":3,"sources":["/var/www/transactions-avanta/components/Login.js"],"names":["useState","useCallback","Card","Button","TextField","Form","FormLayout","useMutation","useForm","AuthService","Amplify","useLogin","config","configure","Profile","React","forwardRef","setUser","ref","username","setUsername","password","setPassword","handleSubmit","errors","register","login","status","data","error","onChangeUsername","newValue","onChangePassword","required","message"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,WAAnB,QAAsC,OAAtC;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,SAAvB,EAAkCC,IAAlC,EAAwCC,UAAxC,QAA0D,kBAA1D;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,OAAP,MAAoB,aAApB;AACA,SAASC,QAAT,QAAyB,eAAzB;AACA,OAAOC,MAAP,MAAmB,gBAAnB;AAEAF,OAAO,CAACG,SAAR,CAAkBD,MAAlB;AAEA,MAAME,OAAO,GAAGC,KAAK,CAACC,UAAN,CAAiB,CAAC;AAAEC,EAAAA;AAAF,CAAD,EAAcC,GAAd,KAAsB;AACrD,QAAM;AAAA,OAACC,QAAD;AAAA,OAAWC;AAAX,MAA0BpB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM;AAAA,OAACqB,QAAD;AAAA,OAAWC;AAAX,MAA0BtB,QAAQ,CAAC,EAAD,CAAxC;AAEA,QAAM;AAAEuB,IAAAA,YAAF;AAAgBC,IAAAA,MAAhB;AAAwBC,IAAAA;AAAxB,MAAqCjB,OAAO,EAAlD;AACA,QAAM;AAAEkB,IAAAA,KAAF;AAASC,IAAAA,MAAT;AAAiBC,IAAAA,IAAjB;AAAuBC,IAAAA;AAAvB,MAAiClB,QAAQ,EAA/C;AAEA,QAAMmB,gBAAgB,GAAG7B,WAAW,CAAE8B,QAAD,IAAc;AACjDX,IAAAA,WAAW,CAACW,QAAD,CAAX;AACD,GAFmC,EAEjC,EAFiC,CAApC;AAIA,QAAMC,gBAAgB,GAAG/B,WAAW,CAAE8B,QAAD,IAAc;AACjDT,IAAAA,WAAW,CAACS,QAAD,CAAX;AACD,GAFmC,EAEjC,EAFiC,CAApC,CAXqD,CAerD;AACA;AACA;AACA;AACA;;AAEA,SACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE,MAAC,IAAD;AAAM,IAAA,KAAK,EAAC,sBAAZ;AAAmC,IAAA,SAAS;AAA5C,KACE,MAAC,IAAD;AAAM,IAAA,QAAQ,EAAER,YAAY,CAACG,KAAD;AAA5B,KACE,MAAC,UAAD,QACE;AACE,IAAA,GAAG,EAAED,QAAQ,CAAC;AAAEQ,MAAAA,QAAQ,EAAE;AAAZ,KAAD,CADf;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,WAAW,EAAC;AAHd,IADF,EAMGT,MAAM,CAACL,QAAP,IAAmBK,MAAM,CAACL,QAAP,CAAgBe,OANtC,EAOE;AACE,IAAA,GAAG,EAAET,QAAQ,CAAC;AAAEQ,MAAAA,QAAQ,EAAE;AAAZ,KAAD,CADf;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,WAAW,EAAC;AAHd,IAPF,EAYGT,MAAM,CAACH,QAAP,IAAmBG,MAAM,CAACH,QAAP,CAAgBa,OAZtC,EA8BE,MAAC,MAAD;AAAQ,IAAA,OAAO,MAAf;AAAgB,IAAA,MAAM;AAAtB,aA9BF,CADF,CADF,CADF,CADF;AA0CD,CA/De,CAAhB;AAiEA,eAAepB,OAAf","sourcesContent":["import { useState, useCallback } from \"react\"\nimport { Card, Button, TextField, Form, FormLayout } from \"@shopify/polaris\"\nimport { useMutation } from \"react-query\"\nimport { useForm } from \"react-hook-form\"\nimport { AuthService } from \"../core/services\"\nimport Amplify from \"aws-amplify\"\nimport { useLogin } from \"../core/hooks\"\nimport config from \"../aws-exports\"\n\nAmplify.configure(config)\n\nconst Profile = React.forwardRef(({ setUser }, ref) => {\n  const [username, setUsername] = useState(\"\")\n  const [password, setPassword] = useState(\"\")\n\n  const { handleSubmit, errors, register } = useForm()\n  const { login, status, data, error } = useLogin()\n\n  const onChangeUsername = useCallback((newValue) => {\n    setUsername(newValue)\n  }, [])\n\n  const onChangePassword = useCallback((newValue) => {\n    setPassword(newValue)\n  }, [])\n\n  // const handleSubmit = (e) => {\n  //   e.preventDefault()\n  //   login({ username, password })\n  //   setUser(data)\n  // }\n\n  return (\n    <div className=\"authentication-container\">\n      <Card title=\"Log into your branch\" sectioned>\n        <Form onSubmit={handleSubmit(login)}>\n          <FormLayout>\n            <input\n              ref={register({ required: \"Username is required\" })}\n              name=\"username\"\n              placeholder=\"username\"\n            />\n            {errors.username && errors.username.message}\n            <input\n              ref={register({ required: \"Password is required\" })}\n              name=\"password\"\n              placeholder=\"password\"\n            />\n            {errors.password && errors.password.message}\n            {/* <TextField\n              ref={register({ required: \"Username is required\" })}\n              name=\"username\"\n              // value={username}\n              // onChange={onChangeUsername}\n              label=\"Username\"\n            />\n            {errors.username && errors.username.message}\n            <TextField\n              ref={register({ required: \"Password is required\" })}\n              name=\"password\"\n              type=\"password\"\n              // value={password}\n              // onChange={onChangePassword}\n              label=\"Password\"\n            />\n            {errors.password && errors.password.message} */}\n            <Button primary submit>\n              Login\n            </Button>\n          </FormLayout>\n        </Form>\n      </Card>\n    </div>\n  )\n})\n\nexport default Profile\n"]},"metadata":{},"sourceType":"module"}