{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    query getBranch($id: ID!) {\\n        getBranch(id: $id) {\\n            branchName\\n            adminId\\n            id\\n            branchProducts {\\n                items {\\n                    branchId\\n                    createdAt\\n                    id\\n                    productId\\n                    tags\\n                    updatedAt\\n                }\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport createApp from '@shopify/app-bridge';\nimport { Redirect } from '@shopify/app-bridge/actions';\nimport { ClientApplication } from '@shopify/app-bridge';\nimport { API, graphqlOperation } from 'aws-amplify';\nimport gql from 'graphql-tag';\nimport { Page, Button, Icon } from '@shopify/polaris';\nimport { TransactionMajorMonotone } from '@shopify/polaris-icons';\nimport config from '../../aws-exports';\nimport BranchContext from '../../context/branchContext';\nAPI.configure(config);\nvar getBranchById = gql(_templateObject());\n\nvar Branch = function Branch() {\n  // const [branchInfo, setBranchInfo] = useState('')\n  // const getBranch = async () => {\n  //     try {\n  //         const branch = await API.graphql(\n  //             graphqlOperation(getBranchById, { id: localStorage.getItem('branchId') })\n  //         )\n  //         setBranchInfo(branch.data.getBranch)\n  //     } catch (error) {\n  //         console.log(error)\n  //     }\n  // }\n  // useEffect(() => {\n  //     console.log('Localstorage branch id', localStorage.getItem('branchId'))\n  //     console.log('Localstorage branch id', typeof localStorage.getItem('branchId'))\n  //     getBranch()\n  // }, [])\n  // return <Page title={branchInfo && branchInfo.branchName}></Page>\n  return __jsx(\"div\", null, \"Hello from branch info\");\n};\n\n_c = Branch;\nexport default Branch;\n\nvar _c;\n\n$RefreshReg$(_c, \"Branch\");","map":{"version":3,"sources":["C:/Users/Admin/Desktop/transactions/pages/branch/[branchId].js"],"names":["React","useState","useEffect","useRouter","createApp","Redirect","ClientApplication","API","graphqlOperation","gql","Page","Button","Icon","TransactionMajorMonotone","config","BranchContext","configure","getBranchById","Branch"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,SAASC,QAAT,QAAyB,6BAAzB;AACA,SAASC,iBAAT,QAAkC,qBAAlC;AACA,SAASC,GAAT,EAAcC,gBAAd,QAAsC,aAAtC;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,IAAvB,QAAmC,kBAAnC;AACA,SAASC,wBAAT,QAAyC,wBAAzC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AAEAR,GAAG,CAACS,SAAJ,CAAcF,MAAd;AAEA,IAAMG,aAAa,GAAGR,GAAH,mBAAnB;;AAoBA,IAAMS,MAAM,GAAG,SAATA,MAAS,GAAM;AACjB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA,SAAO,4CAAP;AACH,CAtBD;;KAAMA,M;AAwBN,eAAeA,MAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { useRouter } from 'next/router'\r\nimport createApp from '@shopify/app-bridge'\r\nimport { Redirect } from '@shopify/app-bridge/actions'\r\nimport { ClientApplication } from '@shopify/app-bridge'\r\nimport { API, graphqlOperation } from 'aws-amplify'\r\nimport gql from 'graphql-tag'\r\nimport { Page, Button, Icon } from '@shopify/polaris'\r\nimport { TransactionMajorMonotone } from '@shopify/polaris-icons'\r\nimport config from '../../aws-exports'\r\nimport BranchContext from '../../context/branchContext'\r\n\r\nAPI.configure(config)\r\n\r\nconst getBranchById = gql`\r\n    query getBranch($id: ID!) {\r\n        getBranch(id: $id) {\r\n            branchName\r\n            adminId\r\n            id\r\n            branchProducts {\r\n                items {\r\n                    branchId\r\n                    createdAt\r\n                    id\r\n                    productId\r\n                    tags\r\n                    updatedAt\r\n                }\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nconst Branch = () => {\r\n    // const [branchInfo, setBranchInfo] = useState('')\r\n\r\n    // const getBranch = async () => {\r\n    //     try {\r\n    //         const branch = await API.graphql(\r\n    //             graphqlOperation(getBranchById, { id: localStorage.getItem('branchId') })\r\n    //         )\r\n    //         setBranchInfo(branch.data.getBranch)\r\n    //     } catch (error) {\r\n    //         console.log(error)\r\n    //     }\r\n    // }\r\n\r\n    // useEffect(() => {\r\n    //     console.log('Localstorage branch id', localStorage.getItem('branchId'))\r\n    //     console.log('Localstorage branch id', typeof localStorage.getItem('branchId'))\r\n    //     getBranch()\r\n    // }, [])\r\n\r\n    // return <Page title={branchInfo && branchInfo.branchName}></Page>\r\n    return <div>Hello from branch info</div>\r\n}\r\n\r\nexport default Branch\r\n"]},"metadata":{},"sourceType":"module"}