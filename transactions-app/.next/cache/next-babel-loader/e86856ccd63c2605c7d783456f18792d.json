{"ast":null,"code":"import gql from \"graphql-tag\";\nconst createDraftOrder = gql`\n  mutation CreateOrder($input: DraftOrderInput!) {\n    draftOrderCreate(input: $input) {\n      draftOrder {\n        id\n        customer {\n          id\n        }\n        email\n        lineItems(first: 10) {\n          edges {\n            node {\n              title\n              quantity\n              originalUnitPrice\n              variant {\n                id\n                price\n                title\n                product {\n                  tags\n                  title\n                  images(first: 5) {\n                    edges {\n                      node {\n                        originalSrc\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\nexport const completeOrder = gql`\n  mutation CompleteOrder($id: ID!) {\n    draftOrderComplete(id: $id, paymentPending: true) {\n      draftOrder {\n        customer {\n          id\n        }\n        email\n        name\n      }\n    }\n  }\n`;\nexport const updatePaymentRequest = gql`\n  mutation updatePaymentRequest($input: UpdatePaymentRequestInput!) {\n    updatePaymentRequest(input: $input) {\n      bonusAmount\n      customerId\n      id\n      orderId\n      status\n      products {\n        originalUnitPrice\n        quantity\n        variantId\n      }\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const createBranch = gql`\n  mutation createBranch($input: CreateBranchInput!) {\n    createBranch(input: $input) {\n      id\n      adminId\n      branchName\n    }\n  }\n`;\nexport const removeBranch = gql`\n  mutation deleteBranch($input: DeleteBranchInput!) {\n    deleteBranch(input: $input) {\n      id\n    }\n  }\n`;\nexport const deleteTransaction = gql`\n  mutation deleteTransaction($input: DeleteTransactionInput!) {\n    deleteTransaction(input: $input) {\n      id\n    }\n  }\n`;\nexport const deleteBranchProduct = gql`\n  mutation deleteBranchProduct($input: DeleteBranchProductInput!) {\n    deleteBranchProduct(input: $input) {\n      id\n    }\n  }\n`;\nexport const deletePaymentRequest = gql`\n  mutation deletePaymentRequest($input: DeletePaymentRequestInput!) {\n    deletePaymentRequest(input: $input) {\n      id\n    }\n  }\n`;\nexport const createBranchProduct = gql`\n  mutation createBranchProduct($input: CreateBranchProductInput!) {\n    createBranchProduct(input: $input) {\n      id\n      branchId\n      productId\n      tags\n    }\n  }\n`;\nexport const productUpdate = gql`\n  mutation productUpdate($input: ProductInput!) {\n    productUpdate(input: $input) {\n      product {\n        id\n        metafields(first: 100) {\n          edges {\n            node {\n              namespace\n              key\n              value\n            }\n          }\n        }\n      }\n    }\n  }\n`;\nexport const updateBranchProduct = gql`\n  mutation updateBranchProduct($input: UpdateBranchProductInput!) {\n    updateBranchProduct(input: $input) {\n      id\n      tags\n      branchId\n      productId\n    }\n  }\n`;","map":{"version":3,"sources":["/var/www/transactions-avanta/graphql/mutation.js"],"names":["gql","createDraftOrder","completeOrder","updatePaymentRequest","createBranch","removeBranch","deleteTransaction","deleteBranchProduct","deletePaymentRequest","createBranchProduct","productUpdate","updateBranchProduct"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,aAAhB;AAEA,MAAMC,gBAAgB,GAAGD,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAA7B;AAuCA,OAAO,MAAME,aAAa,GAAGF,GAAI;;;;;;;;;;;;CAA1B;AAcP,OAAO,MAAMG,oBAAoB,GAAGH,GAAI;;;;;;;;;;;;;;;;;CAAjC;AAkBP,OAAO,MAAMI,YAAY,GAAGJ,GAAI;;;;;;;;CAAzB;AAUP,OAAO,MAAMK,YAAY,GAAGL,GAAI;;;;;;CAAzB;AAQP,OAAO,MAAMM,iBAAiB,GAAGN,GAAI;;;;;;CAA9B;AAQP,OAAO,MAAMO,mBAAmB,GAAGP,GAAI;;;;;;CAAhC;AAQP,OAAO,MAAMQ,oBAAoB,GAAGR,GAAI;;;;;;CAAjC;AAQP,OAAO,MAAMS,mBAAmB,GAAGT,GAAI;;;;;;;;;CAAhC;AAWP,OAAO,MAAMU,aAAa,GAAGV,GAAI;;;;;;;;;;;;;;;;;CAA1B;AAmBP,OAAO,MAAMW,mBAAmB,GAAGX,GAAI;;;;;;;;;CAAhC","sourcesContent":["import gql from \"graphql-tag\"\n\nconst createDraftOrder = gql`\n  mutation CreateOrder($input: DraftOrderInput!) {\n    draftOrderCreate(input: $input) {\n      draftOrder {\n        id\n        customer {\n          id\n        }\n        email\n        lineItems(first: 10) {\n          edges {\n            node {\n              title\n              quantity\n              originalUnitPrice\n              variant {\n                id\n                price\n                title\n                product {\n                  tags\n                  title\n                  images(first: 5) {\n                    edges {\n                      node {\n                        originalSrc\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nexport const completeOrder = gql`\n  mutation CompleteOrder($id: ID!) {\n    draftOrderComplete(id: $id, paymentPending: true) {\n      draftOrder {\n        customer {\n          id\n        }\n        email\n        name\n      }\n    }\n  }\n`\n\nexport const updatePaymentRequest = gql`\n  mutation updatePaymentRequest($input: UpdatePaymentRequestInput!) {\n    updatePaymentRequest(input: $input) {\n      bonusAmount\n      customerId\n      id\n      orderId\n      status\n      products {\n        originalUnitPrice\n        quantity\n        variantId\n      }\n      createdAt\n      updatedAt\n    }\n  }\n`\nexport const createBranch = gql`\n  mutation createBranch($input: CreateBranchInput!) {\n    createBranch(input: $input) {\n      id\n      adminId\n      branchName\n    }\n  }\n`\n\nexport const removeBranch = gql`\n  mutation deleteBranch($input: DeleteBranchInput!) {\n    deleteBranch(input: $input) {\n      id\n    }\n  }\n`\n\nexport const deleteTransaction = gql`\n  mutation deleteTransaction($input: DeleteTransactionInput!) {\n    deleteTransaction(input: $input) {\n      id\n    }\n  }\n`\n\nexport const deleteBranchProduct = gql`\n  mutation deleteBranchProduct($input: DeleteBranchProductInput!) {\n    deleteBranchProduct(input: $input) {\n      id\n    }\n  }\n`\n\nexport const deletePaymentRequest = gql`\n  mutation deletePaymentRequest($input: DeletePaymentRequestInput!) {\n    deletePaymentRequest(input: $input) {\n      id\n    }\n  }\n`\n\nexport const createBranchProduct = gql`\n  mutation createBranchProduct($input: CreateBranchProductInput!) {\n    createBranchProduct(input: $input) {\n      id\n      branchId\n      productId\n      tags\n    }\n  }\n`\n\nexport const productUpdate = gql`\n  mutation productUpdate($input: ProductInput!) {\n    productUpdate(input: $input) {\n      product {\n        id\n        metafields(first: 100) {\n          edges {\n            node {\n              namespace\n              key\n              value\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nexport const updateBranchProduct = gql`\n  mutation updateBranchProduct($input: UpdateBranchProductInput!) {\n    updateBranchProduct(input: $input) {\n      id\n      tags\n      branchId\n      productId\n    }\n  }\n`\n"]},"metadata":{},"sourceType":"module"}