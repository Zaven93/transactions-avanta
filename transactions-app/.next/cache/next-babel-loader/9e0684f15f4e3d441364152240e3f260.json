{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { API, graphqlOperation } from 'aws-amplify';\nimport config from '../aws-exports';\nimport gql from 'graphql-tag';\nAPI.configure(config);\nconst listTransactions = gql`\n    query listTransactions($limit: Int, $nextToken: String) {\n        listTransactions(limit: $limit, nextToken: $nextToken) {\n            nextToken\n            items {\n                id\n                totalPrice\n                totalBonusAmount\n                currency\n                products {\n                    id\n                    title\n                    bonusPercentage\n                    priceAmount\n                    priceCurrency\n                    image\n                }\n                customer {\n                    id\n                    firstName\n                    lastName\n                    phone\n                    email\n                }\n                createdAt\n            }\n        }\n    }\n`;\n\nconst Index = ({\n  transactions\n}) => {\n  console.log('Transactions', transactions);\n  return __jsx(\"div\", null, \"Main page\");\n};\n\nIndex.getInitialProps = async () => {\n  let result;\n\n  try {\n    result = await API.graphql(graphqlOperation(listTransactions));\n  } catch (error) {\n    console.log(error);\n  }\n\n  if (result.errors) {\n    console.warn('Failed to fetch todolist. ', result.errors);\n    return {\n      transactions: []\n    };\n  }\n\n  if (result.data !== null) {\n    return {\n      transactions: result.data\n    };\n  }\n};\n\nexport default Index;","map":{"version":3,"sources":["C:/Users/Admin/Desktop/transactions/pages/index.js"],"names":["API","graphqlOperation","config","gql","configure","listTransactions","Index","transactions","console","log","getInitialProps","result","graphql","error","errors","warn","data"],"mappings":";;AAAA,SAASA,GAAT,EAAcC,gBAAd,QAAsC,aAAtC;AACA,OAAOC,MAAP,MAAmB,gBAAnB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEAH,GAAG,CAACI,SAAJ,CAAcF,MAAd;AAEA,MAAMG,gBAAgB,GAAGF,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAA7B;;AA8BA,MAAMG,KAAK,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAsB;AAChCC,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BF,YAA5B;AACA,SAAO,+BAAP;AACH,CAHD;;AAKAD,KAAK,CAACI,eAAN,GAAwB,YAAY;AAChC,MAAIC,MAAJ;;AACA,MAAI;AACAA,IAAAA,MAAM,GAAG,MAAMX,GAAG,CAACY,OAAJ,CAAYX,gBAAgB,CAACI,gBAAD,CAA5B,CAAf;AACH,GAFD,CAEE,OAAOQ,KAAP,EAAc;AACZL,IAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACH;;AAED,MAAIF,MAAM,CAACG,MAAX,EAAmB;AACfN,IAAAA,OAAO,CAACO,IAAR,CAAa,4BAAb,EAA2CJ,MAAM,CAACG,MAAlD;AACA,WAAO;AAAEP,MAAAA,YAAY,EAAE;AAAhB,KAAP;AACH;;AACD,MAAII,MAAM,CAACK,IAAP,KAAgB,IAApB,EAA0B;AACtB,WAAO;AAAET,MAAAA,YAAY,EAAEI,MAAM,CAACK;AAAvB,KAAP;AACH;AACJ,CAfD;;AAiBA,eAAeV,KAAf","sourcesContent":["import { API, graphqlOperation } from 'aws-amplify'\r\nimport config from '../aws-exports'\r\nimport gql from 'graphql-tag'\r\n\r\nAPI.configure(config)\r\n\r\nconst listTransactions = gql`\r\n    query listTransactions($limit: Int, $nextToken: String) {\r\n        listTransactions(limit: $limit, nextToken: $nextToken) {\r\n            nextToken\r\n            items {\r\n                id\r\n                totalPrice\r\n                totalBonusAmount\r\n                currency\r\n                products {\r\n                    id\r\n                    title\r\n                    bonusPercentage\r\n                    priceAmount\r\n                    priceCurrency\r\n                    image\r\n                }\r\n                customer {\r\n                    id\r\n                    firstName\r\n                    lastName\r\n                    phone\r\n                    email\r\n                }\r\n                createdAt\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nconst Index = ({ transactions }) => {\r\n    console.log('Transactions', transactions)\r\n    return <div>Main page</div>\r\n}\r\n\r\nIndex.getInitialProps = async () => {\r\n    let result\r\n    try {\r\n        result = await API.graphql(graphqlOperation(listTransactions))\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n\r\n    if (result.errors) {\r\n        console.warn('Failed to fetch todolist. ', result.errors)\r\n        return { transactions: [] }\r\n    }\r\n    if (result.data !== null) {\r\n        return { transactions: result.data }\r\n    }\r\n}\r\n\r\nexport default Index\r\n"]},"metadata":{},"sourceType":"module"}