{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    query listTransactions {\\n        listTransactions {\\n            items {\\n                id\\n                totalPrice\\n                totalBonusAmount\\n                currency\\n                products {\\n                    id\\n                    title\\n                    bonusPercentage\\n                    priceAmount\\n                    priceCurrency\\n                    image\\n                }\\n                customer {\\n                    id\\n                    firstName\\n                    lastName\\n                    phone\\n                    email\\n                }\\n                createdAt\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from 'react';\nimport createApp from '@shopify/app-bridge';\nimport { Redirect } from '@shopify/app-bridge/actions';\nimport gql from 'graphql-tag';\nimport { useQuery } from '@apollo/react-hooks';\nimport withApollo from '../lib/withApollo';\nimport { Card, DataTable, Button, Page } from '@shopify/polaris';\nimport { toCurrency } from '../utils/helper';\nvar listTransactions = gql(_templateObject());\n\nvar Index = function Index() {\n  _s();\n\n  console.log('Hi there Zaven jan');\n\n  var _useQuery = useQuery(listTransactions),\n      loading = _useQuery.loading,\n      data = _useQuery.data,\n      error = _useQuery.error;\n\n  var app = createApp({\n    apiKey: '3b01063bac3031d13101100ef3e44fd5',\n    shopOrigin: 'transactions-avanta.myshopify.com'\n  });\n  var redirect = Redirect.create(app);\n\n  if (loading) {\n    return __jsx(\"div\", null, \"Loading...\");\n  }\n\n  if (error) {\n    console.log('Some error occured Zaven', error);\n  }\n\n  var rows = data.listTransactions.items.map(function (transaction) {\n    return [__jsx(Button, {\n      onClick: function onClick() {\n        return redirect.dispatch(Redirect.Action.ADMIN_PATH, {\n          path: \"/orders/\".concat(transaction.id, \"?orderListBeta=true\"),\n          newContext: true\n        });\n      }\n    }, transaction.id), toCurrency(Number(transaction.totalPrice)), toCurrency(Number(transaction.totalBonusAmount)), transaction.createdAt, __jsx(Button, {\n      primary: true,\n      onClick: function onClick() {\n        return redirect.dispatch(Redirect.Action.ADMIN_PATH, {\n          path: \"/customers/\".concat(transaction.customer[0].id),\n          newContext: true\n        });\n      }\n    }, transaction.customer[0].email)];\n  });\n  console.log('Rows', rows);\n  console.log('Here is transaction data Zvo', data);\n  return __jsx(Page, {\n    title: \"Transactions\"\n  }, __jsx(Button, {\n    primary: true,\n    onClick: function onClick() {\n      return redirect.dispatch(Redirect.Action.REMOTE, {\n        url: 'https://dev.d3ivgpkzuz6hkr.amplifyapp.com',\n        newContext: true\n      });\n    }\n  }, \"Create transaction\"), __jsx(Card, null, __jsx(DataTable, {\n    columnContentTypes: ['text', 'text', 'text', 'text', 'text'],\n    headings: ['OrderId', 'TotalPrice', 'TotalBonusAmount', 'CreatedAt', 'Customer'],\n    rows: rows\n  })));\n};\n\n_s(Index, \"p6oyfP/Yk4ZuNTXZyHZn/tpJfv0=\", false, function () {\n  return [useQuery];\n});\n\n_c = Index;\nexport default _c2 = withApollo(Index);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Index\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/Admin/Desktop/transactions/pages/index.js"],"names":["React","useState","createApp","Redirect","gql","useQuery","withApollo","Card","DataTable","Button","Page","toCurrency","listTransactions","Index","console","log","loading","data","error","app","apiKey","shopOrigin","redirect","create","rows","items","map","transaction","dispatch","Action","ADMIN_PATH","path","id","newContext","Number","totalPrice","totalBonusAmount","createdAt","customer","email","REMOTE","url"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,SAASC,QAAT,QAAyB,6BAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AACA,SAASC,IAAT,EAAeC,SAAf,EAA0BC,MAA1B,EAAkCC,IAAlC,QAA8C,kBAA9C;AACA,SAASC,UAAT,QAA2B,iBAA3B;AAEA,IAAMC,gBAAgB,GAAGR,GAAH,mBAAtB;;AA6BA,IAAMS,KAAK,GAAG,SAARA,KAAQ,GAAM;AAAA;;AAChBC,EAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;;AADgB,kBAEiBV,QAAQ,CAACO,gBAAD,CAFzB;AAAA,MAERI,OAFQ,aAERA,OAFQ;AAAA,MAECC,IAFD,aAECA,IAFD;AAAA,MAEOC,KAFP,aAEOA,KAFP;;AAIhB,MAAMC,GAAG,GAAGjB,SAAS,CAAC;AAClBkB,IAAAA,MAAM,EAAE,kCADU;AAElBC,IAAAA,UAAU,EAAE;AAFM,GAAD,CAArB;AAKA,MAAMC,QAAQ,GAAGnB,QAAQ,CAACoB,MAAT,CAAgBJ,GAAhB,CAAjB;;AACA,MAAIH,OAAJ,EAAa;AACT,WAAO,gCAAP;AACH;;AAED,MAAIE,KAAJ,EAAW;AACPJ,IAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwCG,KAAxC;AACH;;AAED,MAAMM,IAAI,GAAGP,IAAI,CAACL,gBAAL,CAAsBa,KAAtB,CAA4BC,GAA5B,CAAgC,UAACC,WAAD;AAAA,WAAiB,CAC1D,MAAC,MAAD;AACI,MAAA,OAAO,EAAE;AAAA,eACLL,QAAQ,CAACM,QAAT,CAAkBzB,QAAQ,CAAC0B,MAAT,CAAgBC,UAAlC,EAA8C;AAC1CC,UAAAA,IAAI,oBAAaJ,WAAW,CAACK,EAAzB,wBADsC;AAE1CC,UAAAA,UAAU,EAAE;AAF8B,SAA9C,CADK;AAAA;AADb,OAOKN,WAAW,CAACK,EAPjB,CAD0D,EAU1DrB,UAAU,CAACuB,MAAM,CAACP,WAAW,CAACQ,UAAb,CAAP,CAVgD,EAW1DxB,UAAU,CAACuB,MAAM,CAACP,WAAW,CAACS,gBAAb,CAAP,CAXgD,EAY1DT,WAAW,CAACU,SAZ8C,EAa1D,MAAC,MAAD;AACI,MAAA,OAAO,MADX;AAEI,MAAA,OAAO,EAAE;AAAA,eACLf,QAAQ,CAACM,QAAT,CAAkBzB,QAAQ,CAAC0B,MAAT,CAAgBC,UAAlC,EAA8C;AAC1CC,UAAAA,IAAI,uBAAgBJ,WAAW,CAACW,QAAZ,CAAqB,CAArB,EAAwBN,EAAxC,CADsC;AAE1CC,UAAAA,UAAU,EAAE;AAF8B,SAA9C,CADK;AAAA;AAFb,OAQKN,WAAW,CAACW,QAAZ,CAAqB,CAArB,EAAwBC,KAR7B,CAb0D,CAAjB;AAAA,GAAhC,CAAb;AAyBAzB,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBS,IAApB;AACAV,EAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ,EAA4CE,IAA5C;AACA,SACI,MAAC,IAAD;AAAM,IAAA,KAAK,EAAC;AAAZ,KACI,MAAC,MAAD;AACI,IAAA,OAAO,MADX;AAEI,IAAA,OAAO,EAAE;AAAA,aACLK,QAAQ,CAACM,QAAT,CAAkBzB,QAAQ,CAAC0B,MAAT,CAAgBW,MAAlC,EAA0C;AACtCC,QAAAA,GAAG,EAAE,2CADiC;AAEtCR,QAAAA,UAAU,EAAE;AAF0B,OAA1C,CADK;AAAA;AAFb,0BADJ,EAWI,MAAC,IAAD,QACI,MAAC,SAAD;AACI,IAAA,kBAAkB,EAAE,CAAC,MAAD,EAAS,MAAT,EAAiB,MAAjB,EAAyB,MAAzB,EAAiC,MAAjC,CADxB;AAEI,IAAA,QAAQ,EAAE,CACN,SADM,EAEN,YAFM,EAGN,kBAHM,EAIN,WAJM,EAKN,UALM,CAFd;AASI,IAAA,IAAI,EAAET;AATV,IADJ,CAXJ,CADJ;AA2BH,CAxED;;GAAMX,K;UAE+BR,Q;;;KAF/BQ,K;AA0EN,qBAAeP,UAAU,CAACO,KAAD,CAAzB","sourcesContent":["import React, { useState } from 'react'\r\nimport createApp from '@shopify/app-bridge'\r\nimport { Redirect } from '@shopify/app-bridge/actions'\r\nimport gql from 'graphql-tag'\r\nimport { useQuery } from '@apollo/react-hooks'\r\nimport withApollo from '../lib/withApollo'\r\nimport { Card, DataTable, Button, Page } from '@shopify/polaris'\r\nimport { toCurrency } from '../utils/helper'\r\n\r\nconst listTransactions = gql`\r\n    query listTransactions {\r\n        listTransactions {\r\n            items {\r\n                id\r\n                totalPrice\r\n                totalBonusAmount\r\n                currency\r\n                products {\r\n                    id\r\n                    title\r\n                    bonusPercentage\r\n                    priceAmount\r\n                    priceCurrency\r\n                    image\r\n                }\r\n                customer {\r\n                    id\r\n                    firstName\r\n                    lastName\r\n                    phone\r\n                    email\r\n                }\r\n                createdAt\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nconst Index = () => {\r\n    console.log('Hi there Zaven jan')\r\n    const { loading, data, error } = useQuery(listTransactions)\r\n\r\n    const app = createApp({\r\n        apiKey: '3b01063bac3031d13101100ef3e44fd5',\r\n        shopOrigin: 'transactions-avanta.myshopify.com'\r\n    })\r\n\r\n    const redirect = Redirect.create(app)\r\n    if (loading) {\r\n        return <div>Loading...</div>\r\n    }\r\n\r\n    if (error) {\r\n        console.log('Some error occured Zaven', error)\r\n    }\r\n\r\n    const rows = data.listTransactions.items.map((transaction) => [\r\n        <Button\r\n            onClick={() =>\r\n                redirect.dispatch(Redirect.Action.ADMIN_PATH, {\r\n                    path: `/orders/${transaction.id}?orderListBeta=true`,\r\n                    newContext: true\r\n                })\r\n            }>\r\n            {transaction.id}\r\n        </Button>,\r\n        toCurrency(Number(transaction.totalPrice)),\r\n        toCurrency(Number(transaction.totalBonusAmount)),\r\n        transaction.createdAt,\r\n        <Button\r\n            primary\r\n            onClick={() =>\r\n                redirect.dispatch(Redirect.Action.ADMIN_PATH, {\r\n                    path: `/customers/${transaction.customer[0].id}`,\r\n                    newContext: true\r\n                })\r\n            }>\r\n            {transaction.customer[0].email}\r\n        </Button>\r\n    ])\r\n\r\n    console.log('Rows', rows)\r\n    console.log('Here is transaction data Zvo', data)\r\n    return (\r\n        <Page title=\"Transactions\">\r\n            <Button\r\n                primary\r\n                onClick={() =>\r\n                    redirect.dispatch(Redirect.Action.REMOTE, {\r\n                        url: 'https://dev.d3ivgpkzuz6hkr.amplifyapp.com',\r\n                        newContext: true\r\n                    })\r\n                }>\r\n                Create transaction\r\n            </Button>\r\n            <Card>\r\n                <DataTable\r\n                    columnContentTypes={['text', 'text', 'text', 'text', 'text']}\r\n                    headings={[\r\n                        'OrderId',\r\n                        'TotalPrice',\r\n                        'TotalBonusAmount',\r\n                        'CreatedAt',\r\n                        'Customer'\r\n                    ]}\r\n                    rows={rows}\r\n                />\r\n            </Card>\r\n        </Page>\r\n    )\r\n}\r\n\r\nexport default withApollo(Index)\r\n"]},"metadata":{},"sourceType":"module"}