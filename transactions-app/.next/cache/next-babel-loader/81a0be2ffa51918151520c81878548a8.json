{"ast":null,"code":"var _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useCallback, useEffect } from 'react';\nimport { API, graphqlOperation } from 'aws-amplify';\nimport { Page, Card, Toast, Frame, Tabs } from '@shopify/polaris';\nimport config from '../aws-exports';\nimport AcceptedPaymentRequest from '../components/AcceptedPaymentRequest';\nimport PendingPaymentRequest from '../components/PendingPaymentRequest';\nimport DeclinedPaymentRequest from '../components/DeclinedPaymentRequest';\nimport { onUpdatePaymentSubscription, paymentSubscription } from '../graphql/subscriptions';\nAPI.configure(config);\n\nvar AcceptPayment = function AcceptPayment(_ref) {\n  _s();\n\n  var branchId = _ref.branchId,\n      setShowPaymentRequest = _ref.setShowPaymentRequest;\n\n  var _useState = useState(false),\n      activeToast = _useState[0],\n      setActiveToast = _useState[1];\n\n  var _useState2 = useState(0),\n      selected = _useState2[0],\n      setSelected = _useState2[1];\n\n  var _useState3 = useState(''),\n      createUpdatePaymentSubscription = _useState3[0],\n      setCreateUpdatePaymentSubscription = _useState3[1];\n\n  var handleTabChange = useCallback(function (selectedTabIndex) {\n    return setSelected(selectedTabIndex);\n  }, []);\n  useEffect(function () {\n    var listener = API.graphql(graphqlOperation(paymentSubscription)).subscribe({\n      next: function next(paymentResponse) {\n        setCreateUpdatePaymentSubscription(paymentResponse);\n      }\n    });\n    var onUpdatePayment = API.graphql(graphqlOperation(onUpdatePaymentSubscription)).subscribe({\n      next: function next(onUpdatePaymentResponse) {\n        setCreateUpdatePaymentSubscription(onUpdatePaymentResponse);\n      }\n    });\n    return function () {\n      listener.unsubscribe();\n      onUpdatePayment.unsubscribe();\n    };\n  }, []);\n  var tabs = [{\n    id: 'pending-payments',\n    content: 'Pending Payment Requests',\n    accessibilityLabel: 'Pending Requests',\n    panelID: 'pending-payments-content'\n  }, {\n    id: 'accepted-payments',\n    content: 'Accepted Payment Requests',\n    accessibilityLabel: 'Accepted Request',\n    panelID: 'accepted-payments-content'\n  }, {\n    id: 'declined-payments',\n    content: 'Declined Payment Requests',\n    accessibilityLabel: 'Declined Requests',\n    panelID: 'declined-payments-content'\n  }];\n  var toastMarkup = activeToast ? __jsx(Toast, {\n    content: \"Order has been successfully created\",\n    onDismiss: function onDismiss() {\n      return setActiveToast(false);\n    }\n  }) : null;\n\n  var renderPaymentRequest = function renderPaymentRequest(selected) {\n    switch (selected) {\n      case 0:\n        return __jsx(PendingPaymentRequest, {\n          branchId: branchId,\n          createUpdatePaymentSubscription: createUpdatePaymentSubscription\n        });\n\n      case 1:\n        return __jsx(AcceptedPaymentRequest, {\n          branchId: branchId\n        });\n\n      case 2:\n        return __jsx(DeclinedPaymentRequest, {\n          branchId: branchId\n        });\n\n      default:\n        return;\n    }\n  };\n\n  return __jsx(Frame, null, __jsx(Page, {\n    title: \"Payment Request\"\n  }, __jsx(Button, {\n    onClick: function onClick() {\n      return setShowPaymentRequest(false);\n    }\n  }, \"Go back\"), __jsx(Card, null, __jsx(Tabs, {\n    tabs: tabs,\n    selected: selected,\n    onSelect: handleTabChange\n  }, __jsx(Card.Section, {\n    title: tabs[selected].content\n  }, renderPaymentRequest(selected)))), toastMarkup));\n};\n\n_s(AcceptPayment, \"Ej2M0f+YaqhdtvTHQ2uFFQn4VlI=\");\n\n_c = AcceptPayment;\nexport default AcceptPayment;\n\nvar _c;\n\n$RefreshReg$(_c, \"AcceptPayment\");","map":{"version":3,"sources":["/var/www/transactions-avanta/components/PaymentRequest.js"],"names":["React","useState","useCallback","useEffect","API","graphqlOperation","Page","Card","Toast","Frame","Tabs","config","AcceptedPaymentRequest","PendingPaymentRequest","DeclinedPaymentRequest","onUpdatePaymentSubscription","paymentSubscription","configure","AcceptPayment","branchId","setShowPaymentRequest","activeToast","setActiveToast","selected","setSelected","createUpdatePaymentSubscription","setCreateUpdatePaymentSubscription","handleTabChange","selectedTabIndex","listener","graphql","subscribe","next","paymentResponse","onUpdatePayment","onUpdatePaymentResponse","unsubscribe","tabs","id","content","accessibilityLabel","panelID","toastMarkup","renderPaymentRequest"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, useEffect } from 'react'\nimport { API, graphqlOperation } from 'aws-amplify'\nimport { Page, Card, Toast, Frame, Tabs } from '@shopify/polaris'\nimport config from '../aws-exports'\nimport AcceptedPaymentRequest from '../components/AcceptedPaymentRequest'\nimport PendingPaymentRequest from '../components/PendingPaymentRequest'\nimport DeclinedPaymentRequest from '../components/DeclinedPaymentRequest'\nimport { onUpdatePaymentSubscription, paymentSubscription } from '../graphql/subscriptions'\n\nAPI.configure(config)\n\nconst AcceptPayment = ({ branchId, setShowPaymentRequest }) => {\n    const [activeToast, setActiveToast] = useState(false)\n    const [selected, setSelected] = useState(0)\n    const [createUpdatePaymentSubscription, setCreateUpdatePaymentSubscription] = useState('')\n\n    const handleTabChange = useCallback((selectedTabIndex) => setSelected(selectedTabIndex), [])\n\n    useEffect(() => {\n        const listener = API.graphql(graphqlOperation(paymentSubscription)).subscribe({\n            next: (paymentResponse) => {\n                setCreateUpdatePaymentSubscription(paymentResponse)\n            }\n        })\n\n        const onUpdatePayment = API.graphql(\n            graphqlOperation(onUpdatePaymentSubscription)\n        ).subscribe({\n            next: (onUpdatePaymentResponse) => {\n                setCreateUpdatePaymentSubscription(onUpdatePaymentResponse)\n            }\n        })\n\n        return () => {\n            listener.unsubscribe()\n            onUpdatePayment.unsubscribe()\n        }\n    }, [])\n\n    const tabs = [\n        {\n            id: 'pending-payments',\n            content: 'Pending Payment Requests',\n            accessibilityLabel: 'Pending Requests',\n            panelID: 'pending-payments-content'\n        },\n        {\n            id: 'accepted-payments',\n            content: 'Accepted Payment Requests',\n            accessibilityLabel: 'Accepted Request',\n            panelID: 'accepted-payments-content'\n        },\n        {\n            id: 'declined-payments',\n            content: 'Declined Payment Requests',\n            accessibilityLabel: 'Declined Requests',\n            panelID: 'declined-payments-content'\n        }\n    ]\n\n    const toastMarkup = activeToast ? (\n        <Toast\n            content=\"Order has been successfully created\"\n            onDismiss={() => setActiveToast(false)}\n        />\n    ) : null\n\n    const renderPaymentRequest = (selected) => {\n        switch (selected) {\n            case 0:\n                return (\n                    <PendingPaymentRequest\n                        branchId={branchId}\n                        createUpdatePaymentSubscription={createUpdatePaymentSubscription}\n                    />\n                )\n            case 1:\n                return <AcceptedPaymentRequest branchId={branchId} />\n            case 2:\n                return <DeclinedPaymentRequest branchId={branchId} />\n            default:\n                return\n        }\n    }\n\n    return (\n        <Frame>\n            <Page title=\"Payment Request\">\n                <Button onClick={() => setShowPaymentRequest(false)}>Go back</Button>\n                <Card>\n                    <Tabs tabs={tabs} selected={selected} onSelect={handleTabChange}>\n                        <Card.Section title={tabs[selected].content}>\n                            {renderPaymentRequest(selected)}\n                        </Card.Section>\n                    </Tabs>\n                </Card>\n                {toastMarkup}\n            </Page>\n        </Frame>\n    )\n}\n\nexport default AcceptPayment\n"]},"metadata":{},"sourceType":"module"}