{"ast":null,"code":"export const toCurrency = price => {\n  return new Intl.NumberFormat('hy-AM', {\n    currency: 'AMD',\n    style: 'currency'\n  }).format(price);\n};\nexport const formatDate = rowDate => {\n  const date = new Date(rowDate);\n  const year = new Intl.DateTimeFormat('en', {\n    year: 'numeric'\n  }).format(date);\n  const month = new Intl.DateTimeFormat('en', {\n    month: 'short'\n  }).format(date);\n  const day = new Intl.DateTimeFormat('en', {\n    day: '2-digit'\n  }).format(date);\n  return `${day}-${month}-${year}`;\n};\nexport const extractNumbersFromString = string => {\n  return Number(string.match(/\\d+/g));\n};","map":{"version":3,"sources":["C:/Users/Admin/Desktop/transactions/utils/helper.js"],"names":["toCurrency","price","Intl","NumberFormat","currency","style","format","formatDate","rowDate","date","Date","year","DateTimeFormat","month","day","extractNumbersFromString","string","Number","match"],"mappings":"AAAA,OAAO,MAAMA,UAAU,GAAIC,KAAD,IAAW;AACjC,SAAO,IAAIC,IAAI,CAACC,YAAT,CAAsB,OAAtB,EAA+B;AAClCC,IAAAA,QAAQ,EAAE,KADwB;AAElCC,IAAAA,KAAK,EAAE;AAF2B,GAA/B,EAGJC,MAHI,CAGGL,KAHH,CAAP;AAIH,CALM;AAOP,OAAO,MAAMM,UAAU,GAAIC,OAAD,IAAa;AACnC,QAAMC,IAAI,GAAG,IAAIC,IAAJ,CAASF,OAAT,CAAb;AACA,QAAMG,IAAI,GAAG,IAAIT,IAAI,CAACU,cAAT,CAAwB,IAAxB,EAA8B;AAAED,IAAAA,IAAI,EAAE;AAAR,GAA9B,EAAmDL,MAAnD,CAA0DG,IAA1D,CAAb;AACA,QAAMI,KAAK,GAAG,IAAIX,IAAI,CAACU,cAAT,CAAwB,IAAxB,EAA8B;AAAEC,IAAAA,KAAK,EAAE;AAAT,GAA9B,EAAkDP,MAAlD,CAAyDG,IAAzD,CAAd;AACA,QAAMK,GAAG,GAAG,IAAIZ,IAAI,CAACU,cAAT,CAAwB,IAAxB,EAA8B;AAAEE,IAAAA,GAAG,EAAE;AAAP,GAA9B,EAAkDR,MAAlD,CAAyDG,IAAzD,CAAZ;AAEA,SAAQ,GAAEK,GAAI,IAAGD,KAAM,IAAGF,IAAK,EAA/B;AACH,CAPM;AASP,OAAO,MAAMI,wBAAwB,GAAIC,MAAD,IAAY;AAChD,SAAOC,MAAM,CAACD,MAAM,CAACE,KAAP,CAAa,MAAb,CAAD,CAAb;AACH,CAFM","sourcesContent":["export const toCurrency = (price) => {\r\n    return new Intl.NumberFormat('hy-AM', {\r\n        currency: 'AMD',\r\n        style: 'currency'\r\n    }).format(price)\r\n}\r\n\r\nexport const formatDate = (rowDate) => {\r\n    const date = new Date(rowDate)\r\n    const year = new Intl.DateTimeFormat('en', { year: 'numeric' }).format(date)\r\n    const month = new Intl.DateTimeFormat('en', { month: 'short' }).format(date)\r\n    const day = new Intl.DateTimeFormat('en', { day: '2-digit' }).format(date)\r\n\r\n    return `${day}-${month}-${year}`\r\n}\r\n\r\nexport const extractNumbersFromString = (string) => {\r\n    return Number(string.match(/\\d+/g))\r\n}\r\n"]},"metadata":{},"sourceType":"module"}