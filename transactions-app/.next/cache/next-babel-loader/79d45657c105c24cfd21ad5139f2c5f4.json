{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useEffect, useCallback } from 'react';\nimport axios from 'axios';\nimport gql from 'graphql-tag';\nimport { print } from 'graphql';\nimport { Page, Badge } from '@shopify/polaris';\nimport { CustomersMajorMonotone } from '@shopify/polaris-icons';\nimport { Table, TableCell, Icon, Popup } from 'semantic-ui-react';\nimport { toCurrency, formatDate } from '../utils/helper';\nconst listPaymentRequest = gql`\n    query listPaymentRequest {\n        listPaymentRequests {\n            items {\n                bonusAmount\n                createdAt\n                customerId\n                id\n                orderId\n                status\n                updatedAt\n            }\n        }\n    }\n`;\n\nconst AcceptPayment = () => {\n  const {\n    0: paymentRequestItems,\n    1: setPaymentRequestItems\n  } = useState(null);\n  const {\n    0: hoveredItemId,\n    1: setHoveredItemId\n  } = useState(null);\n  const fetchPaymentRequests = useCallback(async () => {\n    try {\n      const data = await axios({\n        url: 'https://kytejmxrrrgahiikcodklhf6rq.appsync-api.us-east-1.amazonaws.com/graphql',\n        method: 'post',\n        headers: {\n          'x-api-key': 'da2-iwznaxe3h5bxznagzuctrhqekm'\n        },\n        data: {\n          query: print(listPaymentRequest)\n        }\n      });\n      console.log('Zaven jan here is the data about payment request', data);\n      setPaymentRequestItems(data.data.data.listPaymentRequests.items);\n    } catch (error) {\n      console.log(error);\n    }\n  }, []);\n  useEffect(() => {\n    fetchPaymentRequests();\n  }, [fetchPaymentRequests]);\n  console.log('Payment request items', paymentRequestItems);\n  return __jsx(Page, {\n    title: \"Payment Request\"\n  }, __jsx(Table, {\n    selectable: true,\n    celled: true\n  }, __jsx(Table.Header, null, __jsx(Table.Row, null, __jsx(Table.HeaderCell, null, \"Customer Id\"), __jsx(Table.HeaderCell, null, \"Order Id\"), __jsx(Table.HeaderCell, null, \"Bonus Amount\"), __jsx(Table.HeaderCell, null, \"Created At\"), __jsx(Table.HeaderCell, null, \"Updated At\"), __jsx(Table.HeaderCell, null, \"Status\"), __jsx(Table.HeaderCell, null, \"Action\"))), __jsx(Table.Body, null, paymentRequestItems && paymentRequestItems.map(item => __jsx(Table.Row, {\n    key: item.id\n  }, __jsx(Table.Cell, null, __jsx(Badge, {\n    size: \"small\"\n  }, item.customerId)), __jsx(Table.Cell, null, __jsx(Badge, {\n    size: \"small\"\n  }, item.orderId)), __jsx(Table.Cell, null, toCurrency(item.bonusAmount)), __jsx(Table.Cell, null, formatDate(item.createdAt)), __jsx(Table.Cell, null, formatDate(item.updatedAt)), __jsx(Table.Cell, null, __jsx(Badge, {\n    size: \"small\",\n    status: \"attention\"\n  }, item.status)), __jsx(Table.Cell, {\n    className: \"actions-cell\"\n  }, __jsx(Popup, {\n    content: \"Approve payment\",\n    trigger: __jsx(Icon, {\n      className: \"accept\" // color={hoveredItemId === item.id ? 'green' : ''}\n      // className={\n      //     hoveredItemId === item.id ? 'accept-hovered' : ''\n      // }\n      ,\n      name: \"check\" // onClick={() => console.log('Zaven you clicked accept')}\n      // onMouseEnter={() => setHoveredItemId(item.id)}\n      // onMouseLeave={() => setHoveredItemId(null)}\n\n    })\n  }), __jsx(Popup, {\n    content: \"Decline payment\",\n    trigger: __jsx(Icon, {\n      className: \"decline\" // color={hoveredItemId === item.id ? 'red' : ''}\n      // className={\n      //     hoveredItemId === item.id ? 'decline-hovered' : ''\n      // }\n      ,\n      name: \"remove\" // onMouseEnter={() => setHoveredItemId(item.id)}\n      // onMouseLeave={() => setHoveredItemId(null)}\n\n    })\n  })))))));\n};\n\nexport default AcceptPayment;","map":{"version":3,"sources":["C:/Users/Admin/Desktop/transactions/pages/accept-payment.js"],"names":["React","useState","useEffect","useCallback","axios","gql","print","Page","Badge","CustomersMajorMonotone","Table","TableCell","Icon","Popup","toCurrency","formatDate","listPaymentRequest","AcceptPayment","paymentRequestItems","setPaymentRequestItems","hoveredItemId","setHoveredItemId","fetchPaymentRequests","data","url","method","headers","query","console","log","listPaymentRequests","items","error","map","item","id","customerId","orderId","bonusAmount","createdAt","updatedAt","status"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react'\r\nimport axios from 'axios'\r\nimport gql from 'graphql-tag'\r\nimport { print } from 'graphql'\r\nimport { Page, Badge } from '@shopify/polaris'\r\nimport { CustomersMajorMonotone } from '@shopify/polaris-icons'\r\nimport { Table, TableCell, Icon, Popup } from 'semantic-ui-react'\r\nimport { toCurrency, formatDate } from '../utils/helper'\r\n\r\nconst listPaymentRequest = gql`\r\n    query listPaymentRequest {\r\n        listPaymentRequests {\r\n            items {\r\n                bonusAmount\r\n                createdAt\r\n                customerId\r\n                id\r\n                orderId\r\n                status\r\n                updatedAt\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nconst AcceptPayment = () => {\r\n    const [paymentRequestItems, setPaymentRequestItems] = useState(null)\r\n    const [hoveredItemId, setHoveredItemId] = useState(null)\r\n    const fetchPaymentRequests = useCallback(async () => {\r\n        try {\r\n            const data = await axios({\r\n                url:\r\n                    'https://kytejmxrrrgahiikcodklhf6rq.appsync-api.us-east-1.amazonaws.com/graphql',\r\n                method: 'post',\r\n                headers: {\r\n                    'x-api-key': 'da2-iwznaxe3h5bxznagzuctrhqekm'\r\n                },\r\n                data: {\r\n                    query: print(listPaymentRequest)\r\n                }\r\n            })\r\n            console.log('Zaven jan here is the data about payment request', data)\r\n            setPaymentRequestItems(data.data.data.listPaymentRequests.items)\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        fetchPaymentRequests()\r\n    }, [fetchPaymentRequests])\r\n\r\n    console.log('Payment request items', paymentRequestItems)\r\n    return (\r\n        <Page title=\"Payment Request\">\r\n            <Table selectable celled>\r\n                <Table.Header>\r\n                    <Table.Row>\r\n                        <Table.HeaderCell>Customer Id</Table.HeaderCell>\r\n                        <Table.HeaderCell>Order Id</Table.HeaderCell>\r\n                        <Table.HeaderCell>Bonus Amount</Table.HeaderCell>\r\n                        <Table.HeaderCell>Created At</Table.HeaderCell>\r\n                        <Table.HeaderCell>Updated At</Table.HeaderCell>\r\n                        <Table.HeaderCell>Status</Table.HeaderCell>\r\n                        <Table.HeaderCell>Action</Table.HeaderCell>\r\n                    </Table.Row>\r\n                </Table.Header>\r\n                <Table.Body>\r\n                    {paymentRequestItems &&\r\n                        paymentRequestItems.map((item) => (\r\n                            <Table.Row key={item.id}>\r\n                                <Table.Cell>\r\n                                    <Badge size=\"small\">{item.customerId}</Badge>\r\n                                </Table.Cell>\r\n                                <Table.Cell>\r\n                                    <Badge size=\"small\">{item.orderId}</Badge>\r\n                                </Table.Cell>\r\n                                <Table.Cell>{toCurrency(item.bonusAmount)}</Table.Cell>\r\n                                <Table.Cell>{formatDate(item.createdAt)}</Table.Cell>\r\n                                <Table.Cell>{formatDate(item.updatedAt)}</Table.Cell>\r\n                                <Table.Cell>\r\n                                    <Badge size=\"small\" status=\"attention\">\r\n                                        {item.status}\r\n                                    </Badge>\r\n                                </Table.Cell>\r\n                                <Table.Cell className=\"actions-cell\">\r\n                                    <Popup\r\n                                        content=\"Approve payment\"\r\n                                        trigger={\r\n                                            <Icon\r\n                                                className=\"accept\"\r\n                                                // color={hoveredItemId === item.id ? 'green' : ''}\r\n                                                // className={\r\n                                                //     hoveredItemId === item.id ? 'accept-hovered' : ''\r\n                                                // }\r\n                                                name=\"check\"\r\n                                                // onClick={() => console.log('Zaven you clicked accept')}\r\n                                                // onMouseEnter={() => setHoveredItemId(item.id)}\r\n                                                // onMouseLeave={() => setHoveredItemId(null)}\r\n                                            />\r\n                                        }\r\n                                    />\r\n                                    <Popup\r\n                                        content=\"Decline payment\"\r\n                                        trigger={\r\n                                            <Icon\r\n                                                className=\"decline\"\r\n                                                // color={hoveredItemId === item.id ? 'red' : ''}\r\n                                                // className={\r\n                                                //     hoveredItemId === item.id ? 'decline-hovered' : ''\r\n                                                // }\r\n                                                name=\"remove\"\r\n                                                // onMouseEnter={() => setHoveredItemId(item.id)}\r\n                                                // onMouseLeave={() => setHoveredItemId(null)}\r\n                                            />\r\n                                        }\r\n                                    />\r\n                                </Table.Cell>\r\n                            </Table.Row>\r\n                        ))}\r\n                </Table.Body>\r\n            </Table>\r\n        </Page>\r\n    )\r\n}\r\n\r\nexport default AcceptPayment\r\n"]},"metadata":{},"sourceType":"module"}