{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    query listTransactions {\\n        listTransactions {\\n            items {\\n                id\\n                totalPrice\\n                currency\\n                products {\\n                    id\\n                    title\\n                    bonusPercentage\\n                    priceAmount\\n                    priceCurrency\\n                    image\\n                }\\n                customer {\\n                    id\\n                    firstName\\n                    lastName\\n                    phone\\n                    email\\n                }\\n                createdAt\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from 'react';\nimport gql from 'graphql-tag';\nimport { useQuery } from '@apollo/react-hooks';\nimport withApollo from '../lib/withApollo';\nimport { Card, DataTable, Link, Page } from '@shopify/polaris';\nvar listTransactions = gql(_templateObject());\n\nvar Index = function Index() {\n  _s();\n\n  console.log('Hi there Zaven jan');\n\n  var _useQuery = useQuery(listTransactions),\n      loading = _useQuery.loading,\n      data = _useQuery.data,\n      error = _useQuery.error;\n\n  if (loading) {\n    return __jsx(\"div\", null, \"Loading...\");\n  }\n\n  if (error) {\n    console.log('Some error occured Zaven', error);\n  }\n\n  var rows = data.listTransactions.items.map(function (transaction) {\n    return [__jsx(Link, null, transaction.id), transaction.totalPrice, transaction.createdAt, transaction.customer[0].firstName];\n  });\n  console.log('Rows', rows);\n  console.log('Here is transaction data Zvo', data);\n  return __jsx(Page, {\n    title: \"Transactions\"\n  }, __jsx(Card, null, __jsx(DataTable, {\n    columnContentTypes: ['text', 'text', 'text', 'text'],\n    headings: ['OrderId', 'TotalPrice', 'CreatedAt', 'Customer'],\n    rows: rows,\n    totals: ['', '', '', 255, '$155,830.00']\n  })));\n};\n\n_s(Index, \"p6oyfP/Yk4ZuNTXZyHZn/tpJfv0=\", false, function () {\n  return [useQuery];\n});\n\n_c = Index;\nexport default _c2 = withApollo(Index);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Index\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/Admin/Desktop/transactions/pages/index.js"],"names":["React","useState","gql","useQuery","withApollo","Card","DataTable","Link","Page","listTransactions","Index","console","log","loading","data","error","rows","items","map","transaction","id","totalPrice","createdAt","customer","firstName"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AACA,SAASC,IAAT,EAAeC,SAAf,EAA0BC,IAA1B,EAAgCC,IAAhC,QAA4C,kBAA5C;AAEA,IAAMC,gBAAgB,GAAGP,GAAH,mBAAtB;;AA4BA,IAAMQ,KAAK,GAAG,SAARA,KAAQ,GAAM;AAAA;;AAChBC,EAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;;AADgB,kBAEiBT,QAAQ,CAACM,gBAAD,CAFzB;AAAA,MAERI,OAFQ,aAERA,OAFQ;AAAA,MAECC,IAFD,aAECA,IAFD;AAAA,MAEOC,KAFP,aAEOA,KAFP;;AAIhB,MAAIF,OAAJ,EAAa;AACT,WAAO,gCAAP;AACH;;AAED,MAAIE,KAAJ,EAAW;AACPJ,IAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwCG,KAAxC;AACH;;AAED,MAAMC,IAAI,GAAGF,IAAI,CAACL,gBAAL,CAAsBQ,KAAtB,CAA4BC,GAA5B,CAAgC,UAACC,WAAD;AAAA,WAAiB,CAC1D,MAAC,IAAD,QAAOA,WAAW,CAACC,EAAnB,CAD0D,EAE1DD,WAAW,CAACE,UAF8C,EAG1DF,WAAW,CAACG,SAH8C,EAI1DH,WAAW,CAACI,QAAZ,CAAqB,CAArB,EAAwBC,SAJkC,CAAjB;AAAA,GAAhC,CAAb;AAOAb,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBI,IAApB;AACAL,EAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ,EAA4CE,IAA5C;AACA,SACI,MAAC,IAAD;AAAM,IAAA,KAAK,EAAC;AAAZ,KACI,MAAC,IAAD,QACI,MAAC,SAAD;AACI,IAAA,kBAAkB,EAAE,CAAC,MAAD,EAAS,MAAT,EAAiB,MAAjB,EAAyB,MAAzB,CADxB;AAEI,IAAA,QAAQ,EAAE,CAAC,SAAD,EAAY,YAAZ,EAA0B,WAA1B,EAAuC,UAAvC,CAFd;AAGI,IAAA,IAAI,EAAEE,IAHV;AAII,IAAA,MAAM,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,GAAb,EAAkB,aAAlB;AAJZ,IADJ,CADJ,CADJ;AAYH,CAjCD;;GAAMN,K;UAE+BP,Q;;;KAF/BO,K;AAmCN,qBAAeN,UAAU,CAACM,KAAD,CAAzB","sourcesContent":["import React, { useState } from 'react'\r\nimport gql from 'graphql-tag'\r\nimport { useQuery } from '@apollo/react-hooks'\r\nimport withApollo from '../lib/withApollo'\r\nimport { Card, DataTable, Link, Page } from '@shopify/polaris'\r\n\r\nconst listTransactions = gql`\r\n    query listTransactions {\r\n        listTransactions {\r\n            items {\r\n                id\r\n                totalPrice\r\n                currency\r\n                products {\r\n                    id\r\n                    title\r\n                    bonusPercentage\r\n                    priceAmount\r\n                    priceCurrency\r\n                    image\r\n                }\r\n                customer {\r\n                    id\r\n                    firstName\r\n                    lastName\r\n                    phone\r\n                    email\r\n                }\r\n                createdAt\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nconst Index = () => {\r\n    console.log('Hi there Zaven jan')\r\n    const { loading, data, error } = useQuery(listTransactions)\r\n\r\n    if (loading) {\r\n        return <div>Loading...</div>\r\n    }\r\n\r\n    if (error) {\r\n        console.log('Some error occured Zaven', error)\r\n    }\r\n\r\n    const rows = data.listTransactions.items.map((transaction) => [\r\n        <Link>{transaction.id}</Link>,\r\n        transaction.totalPrice,\r\n        transaction.createdAt,\r\n        transaction.customer[0].firstName\r\n    ])\r\n\r\n    console.log('Rows', rows)\r\n    console.log('Here is transaction data Zvo', data)\r\n    return (\r\n        <Page title=\"Transactions\">\r\n            <Card>\r\n                <DataTable\r\n                    columnContentTypes={['text', 'text', 'text', 'text']}\r\n                    headings={['OrderId', 'TotalPrice', 'CreatedAt', 'Customer']}\r\n                    rows={rows}\r\n                    totals={['', '', '', 255, '$155,830.00']}\r\n                />\r\n            </Card>\r\n        </Page>\r\n    )\r\n}\r\n\r\nexport default withApollo(Index)\r\n"]},"metadata":{},"sourceType":"module"}