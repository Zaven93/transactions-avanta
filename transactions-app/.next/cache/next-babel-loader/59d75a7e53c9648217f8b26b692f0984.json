{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from \"react\";\nimport { API, graphqlOperation } from \"aws-amplify\";\nimport { useQuery } from \"@apollo/client\";\nimport { Modal, Thumbnail, Checkbox, TextStyle } from \"@shopify/polaris\";\nimport { Table, Header } from \"semantic-ui-react\";\nimport { toCurrency } from \"../utils/helper\";\nimport config from \"../aws-exports\";\nimport { listProducts } from \"../graphql/queries\";\nimport { updatePaymentRequest } from \"../graphql/mutation\";\nAPI.configure(config);\n\nconst ProductsList = ({\n  active,\n  handleChange,\n  paymentRequestId\n}) => {\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(listProducts);\n  const {\n    0: rowId,\n    1: setRowId\n  } = useState([]);\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    products: []\n  });\n\n  if (loading) {\n    return __jsx(\"div\", null, \"Loading products...\");\n  }\n\n  if (error) {\n    return __jsx(\"div\", null, \"Some error occured\");\n  }\n\n  const acceptPayment = async () => {\n    try {\n      const paymentResponse = await API.graphql(graphqlOperation(updatePaymentRequest, {\n        input: {\n          id: paymentRequestId,\n          status: \"APPROVED\",\n          products: state.products.map(product => ({\n            originalUnitPrice: product.node.variants.edges[0].node.price,\n            quantity: 1,\n            variantId: product.node.variants.edges[0].node.id\n          }))\n        }\n      }));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return __jsx(Modal, {\n    open: active,\n    onClose: handleChange,\n    title: \"Choose products\",\n    primaryAction: {\n      content: \"Proceed\",\n      onAction: () => {\n        acceptPayment();\n        handleChange();\n      }\n    }\n  }, __jsx(Modal.Section, null, __jsx(Table, {\n    celled: true,\n    striped: true,\n    selectable: true\n  }, __jsx(Table.Header, null, __jsx(Table.Row, null, __jsx(Table.HeaderCell, null, \"Products\"), __jsx(Table.HeaderCell, null, \"Description\"), __jsx(Table.HeaderCell, {\n    textAlign: \"center\"\n  }, \"Price\"))), __jsx(Table.Body, null, data && data.products.edges.map(product => __jsx(Table.Row, {\n    key: product.node.id,\n    onClick: () => {\n      if (rowId.includes(product.node.id)) {\n        setRowId(rowId.filter(id => id !== product.node.id));\n        setState({\n          products: state.products.filter(filteredProduct => filteredProduct.node.id !== product.node.id)\n        });\n      } else {\n        setRowId([...rowId, product.node.id]);\n        setState(_objectSpread(_objectSpread({}, state), {}, {\n          products: [...state.products, product]\n        }));\n      }\n    }\n  }, __jsx(Table.Cell, null, __jsx(Header, {\n    as: \"h4\",\n    image: true,\n    className: \"product-header\"\n  }, __jsx(Checkbox, {\n    checked: rowId.includes(product.node.id) && true\n  }), __jsx(Thumbnail, {\n    source: product.node.images.edges[0] && product.node.images.edges[0].node.originalSrc,\n    size: \"small\",\n    alt: \"\"\n  }), __jsx(Header.Content, null, product.node.title))), __jsx(Table.Cell, null, __jsx(TextStyle, {\n    variation: \"subdued\"\n  }, product.node.description)), __jsx(Table.Cell, {\n    textAlign: \"center\"\n  }, __jsx(TextStyle, {\n    variation: \"subdued\"\n  }, product.node.variants.edges[0] && toCurrency(product.node.variants.edges[0].node.price)))))), __jsx(Table.Footer, {\n    fullWidth: true\n  }, __jsx(Table.Row, null)))));\n};\n\nexport default ProductsList;","map":{"version":3,"sources":["/var/www/transactions-avanta/components/ProductsList.js"],"names":["React","useState","API","graphqlOperation","useQuery","Modal","Thumbnail","Checkbox","TextStyle","Table","Header","toCurrency","config","listProducts","updatePaymentRequest","configure","ProductsList","active","handleChange","paymentRequestId","loading","error","data","rowId","setRowId","state","setState","products","acceptPayment","paymentResponse","graphql","input","id","status","map","product","originalUnitPrice","node","variants","edges","price","quantity","variantId","console","log","content","onAction","includes","filter","filteredProduct","images","originalSrc","title","description"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\"\nimport { API, graphqlOperation } from \"aws-amplify\"\nimport { useQuery } from \"@apollo/client\"\nimport { Modal, Thumbnail, Checkbox, TextStyle } from \"@shopify/polaris\"\nimport { Table, Header } from \"semantic-ui-react\"\nimport { toCurrency } from \"../utils/helper\"\nimport config from \"../aws-exports\"\nimport { listProducts } from \"../graphql/queries\"\nimport { updatePaymentRequest } from \"../graphql/mutation\"\n\nAPI.configure(config)\n\nconst ProductsList = ({ active, handleChange, paymentRequestId }) => {\n  const { loading, error, data } = useQuery(listProducts)\n  const [rowId, setRowId] = useState([])\n  const [state, setState] = useState({\n    products: [],\n  })\n\n  if (loading) {\n    return <div>Loading products...</div>\n  }\n\n  if (error) {\n    return <div>Some error occured</div>\n  }\n\n  const acceptPayment = async () => {\n    try {\n      const paymentResponse = await API.graphql(\n        graphqlOperation(updatePaymentRequest, {\n          input: {\n            id: paymentRequestId,\n            status: \"APPROVED\",\n            products: state.products.map((product) => ({\n              originalUnitPrice: product.node.variants.edges[0].node.price,\n              quantity: 1,\n              variantId: product.node.variants.edges[0].node.id,\n            })),\n          },\n        })\n      )\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  return (\n    <Modal\n      open={active}\n      onClose={handleChange}\n      title=\"Choose products\"\n      primaryAction={{\n        content: \"Proceed\",\n        onAction: () => {\n          acceptPayment()\n          handleChange()\n        },\n      }}>\n      <Modal.Section>\n        <Table celled striped selectable>\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell>Products</Table.HeaderCell>\n              <Table.HeaderCell>Description</Table.HeaderCell>\n              <Table.HeaderCell textAlign=\"center\">Price</Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            {data &&\n              data.products.edges.map((product) => (\n                <Table.Row\n                  key={product.node.id}\n                  onClick={() => {\n                    if (rowId.includes(product.node.id)) {\n                      setRowId(rowId.filter((id) => id !== product.node.id))\n                      setState({\n                        products: state.products.filter(\n                          (filteredProduct) => filteredProduct.node.id !== product.node.id\n                        ),\n                      })\n                    } else {\n                      setRowId([...rowId, product.node.id])\n                      setState({\n                        ...state,\n                        products: [...state.products, product],\n                      })\n                    }\n                  }}>\n                  <Table.Cell>\n                    <Header as=\"h4\" image className=\"product-header\">\n                      <Checkbox checked={rowId.includes(product.node.id) && true} />\n                      <Thumbnail\n                        source={\n                          product.node.images.edges[0] &&\n                          product.node.images.edges[0].node.originalSrc\n                        }\n                        size=\"small\"\n                        alt=\"\"\n                      />\n                      <Header.Content>{product.node.title}</Header.Content>\n                    </Header>\n                  </Table.Cell>\n                  <Table.Cell>\n                    <TextStyle variation=\"subdued\">{product.node.description}</TextStyle>\n                  </Table.Cell>\n                  <Table.Cell textAlign=\"center\">\n                    <TextStyle variation=\"subdued\">\n                      {product.node.variants.edges[0] &&\n                        toCurrency(product.node.variants.edges[0].node.price)}\n                    </TextStyle>\n                  </Table.Cell>\n                </Table.Row>\n              ))}\n          </Table.Body>\n          <Table.Footer fullWidth>\n            <Table.Row></Table.Row>\n          </Table.Footer>\n        </Table>\n      </Modal.Section>\n    </Modal>\n  )\n}\n\nexport default ProductsList\n"]},"metadata":{},"sourceType":"module"}