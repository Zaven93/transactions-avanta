{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport { API, graphqlOperation } from 'aws-amplify';\nimport gql from 'graphql-tag';\nimport config from '../../aws-exports';\nAPI.configure(config);\nconst getBranchById = gql`\n    query getBranch($id: ID) {\n        getBranch(id: $id) {\n            branchName\n            adminId\n            id\n            branchProducts {\n                items {\n                    branchId\n                    createdAt\n                    id\n                    productId\n                    tags\n                    updatedAt\n                }\n            }\n        }\n    }\n`;\n\nconst Branch = () => {\n  const router = useRouter();\n  console.log('Router from branch', router.asPath.split('/')[2].split('?')[0]);\n\n  const fetchBranch = async () => {\n    const branchId = router.asPath.split('/')[2].split('?')[0].toString();\n\n    if (!branchId) {\n      return;\n    }\n\n    try {\n      const branch = await API.graphql(graphqlOperation(getBranchById, {\n        id: branchId\n      }));\n      console.log('Fetched branch', branch);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    fetchBranch();\n  }, []);\n  return __jsx(\"div\", null, \"Branch\");\n};\n\nexport default Branch;","map":{"version":3,"sources":["C:/Users/Admin/Desktop/transactions/pages/branch/[branchId].js"],"names":["React","useState","useEffect","useRouter","API","graphqlOperation","gql","config","configure","getBranchById","Branch","router","console","log","asPath","split","fetchBranch","branchId","toString","branch","graphql","id","error"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,GAAT,EAAcC,gBAAd,QAAsC,aAAtC;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEAH,GAAG,CAACI,SAAJ,CAAcD,MAAd;AAEA,MAAME,aAAa,GAAGH,GAAI;;;;;;;;;;;;;;;;;;CAA1B;;AAoBA,MAAMI,MAAM,GAAG,MAAM;AACjB,QAAMC,MAAM,GAAGR,SAAS,EAAxB;AACAS,EAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCF,MAAM,CAACG,MAAP,CAAcC,KAAd,CAAoB,GAApB,EAAyB,CAAzB,EAA4BA,KAA5B,CAAkC,GAAlC,EAAuC,CAAvC,CAAlC;;AAEA,QAAMC,WAAW,GAAG,YAAY;AAC5B,UAAMC,QAAQ,GAAGN,MAAM,CAACG,MAAP,CAAcC,KAAd,CAAoB,GAApB,EAAyB,CAAzB,EAA4BA,KAA5B,CAAkC,GAAlC,EAAuC,CAAvC,EAA0CG,QAA1C,EAAjB;;AACA,QAAI,CAACD,QAAL,EAAe;AACX;AACH;;AACD,QAAI;AACA,YAAME,MAAM,GAAG,MAAMf,GAAG,CAACgB,OAAJ,CAAYf,gBAAgB,CAACI,aAAD,EAAgB;AAAEY,QAAAA,EAAE,EAAEJ;AAAN,OAAhB,CAA5B,CAArB;AACAL,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BM,MAA9B;AACH,KAHD,CAGE,OAAOG,KAAP,EAAc;AACZV,MAAAA,OAAO,CAACC,GAAR,CAAYS,KAAZ;AACH;AACJ,GAXD;;AAYApB,EAAAA,SAAS,CAAC,MAAM;AACZc,IAAAA,WAAW;AACd,GAFQ,EAEN,EAFM,CAAT;AAGA,SAAO,4BAAP;AACH,CApBD;;AAsBA,eAAeN,MAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { useRouter } from 'next/router'\r\nimport { API, graphqlOperation } from 'aws-amplify'\r\nimport gql from 'graphql-tag'\r\nimport config from '../../aws-exports'\r\n\r\nAPI.configure(config)\r\n\r\nconst getBranchById = gql`\r\n    query getBranch($id: ID) {\r\n        getBranch(id: $id) {\r\n            branchName\r\n            adminId\r\n            id\r\n            branchProducts {\r\n                items {\r\n                    branchId\r\n                    createdAt\r\n                    id\r\n                    productId\r\n                    tags\r\n                    updatedAt\r\n                }\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nconst Branch = () => {\r\n    const router = useRouter()\r\n    console.log('Router from branch', router.asPath.split('/')[2].split('?')[0])\r\n\r\n    const fetchBranch = async () => {\r\n        const branchId = router.asPath.split('/')[2].split('?')[0].toString()\r\n        if (!branchId) {\r\n            return\r\n        }\r\n        try {\r\n            const branch = await API.graphql(graphqlOperation(getBranchById, { id: branchId }))\r\n            console.log('Fetched branch', branch)\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        fetchBranch()\r\n    }, [])\r\n    return <div>Branch</div>\r\n}\r\n\r\nexport default Branch\r\n"]},"metadata":{},"sourceType":"module"}