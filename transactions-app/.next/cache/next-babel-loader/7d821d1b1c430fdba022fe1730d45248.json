{"ast":null,"code":"export var toCurrency = function toCurrency(price) {\n  return new Intl.NumberFormat('hy-AM', {\n    currency: 'AMD',\n    style: 'currency'\n  }).format(price);\n};\nexport var formatDate = function formatDate(rowDate) {\n  var date = new Date(rowDate);\n  var year = new Intl.DateTimeFormat('en', {\n    year: 'numeric'\n  }).format(date);\n  var month = new Intl.DateTimeFormat('en', {\n    month: 'short'\n  }).format(date);\n  var day = new Intl.DateTimeFormat('en', {\n    day: '2-digit'\n  }).format(date);\n  return \"\".concat(day, \"-\").concat(month, \"-\").concat(year);\n};\nexport var extractNumbersFromString = function extractNumbersFromString(string) {\n  return Number(string.match(/\\d+/g));\n};","map":{"version":3,"sources":["/var/www/transactions-avanta/utils/helper.js"],"names":["toCurrency","price","Intl","NumberFormat","currency","style","format","formatDate","rowDate","date","Date","year","DateTimeFormat","month","day","extractNumbersFromString","string","Number","match"],"mappings":"AAAA,OAAO,IAAMA,UAAU,GAAG,SAAbA,UAAa,CAACC,KAAD,EAAW;AACjC,SAAO,IAAIC,IAAI,CAACC,YAAT,CAAsB,OAAtB,EAA+B;AAClCC,IAAAA,QAAQ,EAAE,KADwB;AAElCC,IAAAA,KAAK,EAAE;AAF2B,GAA/B,EAGJC,MAHI,CAGGL,KAHH,CAAP;AAIH,CALM;AAOP,OAAO,IAAMM,UAAU,GAAG,SAAbA,UAAa,CAACC,OAAD,EAAa;AACnC,MAAMC,IAAI,GAAG,IAAIC,IAAJ,CAASF,OAAT,CAAb;AACA,MAAMG,IAAI,GAAG,IAAIT,IAAI,CAACU,cAAT,CAAwB,IAAxB,EAA8B;AAAED,IAAAA,IAAI,EAAE;AAAR,GAA9B,EAAmDL,MAAnD,CAA0DG,IAA1D,CAAb;AACA,MAAMI,KAAK,GAAG,IAAIX,IAAI,CAACU,cAAT,CAAwB,IAAxB,EAA8B;AAAEC,IAAAA,KAAK,EAAE;AAAT,GAA9B,EAAkDP,MAAlD,CAAyDG,IAAzD,CAAd;AACA,MAAMK,GAAG,GAAG,IAAIZ,IAAI,CAACU,cAAT,CAAwB,IAAxB,EAA8B;AAAEE,IAAAA,GAAG,EAAE;AAAP,GAA9B,EAAkDR,MAAlD,CAAyDG,IAAzD,CAAZ;AAEA,mBAAUK,GAAV,cAAiBD,KAAjB,cAA0BF,IAA1B;AACH,CAPM;AASP,OAAO,IAAMI,wBAAwB,GAAG,SAA3BA,wBAA2B,CAACC,MAAD,EAAY;AAChD,SAAOC,MAAM,CAACD,MAAM,CAACE,KAAP,CAAa,MAAb,CAAD,CAAb;AACH,CAFM","sourcesContent":["export const toCurrency = (price) => {\n    return new Intl.NumberFormat('hy-AM', {\n        currency: 'AMD',\n        style: 'currency'\n    }).format(price)\n}\n\nexport const formatDate = (rowDate) => {\n    const date = new Date(rowDate)\n    const year = new Intl.DateTimeFormat('en', { year: 'numeric' }).format(date)\n    const month = new Intl.DateTimeFormat('en', { month: 'short' }).format(date)\n    const day = new Intl.DateTimeFormat('en', { day: '2-digit' }).format(date)\n\n    return `${day}-${month}-${year}`\n}\n\nexport const extractNumbersFromString = (string) => {\n    return Number(string.match(/\\d+/g))\n}\n"]},"metadata":{},"sourceType":"module"}