{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    query listTransactions($nextToken: String) {\\n        listTransactions(limit: 5, nextToken: $nextToken) {\\n            nextToken\\n            items {\\n                id\\n                totalPrice\\n                totalBonusAmount\\n                currency\\n                products {\\n                    id\\n                    title\\n                    bonusPercentage\\n                    priceAmount\\n                    priceCurrency\\n                    image\\n                }\\n                customer {\\n                    id\\n                    firstName\\n                    lastName\\n                    phone\\n                    email\\n                }\\n                createdAt\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, useCallback, useEffect } from 'react';\nimport createApp from '@shopify/app-bridge';\nimport { Redirect } from '@shopify/app-bridge/actions';\nimport { TitleBar } from '@shopify/app-bridge-react';\nimport gql from 'graphql-tag';\nimport { useQuery, useLazyQuery } from '@apollo/react-hooks';\nimport { Card, DataTable, Button, Page, TextField, ChoiceList, Filters, Icon } from '@shopify/polaris';\nimport { SearchMajorMonotone } from '@shopify/polaris-icons';\nimport withApollo from '../lib/withApollo';\nimport { toCurrency } from '../utils/helper';\nvar listTransactions = gql(_templateObject());\n\nvar Index = function Index() {\n  _s();\n\n  // const { loading, data, error } = useQuery(listTransactions)\n  var _useLazyQuery = useLazyQuery(listTransactions),\n      _useLazyQuery2 = _slicedToArray(_useLazyQuery, 2),\n      listTransactions = _useLazyQuery2[0],\n      _useLazyQuery2$ = _useLazyQuery2[1],\n      loading = _useLazyQuery2$.loading,\n      data = _useLazyQuery2$.data;\n\n  var _useState = useState(null),\n      searchValue = _useState[0],\n      setSearchValue = _useState[1];\n\n  var handleSearchInput = useCallback(function (newValue) {\n    return setSearchValue(newValue);\n  }, []);\n  var fetchTransactions = useCallback( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return listTransactions();\n\n          case 3:\n            console.log('Fetched data with lazy query', data);\n            _context.next = 9;\n            break;\n\n          case 6:\n            _context.prev = 6;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 6]]);\n  })), []);\n  useEffect(function () {\n    fetchTransactions();\n  }, [fetchTransactions]);\n  console.log('Searching value', searchValue);\n  var app = createApp({\n    apiKey: '3b01063bac3031d13101100ef3e44fd5',\n    shopOrigin: 'transactions-avanta.myshopify.com'\n  });\n  var redirect = Redirect.create(app);\n\n  if (loading) {\n    return __jsx(\"div\", null, \"Loading...\");\n  }\n\n  if (error) {\n    console.log('Some error occured Zaven', error);\n  }\n\n  var formatDate = function formatDate(rowDate) {\n    var date = new Date(rowDate);\n    var year = new Intl.DateTimeFormat('en', {\n      year: 'numeric'\n    }).format(date);\n    var month = new Intl.DateTimeFormat('en', {\n      month: 'short'\n    }).format(date);\n    var day = new Intl.DateTimeFormat('en', {\n      day: '2-digit'\n    }).format(date);\n    return \"\".concat(day, \"-\").concat(month, \"-\").concat(year);\n  };\n\n  console.log('Data Zaven jan', data);\n  console.log('Page count', Math.ceil(data.listTransactions.items.length / 7));\n  var rows = data.listTransactions.items.filter(function (transaction) {\n    if (searchValue == null) {\n      return transaction;\n    } else if (transaction.customer[0].phone.toLowerCase().includes(searchValue.toLowerCase())) {\n      return transaction;\n    }\n  }).map(function (transaction) {\n    return [__jsx(Button, {\n      primary: true,\n      onClick: function onClick() {\n        return redirect.dispatch(Redirect.Action.ADMIN_PATH, {\n          path: \"/customers/\".concat(transaction.customer[0].id),\n          newContext: true\n        });\n      }\n    }, transaction.customer[0].phone), toCurrency(Number(transaction.totalPrice)), toCurrency(Number(transaction.totalBonusAmount)), formatDate(transaction.createdAt)];\n  });\n  console.log('Rows', rows);\n  console.log('Here is transaction data Zvo', data);\n  return __jsx(Page, {\n    title: \"Transactions\"\n  }, __jsx(TextField, {\n    label: \"Search Product\",\n    value: searchValue,\n    onChange: handleSearchInput,\n    prefix: __jsx(Icon, {\n      source: SearchMajorMonotone\n    }),\n    placeholder: \"Search by Customer phone number\"\n  }), __jsx(Button, {\n    onClick: function onClick() {\n      return listTransactions({\n        variables: {\n          nextToken: data.listTransactions.nextToken\n        }\n      });\n    }\n  }, \"Paginate next\"), __jsx(Button, {\n    primary: true,\n    onClick: function onClick() {\n      return redirect.dispatch(Redirect.Action.REMOTE, {\n        url: 'https://dev.d3ivgpkzuz6hkr.amplifyapp.com',\n        newContext: true\n      });\n    }\n  }, \"Create transaction\"), __jsx(Card, null, __jsx(DataTable, {\n    columnContentTypes: ['text', 'text', 'text', 'text'],\n    headings: ['Customer phone number', 'TotalPrice', 'TotalBonusAmount', 'CreatedAt'],\n    rows: rows\n  })));\n};\n\n_s(Index, \"JeR+VvXSEIUQ57LjOlhRoPrJJjY=\", false, function () {\n  return [useLazyQuery];\n});\n\n_c = Index;\nexport default _c2 = withApollo(Index);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Index\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/Admin/Desktop/transactions/pages/index.js"],"names":["React","useState","useCallback","useEffect","createApp","Redirect","TitleBar","gql","useQuery","useLazyQuery","Card","DataTable","Button","Page","TextField","ChoiceList","Filters","Icon","SearchMajorMonotone","withApollo","toCurrency","listTransactions","Index","loading","data","searchValue","setSearchValue","handleSearchInput","newValue","fetchTransactions","console","log","app","apiKey","shopOrigin","redirect","create","error","formatDate","rowDate","date","Date","year","Intl","DateTimeFormat","format","month","day","Math","ceil","items","length","rows","filter","transaction","customer","phone","toLowerCase","includes","map","dispatch","Action","ADMIN_PATH","path","id","newContext","Number","totalPrice","totalBonusAmount","createdAt","variables","nextToken","REMOTE","url"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, useEffect } from 'react'\r\nimport createApp from '@shopify/app-bridge'\r\nimport { Redirect } from '@shopify/app-bridge/actions'\r\nimport { TitleBar } from '@shopify/app-bridge-react'\r\nimport gql from 'graphql-tag'\r\nimport { useQuery, useLazyQuery } from '@apollo/react-hooks'\r\nimport {\r\n    Card,\r\n    DataTable,\r\n    Button,\r\n    Page,\r\n    TextField,\r\n    ChoiceList,\r\n    Filters,\r\n    Icon\r\n} from '@shopify/polaris'\r\nimport { SearchMajorMonotone } from '@shopify/polaris-icons'\r\nimport withApollo from '../lib/withApollo'\r\nimport { toCurrency } from '../utils/helper'\r\n\r\nconst listTransactions = gql`\r\n    query listTransactions($nextToken: String) {\r\n        listTransactions(limit: 5, nextToken: $nextToken) {\r\n            nextToken\r\n            items {\r\n                id\r\n                totalPrice\r\n                totalBonusAmount\r\n                currency\r\n                products {\r\n                    id\r\n                    title\r\n                    bonusPercentage\r\n                    priceAmount\r\n                    priceCurrency\r\n                    image\r\n                }\r\n                customer {\r\n                    id\r\n                    firstName\r\n                    lastName\r\n                    phone\r\n                    email\r\n                }\r\n                createdAt\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nconst Index = () => {\r\n    // const { loading, data, error } = useQuery(listTransactions)\r\n    const [listTransactions, { loading, data }] = useLazyQuery(listTransactions)\r\n    const [searchValue, setSearchValue] = useState(null)\r\n    const handleSearchInput = useCallback((newValue) => setSearchValue(newValue), [])\r\n\r\n    const fetchTransactions = useCallback(async () => {\r\n        try {\r\n            await listTransactions()\r\n            console.log('Fetched data with lazy query', data)\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        fetchTransactions()\r\n    }, [fetchTransactions])\r\n\r\n    console.log('Searching value', searchValue)\r\n\r\n    const app = createApp({\r\n        apiKey: '3b01063bac3031d13101100ef3e44fd5',\r\n        shopOrigin: 'transactions-avanta.myshopify.com'\r\n    })\r\n\r\n    const redirect = Redirect.create(app)\r\n    if (loading) {\r\n        return <div>Loading...</div>\r\n    }\r\n\r\n    if (error) {\r\n        console.log('Some error occured Zaven', error)\r\n    }\r\n\r\n    const formatDate = (rowDate) => {\r\n        const date = new Date(rowDate)\r\n        const year = new Intl.DateTimeFormat('en', { year: 'numeric' }).format(date)\r\n        const month = new Intl.DateTimeFormat('en', { month: 'short' }).format(date)\r\n        const day = new Intl.DateTimeFormat('en', { day: '2-digit' }).format(date)\r\n\r\n        return `${day}-${month}-${year}`\r\n    }\r\n\r\n    console.log('Data Zaven jan', data)\r\n\r\n    console.log('Page count', Math.ceil(data.listTransactions.items.length / 7))\r\n\r\n    const rows = data.listTransactions.items\r\n        .filter((transaction) => {\r\n            if (searchValue == null) {\r\n                return transaction\r\n            } else if (\r\n                transaction.customer[0].phone.toLowerCase().includes(searchValue.toLowerCase())\r\n            ) {\r\n                return transaction\r\n            }\r\n        })\r\n        .map((transaction) => [\r\n            <Button\r\n                primary\r\n                onClick={() =>\r\n                    redirect.dispatch(Redirect.Action.ADMIN_PATH, {\r\n                        path: `/customers/${transaction.customer[0].id}`,\r\n                        newContext: true\r\n                    })\r\n                }>\r\n                {transaction.customer[0].phone}\r\n            </Button>,\r\n            toCurrency(Number(transaction.totalPrice)),\r\n            toCurrency(Number(transaction.totalBonusAmount)),\r\n            formatDate(transaction.createdAt)\r\n        ])\r\n\r\n    console.log('Rows', rows)\r\n    console.log('Here is transaction data Zvo', data)\r\n    return (\r\n        <Page title=\"Transactions\">\r\n            <TextField\r\n                label=\"Search Product\"\r\n                value={searchValue}\r\n                onChange={handleSearchInput}\r\n                prefix={<Icon source={SearchMajorMonotone} />}\r\n                placeholder=\"Search by Customer phone number\"\r\n            />\r\n            <Button\r\n                onClick={() =>\r\n                    listTransactions({ variables: { nextToken: data.listTransactions.nextToken } })\r\n                }>\r\n                Paginate next\r\n            </Button>\r\n            <Button\r\n                primary\r\n                onClick={() =>\r\n                    redirect.dispatch(Redirect.Action.REMOTE, {\r\n                        url: 'https://dev.d3ivgpkzuz6hkr.amplifyapp.com',\r\n                        newContext: true\r\n                    })\r\n                }>\r\n                Create transaction\r\n            </Button>\r\n            <Card>\r\n                <DataTable\r\n                    columnContentTypes={['text', 'text', 'text', 'text']}\r\n                    headings={[\r\n                        'Customer phone number',\r\n                        'TotalPrice',\r\n                        'TotalBonusAmount',\r\n                        'CreatedAt'\r\n                    ]}\r\n                    rows={rows}\r\n                />\r\n            </Card>\r\n        </Page>\r\n    )\r\n}\r\n\r\nexport default withApollo(Index)\r\n"]},"metadata":{},"sourceType":"module"}