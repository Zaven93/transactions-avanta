{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useCallback, useEffect } from \"react\";\nimport { Thumbnail, Checkbox, TextStyle, TextField } from \"@shopify/polaris\";\nimport { Table, Header, Icon } from \"semantic-ui-react\";\nimport { toCurrency } from \"../utils/helper\";\n\nvar BranchRow = function BranchRow(_ref) {\n  _s();\n\n  var product = _ref.product,\n      state = _ref.state,\n      setState = _ref.setState,\n      branchInfo = _ref.branchInfo,\n      rowId = _ref.rowId,\n      setRowId = _ref.setRowId;\n\n  var _useState = useState({\n    description: product.node.description,\n    id: product.node.id,\n    image: product.node.images.edges[0] ? product.node.images.edges[0].node.originalSrc : \"\",\n    tags: product.node.tags,\n    title: product.node.title,\n    variants: {\n      id: product.node.variants.edges[0].node.id,\n      price: product.node.variants.edges[0].node.price\n    }\n  }),\n      fetchedProduct = _useState[0],\n      setFetchedProduct = _useState[1];\n\n  var _useState2 = useState(null),\n      searchValue = _useState2[0],\n      setSearchValue = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      bonus = _useState3[0],\n      setBonus = _useState3[1];\n\n  var handleSearchInput = useCallback(function (newValue) {\n    return setSearchValue(newValue);\n  }, []);\n  var handleBonus = useCallback(function (value) {\n    setBonus(value);\n    fetchedProduct.tags = [value];\n    setFetchedProduct(fetchedProduct);\n  }, []);\n\n  var compareProduct = function compareProduct() {\n    var comparedProduct = branchInfo.branchProducts.items.filter(function (branchProduct) {\n      return branchProduct.productId === fetchedProduct.id;\n    });\n\n    if (!comparedProduct || comparedProduct === undefined) {\n      return;\n    }\n\n    setBonus(comparedProduct[0] ? comparedProduct[0].tags && comparedProduct[0].tags[0] : \"\");\n    return;\n  };\n\n  useEffect(function () {\n    console.log(\"Row id from useEffect\", branchInfo.branchProducts.items.map(function (item) {\n      return item.productId;\n    }).filter(function (productId) {\n      return productId === fetchedProduct.id;\n    })[0]);\n    compareProduct();\n  }, [product, branchInfo]);\n  return __jsx(Table.Row, {\n    key: fetchedProduct.id\n  }, __jsx(Table.Cell, null, __jsx(Header, {\n    as: \"h4\",\n    image: true,\n    className: \"product-header\"\n  }, __jsx(Checkbox, {\n    checked: rowId.includes(fetchedProduct.id) && true,\n    onChange: function onChange() {\n      if (rowId.includes(fetchedProduct.id)) {\n        setRowId(rowId.filter(function (id) {\n          return id !== fetchedProduct.id;\n        }));\n        setState({\n          products: state.products.filter(function (filteredProduct) {\n            return filteredProduct.id !== fetchedProduct.id;\n          })\n        });\n      } else {\n        setRowId([].concat(_toConsumableArray(rowId), [fetchedProduct.id]));\n        setState(_objectSpread(_objectSpread({}, state), {}, {\n          products: [].concat(_toConsumableArray(state.products), [fetchedProduct])\n        }));\n      }\n    }\n  }), __jsx(Thumbnail, {\n    source: fetchedProduct.image,\n    size: \"small\",\n    alt: \"\"\n  }), __jsx(Header.Content, null, fetchedProduct.title))), __jsx(Table.Cell, {\n    textAlign: \"center\"\n  }, __jsx(TextStyle, {\n    variation: \"subdued\"\n  }, fetchedProduct.variants && toCurrency(fetchedProduct.variants.price))), __jsx(Table.Cell, null, __jsx(TextField, {\n    id: \"percentage-input\",\n    placeholder: \"Bonus Percentage\",\n    value: bonus,\n    onChange: handleBonus,\n    prefix: __jsx(Icon, {\n      name: \"percent\"\n    }),\n    disabled: !rowId.includes(fetchedProduct.id)\n  })));\n};\n\n_s(BranchRow, \"2SScOT+Mf5cwVys01PvTTi6HW58=\");\n\n_c = BranchRow;\nexport default BranchRow;\n\nvar _c;\n\n$RefreshReg$(_c, \"BranchRow\");","map":{"version":3,"sources":["/var/www/transactions-avanta/components/BranchRow.js"],"names":["React","useState","useCallback","useEffect","Thumbnail","Checkbox","TextStyle","TextField","Table","Header","Icon","toCurrency","BranchRow","product","state","setState","branchInfo","rowId","setRowId","description","node","id","image","images","edges","originalSrc","tags","title","variants","price","fetchedProduct","setFetchedProduct","searchValue","setSearchValue","bonus","setBonus","handleSearchInput","newValue","handleBonus","value","compareProduct","comparedProduct","branchProducts","items","filter","branchProduct","productId","undefined","console","log","map","item","includes","products","filteredProduct"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, useEffect } from \"react\"\nimport { Thumbnail, Checkbox, TextStyle, TextField } from \"@shopify/polaris\"\nimport { Table, Header, Icon } from \"semantic-ui-react\"\nimport { toCurrency } from \"../utils/helper\"\n\nconst BranchRow = ({ product, state, setState, branchInfo, rowId, setRowId }) => {\n  const [fetchedProduct, setFetchedProduct] = useState({\n    description: product.node.description,\n    id: product.node.id,\n    image: product.node.images.edges[0] ? product.node.images.edges[0].node.originalSrc : \"\",\n    tags: product.node.tags,\n    title: product.node.title,\n    variants: {\n      id: product.node.variants.edges[0].node.id,\n      price: product.node.variants.edges[0].node.price,\n    },\n  })\n\n  const [searchValue, setSearchValue] = useState(null)\n  const [bonus, setBonus] = useState(\"\")\n  const handleSearchInput = useCallback((newValue) => setSearchValue(newValue), [])\n\n  const handleBonus = useCallback((value) => {\n    setBonus(value)\n    fetchedProduct.tags = [value]\n    setFetchedProduct(fetchedProduct)\n  }, [])\n\n  const compareProduct = () => {\n    const comparedProduct = branchInfo.branchProducts.items.filter(\n      (branchProduct) => branchProduct.productId === fetchedProduct.id\n    )\n\n    if (!comparedProduct || comparedProduct === undefined) {\n      return\n    }\n\n    setBonus(comparedProduct[0] ? comparedProduct[0].tags && comparedProduct[0].tags[0] : \"\")\n\n    return\n  }\n\n  useEffect(() => {\n    console.log(\n      \"Row id from useEffect\",\n      branchInfo.branchProducts.items\n        .map((item) => item.productId)\n        .filter((productId) => productId === fetchedProduct.id)[0]\n    )\n\n    compareProduct()\n  }, [product, branchInfo])\n\n  return (\n    <Table.Row key={fetchedProduct.id}>\n      <Table.Cell>\n        <Header as=\"h4\" image className=\"product-header\">\n          <Checkbox\n            checked={rowId.includes(fetchedProduct.id) && true}\n            onChange={() => {\n              if (rowId.includes(fetchedProduct.id)) {\n                setRowId(rowId.filter((id) => id !== fetchedProduct.id))\n                setState({\n                  products: state.products.filter(\n                    (filteredProduct) => filteredProduct.id !== fetchedProduct.id\n                  ),\n                })\n              } else {\n                setRowId([...rowId, fetchedProduct.id])\n                setState({\n                  ...state,\n                  products: [...state.products, fetchedProduct],\n                })\n              }\n            }}\n          />\n          <Thumbnail source={fetchedProduct.image} size=\"small\" alt=\"\" />\n          <Header.Content>{fetchedProduct.title}</Header.Content>\n        </Header>\n      </Table.Cell>\n      <Table.Cell textAlign=\"center\">\n        <TextStyle variation=\"subdued\">\n          {fetchedProduct.variants && toCurrency(fetchedProduct.variants.price)}\n        </TextStyle>\n      </Table.Cell>\n      <Table.Cell>\n        <TextField\n          id=\"percentage-input\"\n          placeholder=\"Bonus Percentage\"\n          value={bonus}\n          onChange={handleBonus}\n          prefix={<Icon name=\"percent\" />}\n          disabled={!rowId.includes(fetchedProduct.id)}\n        />\n      </Table.Cell>\n    </Table.Row>\n  )\n}\n\nexport default BranchRow\n"]},"metadata":{},"sourceType":"module"}