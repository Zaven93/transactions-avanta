{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    query listPaymentRequest {\\n        listPaymentRequests {\\n            items {\\n                bonusAmount\\n                createdAt\\n                customerId\\n                id\\n                orderId\\n                status\\n                updatedAt\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport axios from 'axios';\nimport gql from 'graphql-tag';\nimport { print } from 'graphql';\nimport { Page, Badge } from '@shopify/polaris';\nimport { Table, TableCell, Icon } from 'semantic-ui-react';\nimport { toCurrency, formatDate } from '../utils/helper';\nvar listPaymentRequest = gql(_templateObject());\n\nvar AcceptPayment = function AcceptPayment() {\n  _s();\n\n  var _useState = useState(null),\n      paymentRequestItems = _useState[0],\n      setPaymentRequestItems = _useState[1];\n\n  var fetchPaymentRequests = useCallback( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var data;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return axios({\n              url: 'https://kytejmxrrrgahiikcodklhf6rq.appsync-api.us-east-1.amazonaws.com/graphql',\n              method: 'post',\n              headers: {\n                'x-api-key': 'da2-iwznaxe3h5bxznagzuctrhqekm'\n              },\n              data: {\n                query: print(listPaymentRequest)\n              }\n            });\n\n          case 3:\n            data = _context.sent;\n            console.log('Zaven jan here is the data about payment request', data);\n            setPaymentRequestItems(data.data.data.listPaymentRequests.items);\n            _context.next = 11;\n            break;\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 8]]);\n  })), []);\n  useEffect(function () {\n    fetchPaymentRequests();\n  }, [fetchPaymentRequests]);\n  console.log('Payment request items', paymentRequestItems);\n  return __jsx(Page, {\n    title: \"Payment Request\"\n  }, __jsx(Table, {\n    selectable: true,\n    celled: true\n  }, __jsx(Table.Header, null, __jsx(Table.Row, null, __jsx(Table.HeaderCell, null, \"Customer Id\"), __jsx(Table.HeaderCell, null, \"Order Id\"), __jsx(Table.HeaderCell, null, \"Bonus Amount\"), __jsx(Table.HeaderCell, null, \"Created At\"), __jsx(Table.HeaderCell, null, \"Updated At\"), __jsx(Table.HeaderCell, null, \"Status\"), __jsx(Table.HeaderCell, null, \"Action\"))), __jsx(Table.Body, null, paymentRequestItems && paymentRequestItems.map(function (item) {\n    return __jsx(Table.Row, {\n      key: item.id\n    }, __jsx(Table.Cell, null, __jsx(Badge, {\n      status: \"info\"\n    }, item.customerId)), __jsx(Table.Cell, null, __jsx(Badge, {\n      status: \"info\"\n    }, item.orderId)), __jsx(Table.Cell, null, toCurrency(item.bonusAmount)), __jsx(Table.Cell, null, formatDate(item.createdAt)), __jsx(Table.Cell, null, formatDate(item.updatedAt)), __jsx(Table.Cell, null, item.status), __jsx(Table.Cell, null, __jsx(Icon, {\n      color: \"green\",\n      name: \"check\"\n    }), __jsx(Icon, {\n      color: \"red\",\n      name: \"remove\"\n    })));\n  }))));\n};\n\n_s(AcceptPayment, \"2o5wY1b4FmdJWEYIBsowN/Q5zWA=\");\n\n_c = AcceptPayment;\nexport default AcceptPayment;\n\nvar _c;\n\n$RefreshReg$(_c, \"AcceptPayment\");","map":{"version":3,"sources":["C:/Users/Admin/Desktop/transactions/pages/accept-payment.js"],"names":["React","useState","useEffect","useCallback","axios","gql","print","Page","Badge","Table","TableCell","Icon","toCurrency","formatDate","listPaymentRequest","AcceptPayment","paymentRequestItems","setPaymentRequestItems","fetchPaymentRequests","url","method","headers","data","query","console","log","listPaymentRequests","items","map","item","id","customerId","orderId","bonusAmount","createdAt","updatedAt","status"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react'\r\nimport axios from 'axios'\r\nimport gql from 'graphql-tag'\r\nimport { print } from 'graphql'\r\nimport { Page, Badge } from '@shopify/polaris'\r\nimport { Table, TableCell, Icon } from 'semantic-ui-react'\r\nimport { toCurrency, formatDate } from '../utils/helper'\r\n\r\nconst listPaymentRequest = gql`\r\n    query listPaymentRequest {\r\n        listPaymentRequests {\r\n            items {\r\n                bonusAmount\r\n                createdAt\r\n                customerId\r\n                id\r\n                orderId\r\n                status\r\n                updatedAt\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nconst AcceptPayment = () => {\r\n    const [paymentRequestItems, setPaymentRequestItems] = useState(null)\r\n    const fetchPaymentRequests = useCallback(async () => {\r\n        try {\r\n            const data = await axios({\r\n                url:\r\n                    'https://kytejmxrrrgahiikcodklhf6rq.appsync-api.us-east-1.amazonaws.com/graphql',\r\n                method: 'post',\r\n                headers: {\r\n                    'x-api-key': 'da2-iwznaxe3h5bxznagzuctrhqekm'\r\n                },\r\n                data: {\r\n                    query: print(listPaymentRequest)\r\n                }\r\n            })\r\n            console.log('Zaven jan here is the data about payment request', data)\r\n            setPaymentRequestItems(data.data.data.listPaymentRequests.items)\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        fetchPaymentRequests()\r\n    }, [fetchPaymentRequests])\r\n\r\n    console.log('Payment request items', paymentRequestItems)\r\n    return (\r\n        <Page title=\"Payment Request\">\r\n            <Table selectable celled>\r\n                <Table.Header>\r\n                    <Table.Row>\r\n                        <Table.HeaderCell>Customer Id</Table.HeaderCell>\r\n                        <Table.HeaderCell>Order Id</Table.HeaderCell>\r\n                        <Table.HeaderCell>Bonus Amount</Table.HeaderCell>\r\n                        <Table.HeaderCell>Created At</Table.HeaderCell>\r\n                        <Table.HeaderCell>Updated At</Table.HeaderCell>\r\n                        <Table.HeaderCell>Status</Table.HeaderCell>\r\n                        <Table.HeaderCell>Action</Table.HeaderCell>\r\n                    </Table.Row>\r\n                </Table.Header>\r\n                <Table.Body>\r\n                    {paymentRequestItems &&\r\n                        paymentRequestItems.map((item) => (\r\n                            <Table.Row key={item.id}>\r\n                                <Table.Cell>\r\n                                    <Badge status=\"info\">{item.customerId}</Badge>\r\n                                </Table.Cell>\r\n                                <Table.Cell>\r\n                                    <Badge status=\"info\">{item.orderId}</Badge>\r\n                                </Table.Cell>\r\n                                <Table.Cell>{toCurrency(item.bonusAmount)}</Table.Cell>\r\n                                <Table.Cell>{formatDate(item.createdAt)}</Table.Cell>\r\n                                <Table.Cell>{formatDate(item.updatedAt)}</Table.Cell>\r\n                                <Table.Cell>{item.status}</Table.Cell>\r\n                                <Table.Cell>\r\n                                    <Icon color=\"green\" name=\"check\" />\r\n                                    <Icon color=\"red\" name=\"remove\" />\r\n                                </Table.Cell>\r\n                            </Table.Row>\r\n                        ))}\r\n                </Table.Body>\r\n            </Table>\r\n        </Page>\r\n    )\r\n}\r\n\r\nexport default AcceptPayment\r\n"]},"metadata":{},"sourceType":"module"}