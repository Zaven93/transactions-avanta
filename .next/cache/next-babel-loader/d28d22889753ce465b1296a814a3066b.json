{"ast":null,"code":"var _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { Page, Button, Icon, Modal, Form, FormLayout, TextField } from '@shopify/polaris';\nimport { Table, Popup, Header } from 'semantic-ui-react';\nimport ProductList from './ProductsList';\n\nvar BranchConsole = function BranchConsole() {\n  _s();\n\n  var _useState = useState(false),\n      active = _useState[0],\n      setActive = _useState[1];\n\n  var _useState2 = useState(''),\n      username = _useState2[0],\n      setUsername = _useState2[1];\n\n  var _useState3 = useState(''),\n      email = _useState3[0],\n      setEmail = _useState3[1];\n\n  var _useState4 = useState(''),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var onChangeUsername = useCallback(function (username) {\n    setUsername(username);\n  }, []);\n  var onChangePassword = useCallback(function (password) {\n    setPassword(password);\n  }, []);\n  var onChangeEmail = useCallback(function (email) {\n    setEmail(email);\n  }, []);\n\n  var handleChange = function handleChange() {\n    setActive(!active);\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Button, {\n    onClick: handleChange,\n    primary: true\n  }, \"Create branch\"), __jsx(Table, {\n    selectable: true,\n    celled: true\n  }, __jsx(Table.Header, null, __jsx(Table.Row, null, __jsx(Table.HeaderCell, null, \"Branch Name\"), __jsx(Table.HeaderCell, null, \"Created At\")))), __jsx(Modal, {\n    open: active,\n    onClose: handleChange,\n    title: \"Fill in Branch info\" //  primaryAction={{\n    //      content: 'Proceed',\n    //     //  onAction: () => {\n    //     //  }\n    //  }}\n\n  }, __jsx(Form, null, __jsx(FormLayout, null, __jsx(TextField, {\n    label: \"Branch Name\"\n  }), __jsx(TextField, {\n    value: username,\n    onChange: onChangeUsername,\n    label: \"Branch admin username\"\n  }), __jsx(TextField, {\n    value: email,\n    onChange: onChangeEmail,\n    label: \"Branch admin email\"\n  }), __jsx(TextField, {\n    type: \"password\",\n    value: password,\n    onChange: onChangePassword,\n    label: \"Branch admin password\"\n  }), __jsx(Button, {\n    primary: true,\n    submit: true\n  }, \"Login\")))));\n};\n\n_s(BranchConsole, \"5gqUWD24LHNym21ZAcLkjl3+Cs8=\");\n\n_c = BranchConsole;\nexport default BranchConsole;\n\nvar _c;\n\n$RefreshReg$(_c, \"BranchConsole\");","map":{"version":3,"sources":["C:/Users/Admin/Desktop/transactions/components/BranchConsole.js"],"names":["React","useState","useEffect","useRef","useCallback","Page","Button","Icon","Modal","Form","FormLayout","TextField","Table","Popup","Header","ProductList","BranchConsole","active","setActive","username","setUsername","email","setEmail","password","setPassword","onChangeUsername","onChangePassword","onChangeEmail","handleChange"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,EAA6CC,WAA7C,QAAgE,OAAhE;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,IAAvB,EAA6BC,KAA7B,EAAoCC,IAApC,EAA0CC,UAA1C,EAAsDC,SAAtD,QAAuE,kBAAvE;AACA,SAASC,KAAT,EAAgBC,KAAhB,EAAuBC,MAAvB,QAAqC,mBAArC;AACA,OAAOC,WAAP,MAAwB,gBAAxB;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAAA;;AAAA,kBACIf,QAAQ,CAAC,KAAD,CADZ;AAAA,MACjBgB,MADiB;AAAA,MACTC,SADS;;AAAA,mBAEQjB,QAAQ,CAAC,EAAD,CAFhB;AAAA,MAEjBkB,QAFiB;AAAA,MAEPC,WAFO;;AAAA,mBAGEnB,QAAQ,CAAC,EAAD,CAHV;AAAA,MAGjBoB,KAHiB;AAAA,MAGVC,QAHU;;AAAA,mBAIQrB,QAAQ,CAAC,EAAD,CAJhB;AAAA,MAIjBsB,QAJiB;AAAA,MAIPC,WAJO;;AAMxB,MAAMC,gBAAgB,GAAGrB,WAAW,CAAC,UAACe,QAAD,EAAc;AAC/CC,IAAAA,WAAW,CAACD,QAAD,CAAX;AACH,GAFmC,EAEjC,EAFiC,CAApC;AAIA,MAAMO,gBAAgB,GAAGtB,WAAW,CAAC,UAACmB,QAAD,EAAc;AAC/CC,IAAAA,WAAW,CAACD,QAAD,CAAX;AACH,GAFmC,EAEjC,EAFiC,CAApC;AAIA,MAAMI,aAAa,GAAGvB,WAAW,CAAC,UAACiB,KAAD,EAAW;AACzCC,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACH,GAFgC,EAE9B,EAF8B,CAAjC;;AAIA,MAAMO,YAAY,GAAG,SAAfA,YAAe,GAAM;AACvBV,IAAAA,SAAS,CAAC,CAACD,MAAF,CAAT;AACH,GAFD;;AAGA,SACI,4BACI,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAEW,YAAjB;AAA+B,IAAA,OAAO;AAAtC,qBADJ,EAII,MAAC,KAAD;AAAO,IAAA,UAAU,MAAjB;AAAkB,IAAA,MAAM;AAAxB,KACI,MAAC,KAAD,CAAO,MAAP,QACI,MAAC,KAAD,CAAO,GAAP,QACI,MAAC,KAAD,CAAO,UAAP,sBADJ,EAEI,MAAC,KAAD,CAAO,UAAP,qBAFJ,CADJ,CADJ,CAJJ,EA8DI,MAAC,KAAD;AACI,IAAA,IAAI,EAAEX,MADV;AAEI,IAAA,OAAO,EAAEW,YAFb;AAGI,IAAA,KAAK,EAAC,qBAHV,CAII;AACA;AACA;AAEA;AACA;;AATJ,KAWI,MAAC,IAAD,QACI,MAAC,UAAD,QACI,MAAC,SAAD;AAAW,IAAA,KAAK,EAAC;AAAjB,IADJ,EAEI,MAAC,SAAD;AACI,IAAA,KAAK,EAAET,QADX;AAEI,IAAA,QAAQ,EAAEM,gBAFd;AAGI,IAAA,KAAK,EAAC;AAHV,IAFJ,EAOI,MAAC,SAAD;AACI,IAAA,KAAK,EAAEJ,KADX;AAEI,IAAA,QAAQ,EAAEM,aAFd;AAGI,IAAA,KAAK,EAAC;AAHV,IAPJ,EAYI,MAAC,SAAD;AACI,IAAA,IAAI,EAAC,UADT;AAEI,IAAA,KAAK,EAAEJ,QAFX;AAGI,IAAA,QAAQ,EAAEG,gBAHd;AAII,IAAA,KAAK,EAAC;AAJV,IAZJ,EAkBI,MAAC,MAAD;AAAQ,IAAA,OAAO,MAAf;AAAgB,IAAA,MAAM;AAAtB,aAlBJ,CADJ,CAXJ,CA9DJ,CADJ;AAqGH,CA1HD;;GAAMV,a;;KAAAA,a;AA4HN,eAAeA,aAAf","sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react'\r\nimport { Page, Button, Icon, Modal, Form, FormLayout, TextField } from '@shopify/polaris'\r\nimport { Table, Popup, Header } from 'semantic-ui-react'\r\nimport ProductList from './ProductsList'\r\n\r\nconst BranchConsole = () => {\r\n    const [active, setActive] = useState(false)\r\n    const [username, setUsername] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const onChangeUsername = useCallback((username) => {\r\n        setUsername(username)\r\n    }, [])\r\n\r\n    const onChangePassword = useCallback((password) => {\r\n        setPassword(password)\r\n    }, [])\r\n\r\n    const onChangeEmail = useCallback((email) => {\r\n        setEmail(email)\r\n    }, [])\r\n\r\n    const handleChange = () => {\r\n        setActive(!active)\r\n    }\r\n    return (\r\n        <>\r\n            <Button onClick={handleChange} primary>\r\n                Create branch\r\n            </Button>\r\n            <Table selectable celled>\r\n                <Table.Header>\r\n                    <Table.Row>\r\n                        <Table.HeaderCell>Branch Name</Table.HeaderCell>\r\n                        <Table.HeaderCell>Created At</Table.HeaderCell>\r\n                    </Table.Row>\r\n                </Table.Header>\r\n                {/* <Table.Body>\r\n                    {paymentRequestItems &&\r\n                        paymentRequestItems\r\n                            .sort((a, b) => new Date(b.updatedAt) - new Date(a.updatedAt))\r\n                            .map((item) => (\r\n                                <Table.Row key={item.id}>\r\n                                    <Table.Cell>\r\n                                        <Badge size=\"small\">{item.customerId}</Badge>\r\n                                    </Table.Cell>\r\n                                    <Table.Cell>{toCurrency(item.bonusAmount)}</Table.Cell>\r\n                                    <Table.Cell>{formatDate(item.createdAt)}</Table.Cell>\r\n                                    <Table.Cell>{formatDate(item.updatedAt)}</Table.Cell>\r\n                                    <Table.Cell>\r\n                                        <Badge\r\n                                            size=\"small\"\r\n                                            progress=\"partiallyComplete\"\r\n                                            status=\"attention\">\r\n                                            {item.status}\r\n                                        </Badge>\r\n                                    </Table.Cell>\r\n                                    <Table.Cell className=\"actions-cell\">\r\n                                        <Popup\r\n                                            content=\"Approve payment\"\r\n                                            trigger={\r\n                                                <Icon\r\n                                                    className=\"accept\"\r\n                                                    name=\"check\"\r\n                                                    onClick={() => {\r\n                                                        setPaymentRequestId(item.id)\r\n                                                        handleChange()\r\n                                                    }}\r\n                                                />\r\n                                            }\r\n                                        />\r\n                                        <Popup\r\n                                            content=\"Decline payment\"\r\n                                            trigger={\r\n                                                <Icon\r\n                                                    className=\"decline\"\r\n                                                    name=\"remove\"\r\n                                                    onClick={async () => {\r\n                                                        declinePayment(item.id)\r\n                                                    }}\r\n                                                />\r\n                                            }\r\n                                        />\r\n                                    </Table.Cell>\r\n                                </Table.Row>\r\n                            ))}\r\n                </Table.Body> */}\r\n            </Table>\r\n            <Modal\r\n                open={active}\r\n                onClose={handleChange}\r\n                title=\"Fill in Branch info\"\r\n                //  primaryAction={{\r\n                //      content: 'Proceed',\r\n                //     //  onAction: () => {\r\n\r\n                //     //  }\r\n                //  }}\r\n            >\r\n                <Form>\r\n                    <FormLayout>\r\n                        <TextField label=\"Branch Name\" />\r\n                        <TextField\r\n                            value={username}\r\n                            onChange={onChangeUsername}\r\n                            label=\"Branch admin username\"\r\n                        />\r\n                        <TextField\r\n                            value={email}\r\n                            onChange={onChangeEmail}\r\n                            label=\"Branch admin email\"\r\n                        />\r\n                        <TextField\r\n                            type=\"password\"\r\n                            value={password}\r\n                            onChange={onChangePassword}\r\n                            label=\"Branch admin password\"\r\n                        />\r\n                        <Button primary submit>\r\n                            Login\r\n                        </Button>\r\n                    </FormLayout>\r\n                </Form>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default BranchConsole\r\n"]},"metadata":{},"sourceType":"module"}