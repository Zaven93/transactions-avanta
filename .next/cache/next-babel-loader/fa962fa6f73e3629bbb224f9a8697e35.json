{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation updatePaymentRequest($input: UpdatePaymentRequestInput!) {\\n        updatePaymentRequest(input: $input) {\\n            bonusAmount\\n            customerId\\n            id\\n            orderId\\n            status\\n            products {\\n                originalUnitPrice\\n                quantity\\n                variantId\\n            }\\n            createdAt\\n            updatedAt\\n        }\\n    }\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation CompleteOrder($id: ID!) {\\n        draftOrderComplete(id: $id, paymentPending: true) {\\n            draftOrder {\\n                customer {\\n                    id\\n                }\\n                email\\n                name\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation CreateOrder($input: DraftOrderInput!) {\\n        draftOrderCreate(input: $input) {\\n            draftOrder {\\n                id\\n                customer {\\n                    id\\n                }\\n                email\\n                lineItems(first: 10) {\\n                    edges {\\n                        node {\\n                            title\\n                            quantity\\n                            originalUnitPrice\\n                            variant {\\n                                id\\n                                price\\n                                title\\n                                product {\\n                                    tags\\n                                    title\\n                                    images(first: 5) {\\n                                        edges {\\n                                            node {\\n                                                originalSrc\\n                                            }\\n                                        }\\n                                    }\\n                                }\\n                            }\\n                        }\\n                    }\\n                }\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from 'graphql-tag';\nvar createDraftOrder = gql(_templateObject());\nexport var completeOrder = gql(_templateObject2());\nexport var updatePaymentRequest = gql(_templateObject3());","map":{"version":3,"sources":["C:/Users/Admin/Desktop/transactions/graphql/mutation.js"],"names":["gql","createDraftOrder","completeOrder","updatePaymentRequest"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AAEA,IAAMC,gBAAgB,GAAGD,GAAH,mBAAtB;AAuCA,OAAO,IAAME,aAAa,GAAGF,GAAH,oBAAnB;AAcP,OAAO,IAAMG,oBAAoB,GAAGH,GAAH,oBAA1B","sourcesContent":["import gql from 'graphql-tag'\r\n\r\nconst createDraftOrder = gql`\r\n    mutation CreateOrder($input: DraftOrderInput!) {\r\n        draftOrderCreate(input: $input) {\r\n            draftOrder {\r\n                id\r\n                customer {\r\n                    id\r\n                }\r\n                email\r\n                lineItems(first: 10) {\r\n                    edges {\r\n                        node {\r\n                            title\r\n                            quantity\r\n                            originalUnitPrice\r\n                            variant {\r\n                                id\r\n                                price\r\n                                title\r\n                                product {\r\n                                    tags\r\n                                    title\r\n                                    images(first: 5) {\r\n                                        edges {\r\n                                            node {\r\n                                                originalSrc\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nexport const completeOrder = gql`\r\n    mutation CompleteOrder($id: ID!) {\r\n        draftOrderComplete(id: $id, paymentPending: true) {\r\n            draftOrder {\r\n                customer {\r\n                    id\r\n                }\r\n                email\r\n                name\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nexport const updatePaymentRequest = gql`\r\n    mutation updatePaymentRequest($input: UpdatePaymentRequestInput!) {\r\n        updatePaymentRequest(input: $input) {\r\n            bonusAmount\r\n            customerId\r\n            id\r\n            orderId\r\n            status\r\n            products {\r\n                originalUnitPrice\r\n                quantity\r\n                variantId\r\n            }\r\n            createdAt\r\n            updatedAt\r\n        }\r\n    }\r\n`\r\n"]},"metadata":{},"sourceType":"module"}