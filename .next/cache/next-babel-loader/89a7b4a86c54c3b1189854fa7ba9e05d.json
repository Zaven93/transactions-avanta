{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    query getBranch($id: ID) {\\n        getBranch(id: $id) {\\n            branchName\\n            adminId\\n            id\\n            branchProducts {\\n                items {\\n                    branchId\\n                    createdAt\\n                    id\\n                    productId\\n                    tags\\n                    updatedAt\\n                }\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport { API, graphqlOperation } from 'aws-amplify';\nimport gql from 'graphql-tag';\nimport config from '../../aws-exports';\nAPI.configure(config);\nvar getBranchById = gql(_templateObject());\n\nvar Branch = function Branch() {\n  _s();\n\n  var router = useRouter();\n  console.log('Router from branch', router.asPath.split('/')[2].split('?')[0]);\n\n  var fetchBranch = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var branchId, branch;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              branchId = router.asPath.split('/')[2].split('?')[0];\n\n              if (branchId) {\n                _context.next = 3;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 3:\n              _context.prev = 3;\n              _context.next = 6;\n              return API.graphql(graphqlOperation(getBranchById, {\n                id: branchId\n              }));\n\n            case 6:\n              branch = _context.sent;\n              console.log('Fetched branch', branch);\n              _context.next = 13;\n              break;\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](3);\n              console.log(_context.t0);\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[3, 10]]);\n    }));\n\n    return function fetchBranch() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    fetchBranch();\n  }, []);\n  return __jsx(\"div\", null, \"Branch\");\n};\n\n_s(Branch, \"vQduR7x+OPXj6PSmJyFnf+hU7bg=\", false, function () {\n  return [useRouter];\n});\n\n_c = Branch;\nexport default Branch;\n\nvar _c;\n\n$RefreshReg$(_c, \"Branch\");","map":{"version":3,"sources":["C:/Users/Admin/Desktop/transactions/pages/branch/[branchId].js"],"names":["React","useState","useEffect","useRouter","API","graphqlOperation","gql","config","configure","getBranchById","Branch","router","console","log","asPath","split","fetchBranch","branchId","graphql","id","branch"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,GAAT,EAAcC,gBAAd,QAAsC,aAAtC;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEAH,GAAG,CAACI,SAAJ,CAAcD,MAAd;AAEA,IAAME,aAAa,GAAGH,GAAH,mBAAnB;;AAoBA,IAAMI,MAAM,GAAG,SAATA,MAAS,GAAM;AAAA;;AACjB,MAAMC,MAAM,GAAGR,SAAS,EAAxB;AACAS,EAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCF,MAAM,CAACG,MAAP,CAAcC,KAAd,CAAoB,GAApB,EAAyB,CAAzB,EAA4BA,KAA5B,CAAkC,GAAlC,EAAuC,CAAvC,CAAlC;;AAEA,MAAMC,WAAW;AAAA,wEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AACVC,cAAAA,QADU,GACCN,MAAM,CAACG,MAAP,CAAcC,KAAd,CAAoB,GAApB,EAAyB,CAAzB,EAA4BA,KAA5B,CAAkC,GAAlC,EAAuC,CAAvC,CADD;;AAAA,kBAEXE,QAFW;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA,qBAMSb,GAAG,CAACc,OAAJ,CAAYb,gBAAgB,CAACI,aAAD,EAAgB;AAAEU,gBAAAA,EAAE,EAAEF;AAAN,eAAhB,CAA5B,CANT;;AAAA;AAMNG,cAAAA,MANM;AAOZR,cAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BO,MAA9B;AAPY;AAAA;;AAAA;AAAA;AAAA;AASZR,cAAAA,OAAO,CAACC,GAAR;;AATY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAXG,WAAW;AAAA;AAAA;AAAA,KAAjB;;AAYAd,EAAAA,SAAS,CAAC,YAAM;AACZc,IAAAA,WAAW;AACd,GAFQ,EAEN,EAFM,CAAT;AAGA,SAAO,4BAAP;AACH,CApBD;;GAAMN,M;UACaP,S;;;KADbO,M;AAsBN,eAAeA,MAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { useRouter } from 'next/router'\r\nimport { API, graphqlOperation } from 'aws-amplify'\r\nimport gql from 'graphql-tag'\r\nimport config from '../../aws-exports'\r\n\r\nAPI.configure(config)\r\n\r\nconst getBranchById = gql`\r\n    query getBranch($id: ID) {\r\n        getBranch(id: $id) {\r\n            branchName\r\n            adminId\r\n            id\r\n            branchProducts {\r\n                items {\r\n                    branchId\r\n                    createdAt\r\n                    id\r\n                    productId\r\n                    tags\r\n                    updatedAt\r\n                }\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nconst Branch = () => {\r\n    const router = useRouter()\r\n    console.log('Router from branch', router.asPath.split('/')[2].split('?')[0])\r\n\r\n    const fetchBranch = async () => {\r\n        const branchId = router.asPath.split('/')[2].split('?')[0]\r\n        if (!branchId) {\r\n            return\r\n        }\r\n        try {\r\n            const branch = await API.graphql(graphqlOperation(getBranchById, { id: branchId }))\r\n            console.log('Fetched branch', branch)\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        fetchBranch()\r\n    }, [])\r\n    return <div>Branch</div>\r\n}\r\n\r\nexport default Branch\r\n"]},"metadata":{},"sourceType":"module"}