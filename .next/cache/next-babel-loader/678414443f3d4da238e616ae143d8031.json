{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport App from 'next/app';\nimport Head from 'next/head';\nimport 'semantic-ui-css/semantic.min.css';\nimport { AppProvider } from '@shopify/polaris';\nimport { Provider } from '@shopify/app-bridge-react';\nimport '@shopify/polaris/dist/styles.css';\nimport translations from '@shopify/polaris/locales/en.json';\nimport Cookies from 'js-cookie';\nimport { ApolloClient, ApolloProvider, InMemoryCache } from '@apollo/client';\nimport { createHttpLink } from 'apollo-link-http';\nimport '../styles/style.css';\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link: createHttpLink({\n    credentials: 'include'\n  })\n});\n\nclass MyApp extends App {\n  render() {\n    const {\n      Component,\n      pageProps\n    } = this.props;\n    const config = {\n      apiKey: '3b01063bac3031d13101100ef3e44fd5',\n      shopOrigin: Cookies.get('shopOrigin'),\n      forceRedirect: true\n    };\n    return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, \"Sample App\"), __jsx(\"meta\", {\n      charSet: \"utf-8\"\n    })), __jsx(Provider, {\n      config: config\n    }, __jsx(AppProvider, {\n      i18n: translations\n    }, __jsx(ApolloProvider, {\n      client: client\n    }, __jsx(Component, pageProps)))));\n  }\n\n}\n\nexport default MyApp;","map":null,"metadata":{},"sourceType":"module"}