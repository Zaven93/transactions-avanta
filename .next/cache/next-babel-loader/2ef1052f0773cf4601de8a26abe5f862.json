{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useEffect, useCallback } from 'react';\nimport axios from 'axios';\nimport gql from 'graphql-tag';\nimport { print } from 'graphql';\nimport { Page } from '@shopify/polaris';\nimport { Table } from 'semantic-ui-react';\nconst listPaymentRequest = gql`\n    query listPaymentRequest {\n        listPaymentRequests {\n            items {\n                bonusAmount\n                createdAt\n                customerId\n                id\n                orderId\n                status\n                updatedAt\n            }\n        }\n    }\n`;\n\nconst AcceptPayment = () => {\n  const {\n    0: paymentRequestItems,\n    1: setPaymentRequestItems\n  } = useState(null);\n  const fetchPaymentRequests = useCallback(async () => {\n    try {\n      const data = await axios({\n        url: 'https://kytejmxrrrgahiikcodklhf6rq.appsync-api.us-east-1.amazonaws.com/graphql',\n        method: 'post',\n        headers: {\n          'x-api-key': 'da2-iwznaxe3h5bxznagzuctrhqekm'\n        },\n        data: {\n          query: print(listPaymentRequest)\n        }\n      });\n      console.log('Zaven jan here is the data about payment request', data);\n      setPaymentRequestItems(data.data.data.listPaymentRequests.items);\n    } catch (error) {\n      console.log(error);\n    }\n  }, []);\n  useEffect(() => {\n    fetchPaymentRequests();\n  }, [fetchPaymentRequests]);\n  console.log('Payment request items', paymentRequestItems);\n  return __jsx(Page, {\n    title: \"Payment Request\"\n  }, __jsx(Table, {\n    selectable: true,\n    celled: true\n  }, __jsx(Table.Header, null, __jsx(Table.Row, null, __jsx(Table.HeaderCell, null, \"Customer Id\"), __jsx(Table.HeaderCell, null, \"Order Id\"), __jsx(Table.HeaderCell, null, \"Bonus Amount\"), __jsx(Table.HeaderCell, null, \"Created At\"), __jsx(Table.HeaderCell, null, \"Updated At\"), __jsx(Table.HeaderCell, null, \"Status\"), __jsx(Table.HeaderCell, null, \"Action\"))), __jsx(Table.Body, null, paymentRequestItems.map(item => __jsx(Table.Row, {\n    key: item.id\n  }, __jsx(Table.Cell, null, item.customerId), __jsx(Table.Cell, null, item.orderId), __jsx(Table.Cell, null, item.bonusAmount), __jsx(Table.Cell, null, item.createdAt), __jsx(Table.Cell, null, item.updatedAt), __jsx(Table.Cell, null, item.status))))));\n};\n\nexport default AcceptPayment;","map":{"version":3,"sources":["C:/Users/Admin/Desktop/transactions/pages/accept-payment.js"],"names":["React","useState","useEffect","useCallback","axios","gql","print","Page","Table","listPaymentRequest","AcceptPayment","paymentRequestItems","setPaymentRequestItems","fetchPaymentRequests","data","url","method","headers","query","console","log","listPaymentRequests","items","error","map","item","id","customerId","orderId","bonusAmount","createdAt","updatedAt","status"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,WAArC,QAAwD,OAAxD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,KAAT,QAAsB,SAAtB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,KAAT,QAAsB,mBAAtB;AAEA,MAAMC,kBAAkB,GAAGJ,GAAI;;;;;;;;;;;;;;CAA/B;;AAgBA,MAAMK,aAAa,GAAG,MAAM;AACxB,QAAM;AAAA,OAACC,mBAAD;AAAA,OAAsBC;AAAtB,MAAgDX,QAAQ,CAAC,IAAD,CAA9D;AACA,QAAMY,oBAAoB,GAAGV,WAAW,CAAC,YAAY;AACjD,QAAI;AACA,YAAMW,IAAI,GAAG,MAAMV,KAAK,CAAC;AACrBW,QAAAA,GAAG,EACC,gFAFiB;AAGrBC,QAAAA,MAAM,EAAE,MAHa;AAIrBC,QAAAA,OAAO,EAAE;AACL,uBAAa;AADR,SAJY;AAOrBH,QAAAA,IAAI,EAAE;AACFI,UAAAA,KAAK,EAAEZ,KAAK,CAACG,kBAAD;AADV;AAPe,OAAD,CAAxB;AAWAU,MAAAA,OAAO,CAACC,GAAR,CAAY,kDAAZ,EAAgEN,IAAhE;AACAF,MAAAA,sBAAsB,CAACE,IAAI,CAACA,IAAL,CAAUA,IAAV,CAAeO,mBAAf,CAAmCC,KAApC,CAAtB;AACH,KAdD,CAcE,OAAOC,KAAP,EAAc;AACZJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACH;AACJ,GAlBuC,EAkBrC,EAlBqC,CAAxC;AAoBArB,EAAAA,SAAS,CAAC,MAAM;AACZW,IAAAA,oBAAoB;AACvB,GAFQ,EAEN,CAACA,oBAAD,CAFM,CAAT;AAIAM,EAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCT,mBAArC;AACA,SACI,MAAC,IAAD;AAAM,IAAA,KAAK,EAAC;AAAZ,KACI,MAAC,KAAD;AAAO,IAAA,UAAU,MAAjB;AAAkB,IAAA,MAAM;AAAxB,KACI,MAAC,KAAD,CAAO,MAAP,QACI,MAAC,KAAD,CAAO,GAAP,QACI,MAAC,KAAD,CAAO,UAAP,sBADJ,EAEI,MAAC,KAAD,CAAO,UAAP,mBAFJ,EAGI,MAAC,KAAD,CAAO,UAAP,uBAHJ,EAII,MAAC,KAAD,CAAO,UAAP,qBAJJ,EAKI,MAAC,KAAD,CAAO,UAAP,qBALJ,EAMI,MAAC,KAAD,CAAO,UAAP,iBANJ,EAOI,MAAC,KAAD,CAAO,UAAP,iBAPJ,CADJ,CADJ,EAYI,MAAC,KAAD,CAAO,IAAP,QACKA,mBAAmB,CAACa,GAApB,CAAyBC,IAAD,IACrB,MAAC,KAAD,CAAO,GAAP;AAAW,IAAA,GAAG,EAAEA,IAAI,CAACC;AAArB,KACI,MAAC,KAAD,CAAO,IAAP,QAAaD,IAAI,CAACE,UAAlB,CADJ,EAEI,MAAC,KAAD,CAAO,IAAP,QAAaF,IAAI,CAACG,OAAlB,CAFJ,EAGI,MAAC,KAAD,CAAO,IAAP,QAAaH,IAAI,CAACI,WAAlB,CAHJ,EAII,MAAC,KAAD,CAAO,IAAP,QAAaJ,IAAI,CAACK,SAAlB,CAJJ,EAKI,MAAC,KAAD,CAAO,IAAP,QAAaL,IAAI,CAACM,SAAlB,CALJ,EAMI,MAAC,KAAD,CAAO,IAAP,QAAaN,IAAI,CAACO,MAAlB,CANJ,CADH,CADL,CAZJ,CADJ,CADJ;AA6BH,CAxDD;;AA0DA,eAAetB,aAAf","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react'\r\nimport axios from 'axios'\r\nimport gql from 'graphql-tag'\r\nimport { print } from 'graphql'\r\nimport { Page } from '@shopify/polaris'\r\nimport { Table } from 'semantic-ui-react'\r\n\r\nconst listPaymentRequest = gql`\r\n    query listPaymentRequest {\r\n        listPaymentRequests {\r\n            items {\r\n                bonusAmount\r\n                createdAt\r\n                customerId\r\n                id\r\n                orderId\r\n                status\r\n                updatedAt\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nconst AcceptPayment = () => {\r\n    const [paymentRequestItems, setPaymentRequestItems] = useState(null)\r\n    const fetchPaymentRequests = useCallback(async () => {\r\n        try {\r\n            const data = await axios({\r\n                url:\r\n                    'https://kytejmxrrrgahiikcodklhf6rq.appsync-api.us-east-1.amazonaws.com/graphql',\r\n                method: 'post',\r\n                headers: {\r\n                    'x-api-key': 'da2-iwznaxe3h5bxznagzuctrhqekm'\r\n                },\r\n                data: {\r\n                    query: print(listPaymentRequest)\r\n                }\r\n            })\r\n            console.log('Zaven jan here is the data about payment request', data)\r\n            setPaymentRequestItems(data.data.data.listPaymentRequests.items)\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        fetchPaymentRequests()\r\n    }, [fetchPaymentRequests])\r\n\r\n    console.log('Payment request items', paymentRequestItems)\r\n    return (\r\n        <Page title=\"Payment Request\">\r\n            <Table selectable celled>\r\n                <Table.Header>\r\n                    <Table.Row>\r\n                        <Table.HeaderCell>Customer Id</Table.HeaderCell>\r\n                        <Table.HeaderCell>Order Id</Table.HeaderCell>\r\n                        <Table.HeaderCell>Bonus Amount</Table.HeaderCell>\r\n                        <Table.HeaderCell>Created At</Table.HeaderCell>\r\n                        <Table.HeaderCell>Updated At</Table.HeaderCell>\r\n                        <Table.HeaderCell>Status</Table.HeaderCell>\r\n                        <Table.HeaderCell>Action</Table.HeaderCell>\r\n                    </Table.Row>\r\n                </Table.Header>\r\n                <Table.Body>\r\n                    {paymentRequestItems.map((item) => (\r\n                        <Table.Row key={item.id}>\r\n                            <Table.Cell>{item.customerId}</Table.Cell>\r\n                            <Table.Cell>{item.orderId}</Table.Cell>\r\n                            <Table.Cell>{item.bonusAmount}</Table.Cell>\r\n                            <Table.Cell>{item.createdAt}</Table.Cell>\r\n                            <Table.Cell>{item.updatedAt}</Table.Cell>\r\n                            <Table.Cell>{item.status}</Table.Cell>\r\n                        </Table.Row>\r\n                    ))}\r\n                </Table.Body>\r\n            </Table>\r\n        </Page>\r\n    )\r\n}\r\n\r\nexport default AcceptPayment\r\n"]},"metadata":{},"sourceType":"module"}