{"ast":null,"code":"import { API, graphqlOperation } from \"aws-amplify\";\nimport config from \"../../aws-exports\";\nimport { listPaymentRequest } from \"../../graphql/queries\";\nimport { updatePaymentRequest } from \"../../graphql/mutation\";\nAPI.configure(config);\nexport const fetchPaymentRequest = ({\n  branchId,\n  status,\n  limit\n}) => {\n  return API.graphql(graphqlOperation(listPaymentRequest, {\n    branchId,\n    status,\n    limit\n  }));\n};\nexport const updatePayment = ({\n  paymentId,\n  status\n}) => {\n  return API.graphql(graphqlOperation(updatePaymentRequest, {\n    input: {\n      id: paymentId,\n      status\n    }\n  }));\n};","map":{"version":3,"sources":["/var/www/transactions-avanta/core/services/paymentRequest.service.js"],"names":["API","graphqlOperation","config","listPaymentRequest","updatePaymentRequest","configure","fetchPaymentRequest","branchId","status","limit","graphql","updatePayment","paymentId","input","id"],"mappings":"AAAA,SAASA,GAAT,EAAcC,gBAAd,QAAsC,aAAtC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,kBAAT,QAAmC,uBAAnC;AACA,SAASC,oBAAT,QAAqC,wBAArC;AAEAJ,GAAG,CAACK,SAAJ,CAAcH,MAAd;AAEA,OAAO,MAAMI,mBAAmB,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,MAAZ;AAAoBC,EAAAA;AAApB,CAAD,KAAiC;AAClE,SAAOT,GAAG,CAACU,OAAJ,CAAYT,gBAAgB,CAACE,kBAAD,EAAqB;AAAEI,IAAAA,QAAF;AAAYC,IAAAA,MAAZ;AAAoBC,IAAAA;AAApB,GAArB,CAA5B,CAAP;AACD,CAFM;AAIP,OAAO,MAAME,aAAa,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaJ,EAAAA;AAAb,CAAD,KAA2B;AACtD,SAAOR,GAAG,CAACU,OAAJ,CACLT,gBAAgB,CAACG,oBAAD,EAAuB;AACrCS,IAAAA,KAAK,EAAE;AACLC,MAAAA,EAAE,EAAEF,SADC;AAELJ,MAAAA;AAFK;AAD8B,GAAvB,CADX,CAAP;AAQD,CATM","sourcesContent":["import { API, graphqlOperation } from \"aws-amplify\"\nimport config from \"../../aws-exports\"\nimport { listPaymentRequest } from \"../../graphql/queries\"\nimport { updatePaymentRequest } from \"../../graphql/mutation\"\n\nAPI.configure(config)\n\nexport const fetchPaymentRequest = ({ branchId, status, limit }) => {\n  return API.graphql(graphqlOperation(listPaymentRequest, { branchId, status, limit }))\n}\n\nexport const updatePayment = ({ paymentId, status }) => {\n  return API.graphql(\n    graphqlOperation(updatePaymentRequest, {\n      input: {\n        id: paymentId,\n        status,\n      },\n    })\n  )\n}\n"]},"metadata":{},"sourceType":"module"}