{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    query getBranch($id: ID!) {\\n        getBranch(id: $id) {\\n            branchName\\n            adminId\\n            id\\n            branchProducts {\\n                items {\\n                    branchId\\n                    createdAt\\n                    id\\n                    productId\\n                    tags\\n                    updatedAt\\n                }\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport createApp from '@shopify/app-bridge';\nimport { Redirect } from '@shopify/app-bridge/actions';\nimport { ClientApplication } from '@shopify/app-bridge';\nimport { API, graphqlOperation } from 'aws-amplify';\nimport gql from 'graphql-tag';\nimport { Page, Button } from '@shopify/polaris';\nimport { BarcodeMajorMonotone } from '@shopify/polaris-icons';\nimport config from '../../aws-exports';\nimport BranchContext from '../../context/branchContext';\nAPI.configure(config);\nvar getBranchById = gql(_templateObject());\n\nvar Branch = function Branch() {\n  _s();\n\n  var _useState = useState(''),\n      branchInfo = _useState[0],\n      setBranchInfo = _useState[1];\n\n  var app = createApp({\n    apiKey: '3b01063bac3031d13101100ef3e44fd5',\n    shopOrigin: 'transactions-avanta.myshopify.com'\n  });\n  var redirect = Redirect.create(app);\n\n  var getBranch = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var branch;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return API.graphql(graphqlOperation(getBranchById, {\n                id: localStorage.getItem('branchId')\n              }));\n\n            case 3:\n              branch = _context.sent;\n              setBranchInfo(branch.data.getBranch);\n              _context.next = 10;\n              break;\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 7]]);\n    }));\n\n    return function getBranch() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    console.log('Localstorage branch id', localStorage.getItem('branchId'));\n    console.log('Localstorage branch id', typeof localStorage.getItem('branchId'));\n    getBranch();\n  }, []);\n  return __jsx(Page, {\n    title: branchInfo && branchInfo.branchName\n  }, __jsx(Button, {\n    id: \"Create-Transaction\",\n    primary: true,\n    onClick: function onClick() {\n      return redirect.dispatch(Redirect.Action.REMOTE, {\n        // url: `https://dev.d3ivgpkzuz6hkr.amplifyapp.com?adminId=${user.attributes.sub}`,\n        url: \"http://localhost:3001/transactions/\".concat(user.attributes.sub),\n        newContext: true\n      });\n    }\n  }, __jsx(Icon, {\n    source: TransactionMajorMonotone\n  }), \" Create transaction\"));\n};\n\n_s(Branch, \"An4Klkc6vQP5DSnsiIGDdq0UUZ0=\");\n\n_c = Branch;\nexport default Branch;\n\nvar _c;\n\n$RefreshReg$(_c, \"Branch\");","map":{"version":3,"sources":["C:/Users/Admin/Desktop/transactions/pages/branch/[branchId].js"],"names":["React","useState","useEffect","useRouter","createApp","Redirect","ClientApplication","API","graphqlOperation","gql","Page","Button","BarcodeMajorMonotone","config","BranchContext","configure","getBranchById","Branch","branchInfo","setBranchInfo","app","apiKey","shopOrigin","redirect","create","getBranch","graphql","id","localStorage","getItem","branch","data","console","log","branchName","dispatch","Action","REMOTE","url","user","attributes","sub","newContext","TransactionMajorMonotone"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,SAASC,QAAT,QAAyB,6BAAzB;AACA,SAASC,iBAAT,QAAkC,qBAAlC;AACA,SAASC,GAAT,EAAcC,gBAAd,QAAsC,aAAtC;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,kBAA7B;AACA,SAASC,oBAAT,QAAqC,wBAArC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AAEAP,GAAG,CAACQ,SAAJ,CAAcF,MAAd;AAEA,IAAMG,aAAa,GAAGP,GAAH,mBAAnB;;AAoBA,IAAMQ,MAAM,GAAG,SAATA,MAAS,GAAM;AAAA;;AAAA,kBACmBhB,QAAQ,CAAC,EAAD,CAD3B;AAAA,MACViB,UADU;AAAA,MACEC,aADF;;AAGjB,MAAMC,GAAG,GAAGhB,SAAS,CAAC;AAClBiB,IAAAA,MAAM,EAAE,kCADU;AAElBC,IAAAA,UAAU,EAAE;AAFM,GAAD,CAArB;AAKA,MAAMC,QAAQ,GAAGlB,QAAQ,CAACmB,MAAT,CAAgBJ,GAAhB,CAAjB;;AAEA,MAAMK,SAAS;AAAA,wEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEWlB,GAAG,CAACmB,OAAJ,CACjBlB,gBAAgB,CAACQ,aAAD,EAAgB;AAAEW,gBAAAA,EAAE,EAAEC,YAAY,CAACC,OAAb,CAAqB,UAArB;AAAN,eAAhB,CADC,CAFX;;AAAA;AAEJC,cAAAA,MAFI;AAKVX,cAAAA,aAAa,CAACW,MAAM,CAACC,IAAP,CAAYN,SAAb,CAAb;AALU;AAAA;;AAAA;AAAA;AAAA;AAOVO,cAAAA,OAAO,CAACC,GAAR;;AAPU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAATR,SAAS;AAAA;AAAA;AAAA,KAAf;;AAWAvB,EAAAA,SAAS,CAAC,YAAM;AACZ8B,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCL,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAtC;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsC,OAAOL,YAAY,CAACC,OAAb,CAAqB,UAArB,CAA7C;AACAJ,IAAAA,SAAS;AACZ,GAJQ,EAIN,EAJM,CAAT;AAMA,SACI,MAAC,IAAD;AAAM,IAAA,KAAK,EAAEP,UAAU,IAAIA,UAAU,CAACgB;AAAtC,KACI,MAAC,MAAD;AACI,IAAA,EAAE,EAAC,oBADP;AAEI,IAAA,OAAO,MAFX;AAGI,IAAA,OAAO,EAAE;AAAA,aACLX,QAAQ,CAACY,QAAT,CAAkB9B,QAAQ,CAAC+B,MAAT,CAAgBC,MAAlC,EAA0C;AACtC;AACAC,QAAAA,GAAG,+CAAwCC,IAAI,CAACC,UAAL,CAAgBC,GAAxD,CAFmC;AAGtCC,QAAAA,UAAU,EAAE;AAH0B,OAA1C,CADK;AAAA;AAHb,KAUI,MAAC,IAAD;AAAM,IAAA,MAAM,EAAEC;AAAd,IAVJ,wBADJ,CADJ;AAgBH,CA3CD;;GAAM1B,M;;KAAAA,M;AA6CN,eAAeA,MAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { useRouter } from 'next/router'\r\nimport createApp from '@shopify/app-bridge'\r\nimport { Redirect } from '@shopify/app-bridge/actions'\r\nimport { ClientApplication } from '@shopify/app-bridge'\r\nimport { API, graphqlOperation } from 'aws-amplify'\r\nimport gql from 'graphql-tag'\r\nimport { Page, Button } from '@shopify/polaris'\r\nimport { BarcodeMajorMonotone } from '@shopify/polaris-icons'\r\nimport config from '../../aws-exports'\r\nimport BranchContext from '../../context/branchContext'\r\n\r\nAPI.configure(config)\r\n\r\nconst getBranchById = gql`\r\n    query getBranch($id: ID!) {\r\n        getBranch(id: $id) {\r\n            branchName\r\n            adminId\r\n            id\r\n            branchProducts {\r\n                items {\r\n                    branchId\r\n                    createdAt\r\n                    id\r\n                    productId\r\n                    tags\r\n                    updatedAt\r\n                }\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nconst Branch = () => {\r\n    const [branchInfo, setBranchInfo] = useState('')\r\n\r\n    const app = createApp({\r\n        apiKey: '3b01063bac3031d13101100ef3e44fd5',\r\n        shopOrigin: 'transactions-avanta.myshopify.com'\r\n    })\r\n\r\n    const redirect = Redirect.create(app)\r\n\r\n    const getBranch = async () => {\r\n        try {\r\n            const branch = await API.graphql(\r\n                graphqlOperation(getBranchById, { id: localStorage.getItem('branchId') })\r\n            )\r\n            setBranchInfo(branch.data.getBranch)\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log('Localstorage branch id', localStorage.getItem('branchId'))\r\n        console.log('Localstorage branch id', typeof localStorage.getItem('branchId'))\r\n        getBranch()\r\n    }, [])\r\n\r\n    return (\r\n        <Page title={branchInfo && branchInfo.branchName}>\r\n            <Button\r\n                id=\"Create-Transaction\"\r\n                primary\r\n                onClick={() =>\r\n                    redirect.dispatch(Redirect.Action.REMOTE, {\r\n                        // url: `https://dev.d3ivgpkzuz6hkr.amplifyapp.com?adminId=${user.attributes.sub}`,\r\n                        url: `http://localhost:3001/transactions/${user.attributes.sub}`,\r\n                        newContext: true\r\n                    })\r\n                }>\r\n                <Icon source={TransactionMajorMonotone} /> Create transaction\r\n            </Button>\r\n        </Page>\r\n    )\r\n}\r\n\r\nexport default Branch\r\n"]},"metadata":{},"sourceType":"module"}