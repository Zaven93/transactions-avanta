{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState, useEffect } from 'react';\nimport { Auth, Hub } from 'aws-amplify';\nimport { Card, Button, TextField, Form, FormLayout } from '@shopify/polaris';\nconst initialFormState = {\n  username: '',\n  password: '',\n  email: '',\n  authCode: '',\n  formType: 'signIn'\n};\n\nconst Profile = () => {\n  const {\n    0: formState,\n    1: updateFormState\n  } = useState(initialFormState);\n  const {\n    0: user,\n    1: updateUser\n  } = useState(null);\n  useEffect(() => {\n    checkUser();\n  }, []);\n\n  const checkUser = async () => {\n    try {\n      const user = await Auth.currentAuthenticatedUser();\n\n      if (!user) {\n        return;\n      }\n\n      updateUser(user);\n      updateFormState(() => _objectSpread(_objectSpread({}, formState), {}, {\n        formType: 'signedIn'\n      }));\n      console.log('User: ', user);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const onChange = e => {\n    e.persist();\n    updateFormState(() => _objectSpread(_objectSpread({}, formState), {}, {\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  const signUp = async () => {\n    const {\n      username,\n      email,\n      password\n    } = formState;\n    await Auth.signUp({\n      username,\n      password,\n      attributes: {\n        email\n      }\n    });\n    updateFormState(() => _objectSpread(_objectSpread({}, formState), {}, {\n      formType: 'confirmSignUp'\n    }));\n  };\n\n  const signIn = async () => {\n    const {\n      username,\n      password\n    } = formState;\n    const signedInUser = await Auth.signIn(username, password);\n    console.log('SignedIn user: ', signedInUser);\n    updateFormState(() => _objectSpread(_objectSpread({}, formState), {}, {\n      formType: 'signedIn'\n    }));\n    const currentAuthenticatedUser = await Auth.currentAuthenticatedUser();\n    console.log('Current authenticated user', currentAuthenticatedUser);\n  };\n\n  const confirmSignUp = async () => {\n    const {\n      username,\n      authCode\n    } = formState;\n    Auth.confirmSignUp(username, authCode);\n    updateFormState(() => _objectSpread(_objectSpread({}, formState), {}, {\n      formType: 'signIn'\n    }));\n  };\n\n  const {\n    formType,\n    username,\n    password\n  } = formState;\n  console.log('State data', formState);\n  console.log('User state: ', user);\n  return __jsx(\"div\", {\n    className: \"authentication-container\"\n  }, __jsx(Card, {\n    title: \"Log into your branch\",\n    sectioned: true\n  }, __jsx(Form, null, __jsx(FormLayout, null, __jsx(TextField, {\n    value: username,\n    onChange: onChange,\n    label: \"Username\"\n  }), __jsx(TextField, {\n    value: password,\n    onChange: onChange,\n    label: \"Password\"\n  }), __jsx(Button, {\n    primary: true,\n    submit: true\n  }, \"Submit\")))));\n};\n\nexport default Profile;","map":{"version":3,"sources":["C:/Users/Admin/Desktop/transactions/pages/profile.js"],"names":["useState","useEffect","Auth","Hub","Card","Button","TextField","Form","FormLayout","initialFormState","username","password","email","authCode","formType","Profile","formState","updateFormState","user","updateUser","checkUser","currentAuthenticatedUser","console","log","error","onChange","e","persist","target","name","value","signUp","attributes","signIn","signedInUser","confirmSignUp"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\r\nimport { Auth, Hub } from 'aws-amplify'\r\nimport { Card, Button, TextField, Form, FormLayout } from '@shopify/polaris'\r\n\r\nconst initialFormState = {\r\n    username: '',\r\n    password: '',\r\n    email: '',\r\n    authCode: '',\r\n    formType: 'signIn'\r\n}\r\n\r\nconst Profile = () => {\r\n    const [formState, updateFormState] = useState(initialFormState)\r\n    const [user, updateUser] = useState(null)\r\n\r\n    useEffect(() => {\r\n        checkUser()\r\n    }, [])\r\n\r\n    const checkUser = async () => {\r\n        try {\r\n            const user = await Auth.currentAuthenticatedUser()\r\n\r\n            if (!user) {\r\n                return\r\n            }\r\n\r\n            updateUser(user)\r\n            updateFormState(() => ({ ...formState, formType: 'signedIn' }))\r\n            console.log('User: ', user)\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    const onChange = (e) => {\r\n        e.persist()\r\n        updateFormState(() => ({ ...formState, [e.target.name]: e.target.value }))\r\n    }\r\n\r\n    const signUp = async () => {\r\n        const { username, email, password } = formState\r\n\r\n        await Auth.signUp({ username, password, attributes: { email } })\r\n        updateFormState(() => ({ ...formState, formType: 'confirmSignUp' }))\r\n    }\r\n\r\n    const signIn = async () => {\r\n        const { username, password } = formState\r\n\r\n        const signedInUser = await Auth.signIn(username, password)\r\n\r\n        console.log('SignedIn user: ', signedInUser)\r\n        updateFormState(() => ({ ...formState, formType: 'signedIn' }))\r\n\r\n        const currentAuthenticatedUser = await Auth.currentAuthenticatedUser()\r\n\r\n        console.log('Current authenticated user', currentAuthenticatedUser)\r\n    }\r\n\r\n    const confirmSignUp = async () => {\r\n        const { username, authCode } = formState\r\n\r\n        Auth.confirmSignUp(username, authCode)\r\n        updateFormState(() => ({ ...formState, formType: 'signIn' }))\r\n    }\r\n\r\n    const { formType, username, password } = formState\r\n\r\n    console.log('State data', formState)\r\n    console.log('User state: ', user)\r\n\r\n    return (\r\n        <div className=\"authentication-container\">\r\n            <Card title=\"Log into your branch\" sectioned>\r\n                <Form>\r\n                    <FormLayout>\r\n                        <TextField value={username} onChange={onChange} label=\"Username\" />\r\n                        <TextField value={password} onChange={onChange} label=\"Password\" />\r\n                        <Button primary submit>\r\n                            Submit\r\n                        </Button>\r\n                    </FormLayout>\r\n                </Form>\r\n            </Card>\r\n            {/* {formType === 'signIn' && (\r\n                <div>\r\n                    <input name=\"username\" placeholder=\"username\" onChange={onChange} />\r\n                    <input\r\n                        name=\"password\"\r\n                        type=\"password\"\r\n                        placeholder=\"password\"\r\n                        onChange={onChange}\r\n                    />\r\n                    <button onClick={signIn}>Sign In</button>\r\n                </div>\r\n            )}\r\n            {formType === 'signedIn' && (\r\n                <div>\r\n                    <p>You've signed in successfully</p>\r\n                    <button\r\n                        onClick={() => {\r\n                            Auth.signOut()\r\n                            updateFormState(() => ({ ...formState, formType: 'signIn' }))\r\n                        }}>\r\n                        Sign out\r\n                    </button>\r\n                </div>\r\n            )} */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile\r\n"]},"metadata":{},"sourceType":"module"}