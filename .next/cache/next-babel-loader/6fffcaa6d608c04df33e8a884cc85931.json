{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useCallback, useEffect } from 'react';\nimport { API, graphqlOperation } from 'aws-amplify';\nimport { Page, Card, Toast, Frame, Tabs } from '@shopify/polaris';\nimport config from '../aws-exports';\nimport AcceptedPaymentRequest from '../components/AcceptedPaymentRequest';\nimport PendingPaymentRequest from '../components/PendingPaymentRequest';\nimport DeclinedPaymentRequest from '../components/DeclinedPaymentRequest';\nimport { onUpdatePaymentSubscription, paymentSubscription } from '../graphql/subscriptions';\nAPI.configure(config);\n\nvar AcceptPayment = function AcceptPayment(_ref) {\n  var branchId = _ref.branchId,\n      setShowPaymentRequest = _ref.setShowPaymentRequest;\n\n  var _useState = useState(false),\n      activeToast = _useState[0],\n      setActiveToast = _useState[1];\n\n  var _useState2 = useState(0),\n      selected = _useState2[0],\n      setSelected = _useState2[1];\n\n  var _useState3 = useState(''),\n      createUpdatePaymentSubscription = _useState3[0],\n      setCreateUpdatePaymentSubscription = _useState3[1];\n\n  var handleTabChange = useCallback(function (selectedTabIndex) {\n    return setSelected(selectedTabIndex);\n  }, []);\n  useEffect(function () {\n    var listener = API.graphql(graphqlOperation(paymentSubscription)).subscribe({\n      next: function next(paymentResponse) {\n        setCreateUpdatePaymentSubscription(paymentResponse);\n      }\n    });\n    var onUpdatePayment = API.graphql(graphqlOperation(onUpdatePaymentSubscription)).subscribe({\n      next: function next(onUpdatePaymentResponse) {\n        setCreateUpdatePaymentSubscription(onUpdatePaymentResponse);\n      }\n    });\n    return function () {\n      listener.unsubscribe();\n      onUpdatePayment.unsubscribe();\n    };\n  }, []);\n  var tabs = [{\n    id: 'pending-payments',\n    content: 'Pending Payment Requests',\n    accessibilityLabel: 'Pending Requests',\n    panelID: 'pending-payments-content'\n  }, {\n    id: 'accepted-payments',\n    content: 'Accepted Payment Requests',\n    accessibilityLabel: 'Accepted Request',\n    panelID: 'accepted-payments-content'\n  }, {\n    id: 'declined-payments',\n    content: 'Declined Payment Requests',\n    accessibilityLabel: 'Declined Requests',\n    panelID: 'declined-payments-content'\n  }];\n  var toastMarkup = activeToast ? __jsx(Toast, {\n    content: \"Order has been successfully created\",\n    onDismiss: function onDismiss() {\n      return setActiveToast(false);\n    }\n  }) : null;\n\n  var renderPaymentRequest = function renderPaymentRequest(selected) {\n    switch (selected) {\n      case 0:\n        return __jsx(PendingPaymentRequest, {\n          branchId: branchId,\n          createUpdatePaymentSubscription: createUpdatePaymentSubscription\n        });\n\n      case 1:\n        return __jsx(AcceptedPaymentRequest, {\n          branchId: branchId\n        });\n\n      case 2:\n        return __jsx(DeclinedPaymentRequest, {\n          branchId: branchId\n        });\n\n      default:\n        return;\n    }\n  };\n\n  return __jsx(Frame, null, __jsx(Page, {\n    title: \"Payment Request\"\n  }, __jsx(Button, {\n    onClick: function onClick() {\n      return setShowPaymentRequest(false);\n    }\n  }, \"Go back\"), __jsx(Card, null, __jsx(Tabs, {\n    tabs: tabs,\n    selected: selected,\n    onSelect: handleTabChange\n  }, __jsx(Card.Section, {\n    title: tabs[selected].content\n  }, renderPaymentRequest(selected)))), toastMarkup));\n};\n\nexport default AcceptPayment;","map":null,"metadata":{},"sourceType":"module"}