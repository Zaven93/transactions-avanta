{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    query listBranchesByAdminId($adminId: ID!) {\\n        listBranchs(filter: { adminId: { eq: $adminId } }) {\\n            items {\\n                adminId\\n                branchName\\n                createdAt\\n                id\\n                updatedAt\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useState, useEffect } from 'react';\nimport { Auth, API, graphqlOperation } from 'aws-amplify';\nimport gql from 'graphql-tag';\nvar ListBranchesByAdminId = gql(_templateObject());\n\nvar Branch = function Branch() {\n  _s();\n\n  var _useState = useState(null),\n      user = _useState[0],\n      setUser = _useState[1];\n\n  var _useState2 = useState(null),\n      branches = _useState2[0],\n      setBranches = _useState2[1];\n\n  var checkUser = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _user;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return Auth.currentAuthenticatedUser();\n\n            case 3:\n              _user = _context.sent;\n              setUser(_user); // const fetchedBranches = await API.graphql(\n              //     graphqlOperation(ListBranchesByAdminId, { adminId: user.attributes.sub })\n              // )\n              // setBranch(fetchedBranches)\n\n              _context.next = 10;\n              break;\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 7]]);\n    }));\n\n    return function checkUser() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  console.log('User from branches', user);\n  useEffect(function () {\n    checkUser();\n  }, []);\n  return __jsx(\"div\", null, \"Hi there Zaven jan\");\n};\n\n_s(Branch, \"kCyUrdTxfosd9PQ84xdQdnMaYtg=\");\n\n_c = Branch;\nexport default Branch;\n\nvar _c;\n\n$RefreshReg$(_c, \"Branch\");","map":{"version":3,"sources":["C:/Users/Admin/Desktop/transactions/pages/branch.js"],"names":["useState","useEffect","Auth","API","graphqlOperation","gql","ListBranchesByAdminId","Branch","user","setUser","branches","setBranches","checkUser","currentAuthenticatedUser","console","log"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,IAAT,EAAeC,GAAf,EAAoBC,gBAApB,QAA4C,aAA5C;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,IAAMC,qBAAqB,GAAGD,GAAH,mBAA3B;;AAcA,IAAME,MAAM,GAAG,SAATA,MAAS,GAAM;AAAA;;AAAA,kBACOP,QAAQ,CAAC,IAAD,CADf;AAAA,MACVQ,IADU;AAAA,MACJC,OADI;;AAAA,mBAEeT,QAAQ,CAAC,IAAD,CAFvB;AAAA,MAEVU,QAFU;AAAA,MAEAC,WAFA;;AAIjB,MAAMC,SAAS;AAAA,wEAAG;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAESV,IAAI,CAACW,wBAAL,EAFT;;AAAA;AAEJL,cAAAA,KAFI;AAGVC,cAAAA,OAAO,CAACD,KAAD,CAAP,CAHU,CAIV;AACA;AACA;AACA;;AAPU;AAAA;;AAAA;AAAA;AAAA;AASVM,cAAAA,OAAO,CAACC,GAAR;;AATU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAATH,SAAS;AAAA;AAAA;AAAA,KAAf;;AAaAE,EAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCP,IAAlC;AAEAP,EAAAA,SAAS,CAAC,YAAM;AACZW,IAAAA,SAAS;AACZ,GAFQ,EAEN,EAFM,CAAT;AAIA,SAAO,wCAAP;AACH,CAxBD;;GAAML,M;;KAAAA,M;AA0BN,eAAeA,MAAf","sourcesContent":["import { useState, useEffect } from 'react'\r\nimport { Auth, API, graphqlOperation } from 'aws-amplify'\r\nimport gql from 'graphql-tag'\r\n\r\nconst ListBranchesByAdminId = gql`\r\n    query listBranchesByAdminId($adminId: ID!) {\r\n        listBranchs(filter: { adminId: { eq: $adminId } }) {\r\n            items {\r\n                adminId\r\n                branchName\r\n                createdAt\r\n                id\r\n                updatedAt\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nconst Branch = () => {\r\n    const [user, setUser] = useState(null)\r\n    const [branches, setBranches] = useState(null)\r\n\r\n    const checkUser = async () => {\r\n        try {\r\n            const user = await Auth.currentAuthenticatedUser()\r\n            setUser(user)\r\n            // const fetchedBranches = await API.graphql(\r\n            //     graphqlOperation(ListBranchesByAdminId, { adminId: user.attributes.sub })\r\n            // )\r\n            // setBranch(fetchedBranches)\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    console.log('User from branches', user)\r\n\r\n    useEffect(() => {\r\n        checkUser()\r\n    }, [])\r\n\r\n    return <div>Hi there Zaven jan</div>\r\n}\r\n\r\nexport default Branch\r\n"]},"metadata":{},"sourceType":"module"}