{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    query listTransactions($limit: Int, $nextToken: String) {\\n        listTransactions(limit: $limit, nextToken: $nextToken) {\\n            nextToken\\n            items {\\n                id\\n                totalPrice\\n                totalBonusAmount\\n                currency\\n                products {\\n                    id\\n                    title\\n                    bonusPercentage\\n                    priceAmount\\n                    priceCurrency\\n                    image\\n                }\\n                customer {\\n                    id\\n                    firstName\\n                    lastName\\n                    phone\\n                    email\\n                }\\n                createdAt\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { API, graphqlOperation } from 'aws-amplify';\nimport config from '../aws-exports';\nimport gql from 'graphql-tag';\nAPI.configure(config);\nvar listTransactions = gql(_templateObject());\n\nvar Index = function Index(_ref) {\n  var transactions = _ref.transactions;\n  console.log('Transactions', transactions);\n  return __jsx(\"div\", null, \"Main page\");\n};\n\n_c = Index;\nIndex.getInitialProps = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n  var result;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return API.graphql(graphqlOperation(listTransactions));\n\n        case 3:\n          result = _context.sent;\n          _context.next = 9;\n          break;\n\n        case 6:\n          _context.prev = 6;\n          _context.t0 = _context[\"catch\"](0);\n          console.log(_context.t0);\n\n        case 9:\n          if (!result.errors) {\n            _context.next = 12;\n            break;\n          }\n\n          console.warn('Failed to fetch todolist. ', result.errors);\n          return _context.abrupt(\"return\", {\n            transactions: []\n          });\n\n        case 12:\n          if (!(result.data !== null)) {\n            _context.next = 14;\n            break;\n          }\n\n          return _context.abrupt(\"return\", {\n            transactions: result.data\n          });\n\n        case 14:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee, null, [[0, 6]]);\n}));\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["C:/Users/Admin/Desktop/transactions/pages/index.js"],"names":["API","graphqlOperation","config","gql","configure","listTransactions","Index","transactions","console","log","getInitialProps","graphql","result","errors","warn","data"],"mappings":";;;;;;;;;;;;;;;;AAAA,SAASA,GAAT,EAAcC,gBAAd,QAAsC,aAAtC;AACA,OAAOC,MAAP,MAAmB,gBAAnB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEAH,GAAG,CAACI,SAAJ,CAAcF,MAAd;AAEA,IAAMG,gBAAgB,GAAGF,GAAH,mBAAtB;;AA8BA,IAAMG,KAAK,GAAG,SAARA,KAAQ,OAAsB;AAAA,MAAnBC,YAAmB,QAAnBA,YAAmB;AAChCC,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BF,YAA5B;AACA,SAAO,+BAAP;AACH,CAHD;;KAAMD,K;AAKNA,KAAK,CAACI,eAAN,yEAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAGDV,GAAG,CAACW,OAAJ,CAAYV,gBAAgB,CAACI,gBAAD,CAA5B,CAHC;;AAAA;AAGhBO,UAAAA,MAHgB;AAAA;AAAA;;AAAA;AAAA;AAAA;AAKhBJ,UAAAA,OAAO,CAACC,GAAR;;AALgB;AAAA,eAQhBG,MAAM,CAACC,MARS;AAAA;AAAA;AAAA;;AAShBL,UAAAA,OAAO,CAACM,IAAR,CAAa,4BAAb,EAA2CF,MAAM,CAACC,MAAlD;AATgB,2CAUT;AAAEN,YAAAA,YAAY,EAAE;AAAhB,WAVS;;AAAA;AAAA,gBAYhBK,MAAM,CAACG,IAAP,KAAgB,IAZA;AAAA;AAAA;AAAA;;AAAA,2CAaT;AAAER,YAAAA,YAAY,EAAEK,MAAM,CAACG;AAAvB,WAbS;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;AAiBA,eAAeT,KAAf","sourcesContent":["import { API, graphqlOperation } from 'aws-amplify'\r\nimport config from '../aws-exports'\r\nimport gql from 'graphql-tag'\r\n\r\nAPI.configure(config)\r\n\r\nconst listTransactions = gql`\r\n    query listTransactions($limit: Int, $nextToken: String) {\r\n        listTransactions(limit: $limit, nextToken: $nextToken) {\r\n            nextToken\r\n            items {\r\n                id\r\n                totalPrice\r\n                totalBonusAmount\r\n                currency\r\n                products {\r\n                    id\r\n                    title\r\n                    bonusPercentage\r\n                    priceAmount\r\n                    priceCurrency\r\n                    image\r\n                }\r\n                customer {\r\n                    id\r\n                    firstName\r\n                    lastName\r\n                    phone\r\n                    email\r\n                }\r\n                createdAt\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nconst Index = ({ transactions }) => {\r\n    console.log('Transactions', transactions)\r\n    return <div>Main page</div>\r\n}\r\n\r\nIndex.getInitialProps = async () => {\r\n    let result\r\n    try {\r\n        result = await API.graphql(graphqlOperation(listTransactions))\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n\r\n    if (result.errors) {\r\n        console.warn('Failed to fetch todolist. ', result.errors)\r\n        return { transactions: [] }\r\n    }\r\n    if (result.data !== null) {\r\n        return { transactions: result.data }\r\n    }\r\n}\r\n\r\nexport default Index\r\n"]},"metadata":{},"sourceType":"module"}