{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\nimport React, { useState, useCallback, useEffect } from 'react';\nimport { Auth } from 'aws-amplify';\nimport config from '../aws-exports';\nimport Login from '../components/Login';\nimport BranchConsole from '../components/BranchConsole';\nimport BranchData from '../components/BranchData';\n\nvar Index = function Index() {\n  var _useState = useState(null),\n      user = _useState[0],\n      updateUser = _useState[1];\n\n  var checkUser = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _user;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return Auth.currentAuthenticatedUser();\n\n            case 3:\n              _user = _context.sent;\n\n              if (_user) {\n                _context.next = 6;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 6:\n              updateUser(_user);\n              _context.next = 12;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 9]]);\n    }));\n\n    return function checkUser() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    checkUser();\n  }, []);\n  return __jsx(React.Fragment, null, user && user.username !== 'superadmin' && __jsx(BranchData, {\n    updateUser: updateUser,\n    user: user\n  }), !user && __jsx(Login, {\n    setUser: function setUser(fetchedUser) {\n      return updateUser(fetchedUser);\n    }\n  }), user && user.username === 'superadmin' && __jsx(BranchConsole, {\n    updateUser: updateUser\n  }));\n};\n\nexport default Index;","map":null,"metadata":{},"sourceType":"module"}