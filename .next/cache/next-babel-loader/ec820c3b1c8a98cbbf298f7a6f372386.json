{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { Table, Icon, Popup, Header } from \"semantic-ui-react\";\nimport { API, graphqlOperation } from \"aws-amplify\";\nimport gql from \"graphql-tag\";\nimport { Badge, Button } from \"@shopify/polaris\";\nimport { toCurrency, formatDate } from \"../utils/helper\";\nimport config from \"aws-amplify\";\nimport { listPaymentRequest } from \"../graphql/queries\";\nAPI.configure(config);\n\nconst DeclinedPaymentRequest = () => {\n  const {\n    0: nextPaginateToken,\n    1: setNextPaginateToken\n  } = useState(\"\");\n  const {\n    0: paymentRequestItems,\n    1: setPaymentRequestItems\n  } = useState([]);\n  const fetchAcceptedPayments = useCallback(async () => {\n    try {\n      const res = await API.graphql(graphqlOperation(listPaymentRequest, {\n        limit: 20,\n        branchId,\n        status: \"DECLINED\"\n      }));\n      setNextPaginateToken(res.data.listPaymentRequests.nextToken);\n      setPaymentRequestItems(res.data.listPaymentRequests.items);\n      console.log(\"Accepted payments\", res.data);\n    } catch (error) {\n      console.log(error);\n    }\n  }, []);\n  useEffect(() => {\n    fetchAcceptedPayments();\n  }, [fetchAcceptedPayments]);\n\n  const loadMore = async () => {\n    try {\n      const res = await API.graphql(graphqlOperation(listPaymentRequest, {\n        limit: 20,\n        nextToken: nextPaginateToken,\n        branchId,\n        status: \"DECLINED\"\n      }));\n      setNextPaginateToken(res.data.listPaymentRequests.nextToken);\n      setPaymentRequestItems([...paymentRequestItems, ...res.data.listPaymentRequests.items]);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Table, {\n    celled: true\n  }, __jsx(Table.Header, null, __jsx(Table.Row, null, __jsx(Table.HeaderCell, null, \"Customer Id\"), __jsx(Table.HeaderCell, null, \"Bonus Amount\"), __jsx(Table.HeaderCell, null, \"Created At\"), __jsx(Table.HeaderCell, null, \"Updated At\"), __jsx(Table.HeaderCell, null, \"Status\"))), __jsx(Table.Body, null, paymentRequestItems && paymentRequestItems.sort((a, b) => new Date(b.updatedAt) - new Date(a.updatedAt)).map(item => __jsx(Table.Row, {\n    key: item.id\n  }, __jsx(Table.Cell, null, __jsx(Badge, {\n    size: \"small\"\n  }, item.customerId)), __jsx(Table.Cell, null, toCurrency(item.bonusAmount)), __jsx(Table.Cell, null, formatDate(item.createdAt)), __jsx(Table.Cell, null, formatDate(item.updatedAt)), __jsx(Table.Cell, null, __jsx(Badge, {\n    size: \"small\",\n    progress: \"incomplete\",\n    status: \"critical\"\n  }, item.status)))))), __jsx(Button, {\n    disabled: !nextPaginateToken,\n    primary: true,\n    onClick: loadMore\n  }, \"Load more\"));\n};\n\nexport default DeclinedPaymentRequest;","map":{"version":3,"sources":["/var/www/transactions-avanta/components/DeclinedPaymentRequest.js"],"names":["React","useState","useEffect","useCallback","Table","Icon","Popup","Header","API","graphqlOperation","gql","Badge","Button","toCurrency","formatDate","config","listPaymentRequest","configure","DeclinedPaymentRequest","nextPaginateToken","setNextPaginateToken","paymentRequestItems","setPaymentRequestItems","fetchAcceptedPayments","res","graphql","limit","branchId","status","data","listPaymentRequests","nextToken","items","console","log","error","loadMore","sort","a","b","Date","updatedAt","map","item","id","customerId","bonusAmount","createdAt"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\"\nimport { Table, Icon, Popup, Header } from \"semantic-ui-react\"\nimport { API, graphqlOperation } from \"aws-amplify\"\nimport gql from \"graphql-tag\"\nimport { Badge, Button } from \"@shopify/polaris\"\nimport { toCurrency, formatDate } from \"../utils/helper\"\nimport config from \"aws-amplify\"\nimport { listPaymentRequest } from \"../graphql/queries\"\n\nAPI.configure(config)\n\nconst DeclinedPaymentRequest = () => {\n  const [nextPaginateToken, setNextPaginateToken] = useState(\"\")\n  const [paymentRequestItems, setPaymentRequestItems] = useState([])\n\n  const fetchAcceptedPayments = useCallback(async () => {\n    try {\n      const res = await API.graphql(\n        graphqlOperation(listPaymentRequest, { limit: 20, branchId, status: \"DECLINED\" })\n      )\n      setNextPaginateToken(res.data.listPaymentRequests.nextToken)\n      setPaymentRequestItems(res.data.listPaymentRequests.items)\n      console.log(\"Accepted payments\", res.data)\n    } catch (error) {\n      console.log(error)\n    }\n  }, [])\n\n  useEffect(() => {\n    fetchAcceptedPayments()\n  }, [fetchAcceptedPayments])\n\n  const loadMore = async () => {\n    try {\n      const res = await API.graphql(\n        graphqlOperation(listPaymentRequest, {\n          limit: 20,\n          nextToken: nextPaginateToken,\n          branchId,\n          status: \"DECLINED\",\n        })\n      )\n      setNextPaginateToken(res.data.listPaymentRequests.nextToken)\n      setPaymentRequestItems([...paymentRequestItems, ...res.data.listPaymentRequests.items])\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  return (\n    <>\n      <Table celled>\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell>Customer Id</Table.HeaderCell>\n            <Table.HeaderCell>Bonus Amount</Table.HeaderCell>\n            <Table.HeaderCell>Created At</Table.HeaderCell>\n            <Table.HeaderCell>Updated At</Table.HeaderCell>\n            <Table.HeaderCell>Status</Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n        <Table.Body>\n          {paymentRequestItems &&\n            paymentRequestItems\n              .sort((a, b) => new Date(b.updatedAt) - new Date(a.updatedAt))\n              .map((item) => (\n                <Table.Row key={item.id}>\n                  <Table.Cell>\n                    <Badge size=\"small\">{item.customerId}</Badge>\n                  </Table.Cell>\n                  <Table.Cell>{toCurrency(item.bonusAmount)}</Table.Cell>\n                  <Table.Cell>{formatDate(item.createdAt)}</Table.Cell>\n                  <Table.Cell>{formatDate(item.updatedAt)}</Table.Cell>\n                  <Table.Cell>\n                    <Badge size=\"small\" progress=\"incomplete\" status=\"critical\">\n                      {item.status}\n                    </Badge>\n                  </Table.Cell>\n                </Table.Row>\n              ))}\n        </Table.Body>\n      </Table>\n      <Button disabled={!nextPaginateToken} primary onClick={loadMore}>\n        Load more\n      </Button>\n    </>\n  )\n}\n\nexport default DeclinedPaymentRequest\n"]},"metadata":{},"sourceType":"module"}