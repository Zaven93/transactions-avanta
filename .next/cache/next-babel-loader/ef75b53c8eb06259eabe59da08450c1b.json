{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { Auth, API, graphqlOperation } from 'aws-amplify';\nimport gql from 'graphql-tag';\nimport { v4 as uuidv4 } from 'uuid';\nimport { Page, Button, Modal, Form, FormLayout, TextField, Badge } from '@shopify/polaris';\nimport { Table, Popup, Header, Icon } from 'semantic-ui-react';\nimport ProductList from './ProductsList';\nimport { formatDate } from '../utils/helper';\nimport config from '../aws-exports';\nimport BranchProducts from './BranchProducts';\nAPI.configure(config);\nconst listBranchs = gql`\n    query listBranchs {\n        listBranchs {\n            items {\n                adminId\n                branchName\n                createdAt\n                id\n            }\n        }\n    }\n`;\n\nconst BranchList = () => {\n  const {\n    0: active,\n    1: setActive\n  } = useState(false);\n  const {\n    0: branches,\n    1: setBranches\n  } = useState('');\n\n  const handleChange = () => {\n    setActive(!active);\n  };\n\n  const fetchBranches = async () => {\n    try {\n      const getBranches = await API.graphql(graphqlOperation(listBranchs));\n      setBranches(getBranches.data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    fetchBranches();\n  }, []);\n  return __jsx(React.Fragment, null, __jsx(Table, {\n    selectable: true,\n    celled: true\n  }, __jsx(Table.Header, null, __jsx(Table.Row, null, __jsx(Table.HeaderCell, null, \"Branch Name\"), __jsx(Table.HeaderCell, null, \"Created At\"), __jsx(Table.HeaderCell, null, \"Actions\"))), __jsx(Table.Body, null, branches && branches.listBranchs.items.map(item => __jsx(Table.Row, {\n    key: item.id\n  }, __jsx(Table.Cell, null, __jsx(Badge, {\n    size: \"medium\",\n    status: \"info\"\n  }, item.branchName)), __jsx(Table.Cell, null, formatDate(item.createdAt)), __jsx(Table.Cell, {\n    className: \"branch-actions\"\n  }, __jsx(Popup, {\n    content: \"Edit branch\",\n    trigger: __jsx(Icon, {\n      className: \"edit-branch\",\n      name: \"edit outline\"\n    })\n  }), __jsx(Popup, {\n    content: \"Delete Branch\",\n    trigger: __jsx(Icon, {\n      className: \"remove-branch\",\n      name: \"trash alternate\"\n    })\n  })))))), __jsx(BranchProducts, {\n    active: active,\n    handleChange: handleChange\n  }));\n};\n\nexport default BranchList;","map":{"version":3,"sources":["C:/Users/Admin/Desktop/transactions/components/BranchList.js"],"names":["React","useState","useEffect","useRef","useCallback","Auth","API","graphqlOperation","gql","v4","uuidv4","Page","Button","Modal","Form","FormLayout","TextField","Badge","Table","Popup","Header","Icon","ProductList","formatDate","config","BranchProducts","configure","listBranchs","BranchList","active","setActive","branches","setBranches","handleChange","fetchBranches","getBranches","graphql","data","error","console","log","items","map","item","id","branchName","createdAt"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react'\r\nimport { Auth, API, graphqlOperation } from 'aws-amplify'\r\nimport gql from 'graphql-tag'\r\nimport { v4 as uuidv4 } from 'uuid'\r\nimport { Page, Button, Modal, Form, FormLayout, TextField, Badge } from '@shopify/polaris'\r\nimport { Table, Popup, Header, Icon } from 'semantic-ui-react'\r\nimport ProductList from './ProductsList'\r\nimport { formatDate } from '../utils/helper'\r\nimport config from '../aws-exports'\r\nimport BranchProducts from './BranchProducts'\r\n\r\nAPI.configure(config)\r\n\r\nconst listBranchs = gql`\r\n    query listBranchs {\r\n        listBranchs {\r\n            items {\r\n                adminId\r\n                branchName\r\n                createdAt\r\n                id\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nconst BranchList = () => {\r\n    const [active, setActive] = useState(false)\r\n    const [branches, setBranches] = useState('')\r\n\r\n    const handleChange = () => {\r\n        setActive(!active)\r\n    }\r\n\r\n    const fetchBranches = async () => {\r\n        try {\r\n            const getBranches = await API.graphql(graphqlOperation(listBranchs))\r\n            setBranches(getBranches.data)\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchBranches()\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <Table selectable celled>\r\n                <Table.Header>\r\n                    <Table.Row>\r\n                        <Table.HeaderCell>Branch Name</Table.HeaderCell>\r\n                        <Table.HeaderCell>Created At</Table.HeaderCell>\r\n                        <Table.HeaderCell>Actions</Table.HeaderCell>\r\n                    </Table.Row>\r\n                </Table.Header>\r\n                <Table.Body>\r\n                    {branches &&\r\n                        branches.listBranchs.items.map((item) => (\r\n                            <Table.Row key={item.id}>\r\n                                <Table.Cell>\r\n                                    <Badge size=\"medium\" status=\"info\">\r\n                                        {item.branchName}\r\n                                    </Badge>\r\n                                </Table.Cell>\r\n                                <Table.Cell>{formatDate(item.createdAt)}</Table.Cell>\r\n                                <Table.Cell className=\"branch-actions\">\r\n                                    <Popup\r\n                                        content=\"Edit branch\"\r\n                                        trigger={\r\n                                            <Icon className=\"edit-branch\" name=\"edit outline\" />\r\n                                        }\r\n                                    />\r\n                                    <Popup\r\n                                        content=\"Delete Branch\"\r\n                                        trigger={\r\n                                            <Icon\r\n                                                className=\"remove-branch\"\r\n                                                name=\"trash alternate\"\r\n                                            />\r\n                                        }\r\n                                    />\r\n                                </Table.Cell>\r\n                            </Table.Row>\r\n                        ))}\r\n                </Table.Body>\r\n            </Table>\r\n            <BranchProducts active={active} handleChange={handleChange} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default BranchList\r\n"]},"metadata":{},"sourceType":"module"}