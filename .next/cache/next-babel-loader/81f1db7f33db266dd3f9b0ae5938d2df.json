{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport { ClientApplication } from '@shopify/app-bridge';\nimport { API, graphqlOperation } from 'aws-amplify';\nimport gql from 'graphql-tag';\nimport config from '../../aws-exports';\nimport BranchContext from '../../context/branchContext';\nimport { BarcodeMajorMonotone } from '@shopify/polaris-icons';\nAPI.configure(config);\nconst getBranchById = gql`\n    query getBranch($id: ID) {\n        getBranch(id: $id) {\n            branchName\n            adminId\n            id\n            branchProducts {\n                items {\n                    branchId\n                    createdAt\n                    id\n                    productId\n                    tags\n                    updatedAt\n                }\n            }\n        }\n    }\n`;\n\nconst Branch = () => {\n  const router = useRouter();\n\n  const getBranch = async () => {\n    try {\n      const branch = await API.graphql(graphqlOperation(getBranchById, {\n        id: router.query.branchId\n      }));\n      console.log('Branch from branch page', branch);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getBranch();\n  }, []);\n  return __jsx(\"div\", null, \"Branch\");\n};\n\nexport default Branch;","map":{"version":3,"sources":["C:/Users/Admin/Desktop/transactions/pages/branch/[branchId].js"],"names":["React","useState","useEffect","useRouter","ClientApplication","API","graphqlOperation","gql","config","BranchContext","BarcodeMajorMonotone","configure","getBranchById","Branch","router","getBranch","branch","graphql","id","query","branchId","console","log","error"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,iBAAT,QAAkC,qBAAlC;AACA,SAASC,GAAT,EAAcC,gBAAd,QAAsC,aAAtC;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,SAASC,oBAAT,QAAqC,wBAArC;AAEAL,GAAG,CAACM,SAAJ,CAAcH,MAAd;AAEA,MAAMI,aAAa,GAAGL,GAAI;;;;;;;;;;;;;;;;;;CAA1B;;AAoBA,MAAMM,MAAM,GAAG,MAAM;AACjB,QAAMC,MAAM,GAAGX,SAAS,EAAxB;;AAEA,QAAMY,SAAS,GAAG,YAAY;AAC1B,QAAI;AACA,YAAMC,MAAM,GAAG,MAAMX,GAAG,CAACY,OAAJ,CACjBX,gBAAgB,CAACM,aAAD,EAAgB;AAAEM,QAAAA,EAAE,EAAEJ,MAAM,CAACK,KAAP,CAAaC;AAAnB,OAAhB,CADC,CAArB;AAGAC,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCN,MAAvC;AACH,KALD,CAKE,OAAOO,KAAP,EAAc;AACZF,MAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACH;AACJ,GATD;;AAWArB,EAAAA,SAAS,CAAC,MAAM;AACZa,IAAAA,SAAS;AACZ,GAFQ,EAEN,EAFM,CAAT;AAIA,SAAO,4BAAP;AACH,CAnBD;;AAqBA,eAAeF,MAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { useRouter } from 'next/router'\r\nimport { ClientApplication } from '@shopify/app-bridge'\r\nimport { API, graphqlOperation } from 'aws-amplify'\r\nimport gql from 'graphql-tag'\r\nimport config from '../../aws-exports'\r\nimport BranchContext from '../../context/branchContext'\r\nimport { BarcodeMajorMonotone } from '@shopify/polaris-icons'\r\n\r\nAPI.configure(config)\r\n\r\nconst getBranchById = gql`\r\n    query getBranch($id: ID) {\r\n        getBranch(id: $id) {\r\n            branchName\r\n            adminId\r\n            id\r\n            branchProducts {\r\n                items {\r\n                    branchId\r\n                    createdAt\r\n                    id\r\n                    productId\r\n                    tags\r\n                    updatedAt\r\n                }\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nconst Branch = () => {\r\n    const router = useRouter()\r\n\r\n    const getBranch = async () => {\r\n        try {\r\n            const branch = await API.graphql(\r\n                graphqlOperation(getBranchById, { id: router.query.branchId })\r\n            )\r\n            console.log('Branch from branch page', branch)\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getBranch()\r\n    }, [])\r\n\r\n    return <div>Branch</div>\r\n}\r\n\r\nexport default Branch\r\n"]},"metadata":{},"sourceType":"module"}