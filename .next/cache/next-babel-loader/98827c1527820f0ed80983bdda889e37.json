{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar __jsx = React.createElement;\n\nfunction _templateObject8() {\n  var data = _taggedTemplateLiteral([\"\\n    subscription paymentRequest {\\n        onCreatePaymentRequest {\\n            bonusAmount\\n            createdAt\\n            customerId\\n            id\\n            orderId\\n            status\\n            updatedAt\\n        }\\n    }\\n\"]);\n\n  _templateObject8 = function _templateObject8() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject7() {\n  var data = _taggedTemplateLiteral([\"\\n    subscription onDeletePaymentRequest {\\n        onDeletePaymentRequest {\\n            id\\n            status\\n        }\\n    }\\n\"]);\n\n  _templateObject7 = function _templateObject7() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject6() {\n  var data = _taggedTemplateLiteral([\"\\n    subscription onUpdatePaymentRequest {\\n        onUpdatePaymentRequest {\\n            id\\n            status\\n        }\\n    }\\n\"]);\n\n  _templateObject6 = function _templateObject6() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"\\n    subscription onCreatePaymentSubscription {\\n        onCreatePaymentRequest {\\n            bonusAmount\\n            createdAt\\n            customerId\\n            orderId\\n            updatedAt\\n        }\\n    }\\n\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation CompleteOrder($id: ID!) {\\n        draftOrderComplete(id: $id, paymentPending: true) {\\n            draftOrder {\\n                customer {\\n                    id\\n                }\\n                email\\n                name\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation CreateOrder($input: DraftOrderInput!) {\\n        draftOrderCreate(input: $input) {\\n            draftOrder {\\n                id\\n                customer {\\n                    id\\n                }\\n                email\\n                lineItems(first: 10) {\\n                    edges {\\n                        node {\\n                            title\\n                            quantity\\n                            originalUnitPrice\\n                            variant {\\n                                id\\n                                price\\n                                title\\n                                product {\\n                                    tags\\n                                    title\\n                                    images(first: 5) {\\n                                        edges {\\n                                            node {\\n                                                originalSrc\\n                                            }\\n                                        }\\n                                    }\\n                                }\\n                            }\\n                        }\\n                    }\\n                }\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n    query Products {\\n        products(first: 100) {\\n            edges {\\n                node {\\n                    id\\n                    title\\n                    tags\\n                    description(truncateAt: 100)\\n                    variants(first: 1) {\\n                        edges {\\n                            node {\\n                                id\\n                                price\\n                            }\\n                        }\\n                    }\\n                    images(first: 1) {\\n                        edges {\\n                            node {\\n                                originalSrc\\n                            }\\n                        }\\n                    }\\n                }\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    query listPaymentRequest {\\n        listPaymentRequests {\\n            items {\\n                bonusAmount\\n                createdAt\\n                customerId\\n                id\\n                orderId\\n                status\\n                updatedAt\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, useCallback, useEffect } from 'react';\nimport axios from 'axios';\nimport gql from 'graphql-tag';\nimport { print } from 'graphql';\nimport { API, graphqlOperation } from 'aws-amplify';\nimport { Page, Badge, Avatar, TextStyle, Card, TextContainer, Modal, Checkbox, Thumbnail, Toast, Frame, Button, Tabs } from '@shopify/polaris';\nimport { CustomersMajorMonotone } from '@shopify/polaris-icons';\nimport { Table, Icon, Popup, Header } from 'semantic-ui-react';\nimport { toCurrency, formatDate } from '../utils/helper';\nimport config from '../aws-exports';\nimport ProductList from '../components/ProductsList';\nimport AcceptedPaymentRequest from '../components/AcceptedPaymentRequest';\nimport PendingPaymentRequest from '../components/PendingPaymentRequest';\nimport DeclinedPaymentRequest from '../components/DeclinedPaymentRequest';\nAPI.configure(config);\nvar listPaymentRequest = gql(_templateObject());\nvar listProducts = gql(_templateObject2());\nvar createDraftOrder = gql(_templateObject3());\nvar completeOrder = gql(_templateObject4());\nvar onCreatePaymentSubscription = gql(_templateObject5());\nvar onUpdatePaymentSubscription = gql(_templateObject6());\nvar onDeletePaymentSubscription = gql(_templateObject7());\nvar paymentSubscription = gql(_templateObject8());\n\nvar AcceptPayment = function AcceptPayment() {\n  // const [paymentRequestItems, setPaymentRequestItems] = useState(\n  //     paymentRequests.listPaymentRequests.items\n  // )\n  var _useState = useState(false),\n      openPicker = _useState[0],\n      setOpenPicker = _useState[1];\n\n  var _useState2 = useState([]),\n      rowId = _useState2[0],\n      setRowId = _useState2[1];\n\n  var _useState3 = useState(null),\n      searchValue = _useState3[0],\n      setSearchValue = _useState3[1];\n\n  var _useState4 = useState(false),\n      activeToast = _useState4[0],\n      setActiveToast = _useState4[1];\n\n  var _useState5 = useState(0),\n      selected = _useState5[0],\n      setSelected = _useState5[1];\n\n  var _useState6 = useState(''),\n      createUpdatePaymentSubscription = _useState6[0],\n      setCreateUpdatePaymentSubscription = _useState6[1];\n\n  var handleTabChange = useCallback(function (selectedTabIndex) {\n    return setSelected(selectedTabIndex);\n  }, []);\n  var handleSearchInput = useCallback(function (newValue) {\n    return setSearchValue(newValue);\n  }, []);\n  useEffect(function () {\n    var listener = API.graphql(graphqlOperation(paymentSubscription)).subscribe({\n      next: function next(paymentResponse) {\n        setCreateUpdatePaymentSubscription(paymentResponse);\n      }\n    });\n    var onUpdatePayment = API.graphql(graphqlOperation(onUpdatePaymentSubscription)).subscribe({\n      next: function next(onUpdatePaymentResponse) {\n        setCreateUpdatePaymentSubscription(onUpdatePaymentResponse);\n      }\n    });\n    return function () {\n      listener.unsubscribe();\n      onUpdatePayment.unsubscribe();\n    };\n  }, []);\n  var tabs = [{\n    id: 'pending-payments',\n    content: 'Pending Payment Requests',\n    accessibilityLabel: 'Pending Requests',\n    panelID: 'pending-payments-content'\n  }, {\n    id: 'accepted-payments',\n    content: 'Accepted Payment Requests',\n    accessibilityLabel: 'Accepted Request',\n    panelID: 'accepted-payments-content'\n  }, {\n    id: 'declined-payments',\n    content: 'Declined Payment Requests',\n    accessibilityLabel: 'Declined Requests',\n    panelID: 'declined-payments-content'\n  }];\n  var toastMarkup = activeToast ? __jsx(Toast, {\n    content: \"Order has been successfully created\",\n    onDismiss: function onDismiss() {\n      return setActiveToast(false);\n    }\n  }) : null;\n\n  var renderPaymentRequest = function renderPaymentRequest(selected) {\n    switch (selected) {\n      case 0:\n        return __jsx(PendingPaymentRequest, {\n          createUpdatePaymentSubscription: createUpdatePaymentSubscription\n        });\n\n      case 1:\n        return __jsx(AcceptedPaymentRequest, null);\n\n      case 2:\n        return __jsx(DeclinedPaymentRequest, null);\n\n      default:\n        return;\n    }\n  };\n\n  return __jsx(Frame, null, __jsx(Page, {\n    title: \"Payment Request\"\n  }, __jsx(Card, null, __jsx(Tabs, {\n    tabs: tabs,\n    selected: selected,\n    onSelect: handleTabChange\n  }, __jsx(Card.Section, {\n    title: tabs[selected].content\n  }, renderPaymentRequest(selected)))), toastMarkup));\n}; // export async function getStaticProps() {\n//     let result\n//     try {\n//         result = await API.graphql(graphqlOperation(listPaymentRequest))\n//     } catch (error) {\n//         console.log(error)\n//     }\n//     if (result.errors) {\n//         console.warn('Failed to fetch payment requests.', result.errors)\n//         return { props: { paymentRequests: [] } }\n//     }\n//     if (result.data !== null) {\n//         return {\n//             props: { paymentRequests: result.data }\n//         }\n//     }\n// }\n\n\nexport default AcceptPayment;","map":null,"metadata":{},"sourceType":"module"}