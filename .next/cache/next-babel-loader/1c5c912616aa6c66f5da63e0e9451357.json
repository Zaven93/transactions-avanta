{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport App from 'next/app';\nimport Head from 'next/head';\nimport 'semantic-ui-css/semantic.min.css';\nimport { AppProvider } from '@shopify/polaris';\nimport { Provider } from '@shopify/app-bridge-react';\nimport '@shopify/polaris/dist/styles.css';\nimport translations from '@shopify/polaris/locales/en.json';\nimport Cookies from 'js-cookie';\nimport { ApolloClient, ApolloProvider, InMemoryCache } from '@apollo/client';\nimport { createHttpLink } from 'apollo-link-http';\nimport '../styles/style.css';\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link: createHttpLink({\n    credentials: 'include'\n  })\n});\n\nclass MyApp extends App {\n  render() {\n    const {\n      Component,\n      pageProps\n    } = this.props;\n    const config = {\n      apiKey: '3b01063bac3031d13101100ef3e44fd5',\n      shopOrigin: Cookies.get('shopOrigin'),\n      forceRedirect: false\n    };\n    return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, \"Sample App\"), __jsx(\"meta\", {\n      charSet: \"utf-8\"\n    })), __jsx(Provider, {\n      config: config\n    }, __jsx(AppProvider, {\n      i18n: translations\n    }, __jsx(ApolloProvider, {\n      client: client\n    }, __jsx(Component, pageProps)))));\n  }\n\n}\n\nexport default MyApp;","map":{"version":3,"sources":["C:/Users/Admin/Desktop/transactions/pages/_app.js"],"names":["App","Head","AppProvider","Provider","translations","Cookies","ApolloClient","ApolloProvider","InMemoryCache","createHttpLink","client","cache","link","credentials","MyApp","render","Component","pageProps","props","config","apiKey","shopOrigin","get","forceRedirect"],"mappings":";;AAAA,OAAOA,GAAP,MAAgB,UAAhB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAO,kCAAP;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,QAAT,QAAyB,2BAAzB;AACA,OAAO,kCAAP;AACA,OAAOC,YAAP,MAAyB,kCAAzB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,YAAT,EAAuBC,cAAvB,EAAuCC,aAAvC,QAA4D,gBAA5D;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,OAAO,qBAAP;AAEA,MAAMC,MAAM,GAAG,IAAIJ,YAAJ,CAAiB;AAC5BK,EAAAA,KAAK,EAAE,IAAIH,aAAJ,EADqB;AAE5BI,EAAAA,IAAI,EAAEH,cAAc,CAAC;AACjBI,IAAAA,WAAW,EAAE;AADI,GAAD;AAFQ,CAAjB,CAAf;;AAOA,MAAMC,KAAN,SAAoBd,GAApB,CAAwB;AACpBe,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA,SAAF;AAAaC,MAAAA;AAAb,QAA2B,KAAKC,KAAtC;AACA,UAAMC,MAAM,GAAG;AACXC,MAAAA,MAAM,EAAE,kCADG;AAEXC,MAAAA,UAAU,EAAEhB,OAAO,CAACiB,GAAR,CAAY,YAAZ,CAFD;AAGXC,MAAAA,aAAa,EAAE;AAHJ,KAAf;AAKA,WACI,MAAC,KAAD,CAAO,QAAP,QACI,MAAC,IAAD,QACI,kCADJ,EAEI;AAAM,MAAA,OAAO,EAAC;AAAd,MAFJ,CADJ,EAKI,MAAC,QAAD;AAAU,MAAA,MAAM,EAAEJ;AAAlB,OACI,MAAC,WAAD;AAAa,MAAA,IAAI,EAAEf;AAAnB,OACI,MAAC,cAAD;AAAgB,MAAA,MAAM,EAAEM;AAAxB,OACI,MAAC,SAAD,EAAeO,SAAf,CADJ,CADJ,CADJ,CALJ,CADJ;AAeH;;AAvBmB;;AA0BxB,eAAeH,KAAf","sourcesContent":["import App from 'next/app'\r\nimport Head from 'next/head'\r\nimport 'semantic-ui-css/semantic.min.css'\r\nimport { AppProvider } from '@shopify/polaris'\r\nimport { Provider } from '@shopify/app-bridge-react'\r\nimport '@shopify/polaris/dist/styles.css'\r\nimport translations from '@shopify/polaris/locales/en.json'\r\nimport Cookies from 'js-cookie'\r\nimport { ApolloClient, ApolloProvider, InMemoryCache } from '@apollo/client'\r\nimport { createHttpLink } from 'apollo-link-http'\r\nimport '../styles/style.css'\r\n\r\nconst client = new ApolloClient({\r\n    cache: new InMemoryCache(),\r\n    link: createHttpLink({\r\n        credentials: 'include'\r\n    })\r\n})\r\n\r\nclass MyApp extends App {\r\n    render() {\r\n        const { Component, pageProps } = this.props\r\n        const config = {\r\n            apiKey: '3b01063bac3031d13101100ef3e44fd5',\r\n            shopOrigin: Cookies.get('shopOrigin'),\r\n            forceRedirect: false\r\n        }\r\n        return (\r\n            <React.Fragment>\r\n                <Head>\r\n                    <title>Sample App</title>\r\n                    <meta charSet=\"utf-8\" />\r\n                </Head>\r\n                <Provider config={config}>\r\n                    <AppProvider i18n={translations}>\r\n                        <ApolloProvider client={client}>\r\n                            <Component {...pageProps} />\r\n                        </ApolloProvider>\r\n                    </AppProvider>\r\n                </Provider>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MyApp\r\n"]},"metadata":{},"sourceType":"module"}