{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState, useEffect } from 'react';\nimport { Card, Button, TextField, Form, FormLayout } from '@shopify/polaris';\nimport { Auth, API, graphqlOperation } from 'aws-amplify';\nimport config from '../aws-exports';\nAPI.configure(config);\n\nconst Profile = () => {\n  const {\n    0: formState,\n    1: updateFormState\n  } = useState({\n    username: '',\n    password: ''\n  });\n  const {\n    0: user,\n    1: updateUser\n  } = useState(null);\n  useEffect(() => {\n    checkUser();\n  }, []);\n\n  const checkUser = async () => {\n    try {\n      const user = await Auth.currentAuthenticatedUser();\n\n      if (!user) {\n        return;\n      }\n\n      updateUser(user);\n      console.log('User: ', user);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const onChange = e => {\n    e.persist();\n    updateFormState(() => _objectSpread(_objectSpread({}, formState), {}, {\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  const signIn = async () => {\n    const {\n      username,\n      password\n    } = formState;\n    const signedInUser = await Auth.signIn(username, password);\n    console.log('SignedIn user: ', signedInUser);\n    updateFormState(() => _objectSpread(_objectSpread({}, formState), {}, {\n      formType: 'signedIn'\n    }));\n    const currentAuthenticatedUser = await Auth.currentAuthenticatedUser();\n    console.log('Current authenticated user', currentAuthenticatedUser);\n  };\n\n  const {\n    username,\n    password\n  } = formState;\n  console.log('State data', formState);\n  console.log('User state: ', user);\n  return __jsx(\"div\", {\n    className: \"authentication-container\"\n  }, !user ? __jsx(Card, {\n    title: \"Log into your branch\",\n    sectioned: true\n  }, __jsx(Form, {\n    onSubmit: signIn\n  }, __jsx(FormLayout, null, __jsx(TextField, {\n    name: \"username\",\n    value: username,\n    onChange: onChange,\n    label: \"Username\"\n  }), __jsx(TextField, {\n    name: \"password\",\n    value: password,\n    onChange: onChange,\n    label: \"Password\"\n  }), __jsx(Button, {\n    primary: true,\n    submit: true\n  }, \"Login\")))) : __jsx(\"div\", null, \"Hello from signed in section\"));\n};\n\nexport default Profile;","map":{"version":3,"sources":["C:/Users/Admin/Desktop/transactions/pages/profile.js"],"names":["useState","useEffect","Card","Button","TextField","Form","FormLayout","Auth","API","graphqlOperation","config","configure","Profile","formState","updateFormState","username","password","user","updateUser","checkUser","currentAuthenticatedUser","console","log","error","onChange","e","persist","target","name","value","signIn","signedInUser","formType"],"mappings":";;;;;;;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,SAAvB,EAAkCC,IAAlC,EAAwCC,UAAxC,QAA0D,kBAA1D;AACA,SAASC,IAAT,EAAeC,GAAf,EAAoBC,gBAApB,QAA4C,aAA5C;AACA,OAAOC,MAAP,MAAmB,gBAAnB;AAEAF,GAAG,CAACG,SAAJ,CAAcD,MAAd;;AAEA,MAAME,OAAO,GAAG,MAAM;AAClB,QAAM;AAAA,OAACC,SAAD;AAAA,OAAYC;AAAZ,MAA+Bd,QAAQ,CAAC;AAC1Ce,IAAAA,QAAQ,EAAE,EADgC;AAE1CC,IAAAA,QAAQ,EAAE;AAFgC,GAAD,CAA7C;AAIA,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAqBlB,QAAQ,CAAC,IAAD,CAAnC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZkB,IAAAA,SAAS;AACZ,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMA,SAAS,GAAG,YAAY;AAC1B,QAAI;AACA,YAAMF,IAAI,GAAG,MAAMV,IAAI,CAACa,wBAAL,EAAnB;;AAEA,UAAI,CAACH,IAAL,EAAW;AACP;AACH;;AACDC,MAAAA,UAAU,CAACD,IAAD,CAAV;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBL,IAAtB;AACH,KARD,CAQE,OAAOM,KAAP,EAAc;AACZF,MAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACH;AACJ,GAZD;;AAcA,QAAMC,QAAQ,GAAIC,CAAD,IAAO;AACpBA,IAAAA,CAAC,CAACC,OAAF;AACAZ,IAAAA,eAAe,CAAC,sCAAYD,SAAZ;AAAuB,OAACY,CAAC,CAACE,MAAF,CAASC,IAAV,GAAiBH,CAAC,CAACE,MAAF,CAASE;AAAjD,MAAD,CAAf;AACH,GAHD;;AAKA,QAAMC,MAAM,GAAG,YAAY;AACvB,UAAM;AAAEf,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,QAAyBH,SAA/B;AAEA,UAAMkB,YAAY,GAAG,MAAMxB,IAAI,CAACuB,MAAL,CAAYf,QAAZ,EAAsBC,QAAtB,CAA3B;AAEAK,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BS,YAA/B;AACAjB,IAAAA,eAAe,CAAC,sCAAYD,SAAZ;AAAuBmB,MAAAA,QAAQ,EAAE;AAAjC,MAAD,CAAf;AAEA,UAAMZ,wBAAwB,GAAG,MAAMb,IAAI,CAACa,wBAAL,EAAvC;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0CF,wBAA1C;AACH,GAXD;;AAaA,QAAM;AAAEL,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAyBH,SAA/B;AAEAQ,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BT,SAA1B;AACAQ,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BL,IAA5B;AAEA,SACI;AAAK,IAAA,SAAS,EAAC;AAAf,KACK,CAACA,IAAD,GACG,MAAC,IAAD;AAAM,IAAA,KAAK,EAAC,sBAAZ;AAAmC,IAAA,SAAS;AAA5C,KACI,MAAC,IAAD;AAAM,IAAA,QAAQ,EAAEa;AAAhB,KACI,MAAC,UAAD,QACI,MAAC,SAAD;AACI,IAAA,IAAI,EAAC,UADT;AAEI,IAAA,KAAK,EAAEf,QAFX;AAGI,IAAA,QAAQ,EAAES,QAHd;AAII,IAAA,KAAK,EAAC;AAJV,IADJ,EAOI,MAAC,SAAD;AACI,IAAA,IAAI,EAAC,UADT;AAEI,IAAA,KAAK,EAAER,QAFX;AAGI,IAAA,QAAQ,EAAEQ,QAHd;AAII,IAAA,KAAK,EAAC;AAJV,IAPJ,EAaI,MAAC,MAAD;AAAQ,IAAA,OAAO,MAAf;AAAgB,IAAA,MAAM;AAAtB,aAbJ,CADJ,CADJ,CADH,GAuBG,kDAxBR,CADJ;AA6BH,CA7ED;;AA+EA,eAAeZ,OAAf","sourcesContent":["import { useState, useEffect } from 'react'\r\nimport { Card, Button, TextField, Form, FormLayout } from '@shopify/polaris'\r\nimport { Auth, API, graphqlOperation } from 'aws-amplify'\r\nimport config from '../aws-exports'\r\n\r\nAPI.configure(config)\r\n\r\nconst Profile = () => {\r\n    const [formState, updateFormState] = useState({\r\n        username: '',\r\n        password: ''\r\n    })\r\n    const [user, updateUser] = useState(null)\r\n\r\n    useEffect(() => {\r\n        checkUser()\r\n    }, [])\r\n\r\n    const checkUser = async () => {\r\n        try {\r\n            const user = await Auth.currentAuthenticatedUser()\r\n\r\n            if (!user) {\r\n                return\r\n            }\r\n            updateUser(user)\r\n            console.log('User: ', user)\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    const onChange = (e) => {\r\n        e.persist()\r\n        updateFormState(() => ({ ...formState, [e.target.name]: e.target.value }))\r\n    }\r\n\r\n    const signIn = async () => {\r\n        const { username, password } = formState\r\n\r\n        const signedInUser = await Auth.signIn(username, password)\r\n\r\n        console.log('SignedIn user: ', signedInUser)\r\n        updateFormState(() => ({ ...formState, formType: 'signedIn' }))\r\n\r\n        const currentAuthenticatedUser = await Auth.currentAuthenticatedUser()\r\n\r\n        console.log('Current authenticated user', currentAuthenticatedUser)\r\n    }\r\n\r\n    const { username, password } = formState\r\n\r\n    console.log('State data', formState)\r\n    console.log('User state: ', user)\r\n\r\n    return (\r\n        <div className=\"authentication-container\">\r\n            {!user ? (\r\n                <Card title=\"Log into your branch\" sectioned>\r\n                    <Form onSubmit={signIn}>\r\n                        <FormLayout>\r\n                            <TextField\r\n                                name=\"username\"\r\n                                value={username}\r\n                                onChange={onChange}\r\n                                label=\"Username\"\r\n                            />\r\n                            <TextField\r\n                                name=\"password\"\r\n                                value={password}\r\n                                onChange={onChange}\r\n                                label=\"Password\"\r\n                            />\r\n                            <Button primary submit>\r\n                                Login\r\n                            </Button>\r\n                        </FormLayout>\r\n                    </Form>\r\n                </Card>\r\n            ) : (\r\n                <div>Hello from signed in section</div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile\r\n"]},"metadata":{},"sourceType":"module"}