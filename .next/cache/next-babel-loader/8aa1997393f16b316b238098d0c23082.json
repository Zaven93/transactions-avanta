{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from 'react';\nimport { Auth } from 'aws-amplify';\n\nconst Branch = () => {\n  const {\n    0: formData,\n    1: setFormData\n  } = useState({\n    username: '',\n    email: '',\n    password: '',\n    code: '',\n    formType: 'signUp'\n  });\n\n  const onChange = e => {\n    setFormData(_objectSpread(_objectSpread({}, formData), {}, {\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  const signUp = async () => {\n    const {\n      username,\n      email,\n      password\n    } = formData;\n\n    try {\n      const {\n        user\n      } = await Auth.signUp({\n        username,\n        password,\n        attributes: {\n          email\n        }\n      });\n      console.log(user);\n      setFormData(_objectSpread(_objectSpread({}, formData), {}, {\n        formType: 'confirm'\n      }));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const confirm = async () => {\n    const {\n      username,\n      code\n    } = formData;\n\n    try {\n      await Auth.confirmSignUp(username, code);\n      setFormData(_objectSpread(_objectSpread({}, formData), {}, {\n        formType: 'signIn'\n      }));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const signIn = async () => {\n    const {\n      username,\n      password\n    } = formData;\n\n    try {\n      const user = Auth.signIn(username, password);\n      console.log('User: user');\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const {\n    username,\n    email,\n    password,\n    code,\n    formType\n  } = formData;\n  return __jsx(\"div\", null, formType === 'signUp' && __jsx(\"form\", null, __jsx(\"input\", {\n    name: \"username\",\n    value: username,\n    type: \"text\",\n    placeholder: \"username\",\n    onChange: onChange\n  }), __jsx(\"input\", {\n    name: \"password\",\n    value: password,\n    type: \"password\",\n    placeholder: \"password\",\n    onChange: onChange\n  }), __jsx(\"input\", {\n    name: \"email\",\n    value: email,\n    type: \"text\",\n    placeholder: \"email\",\n    onChange: onChange\n  }), __jsx(\"button\", {\n    type: \"submit\"\n  }, \"Submit\")), formType === 'signIn' && __jsx(\"form\", null, __jsx(\"input\", {\n    name: \"username\",\n    value: username,\n    type: \"text\",\n    placeholder: \"username\",\n    onChange: onChange\n  }), __jsx(\"input\", {\n    name: \"password\",\n    value: password,\n    type: \"password\",\n    placeholder: \"password\",\n    onChange: onChange\n  }), __jsx(\"button\", {\n    type: \"submit\"\n  }, \"Submit\")), formType === 'confirm' && __jsx(\"form\", null, __jsx(\"input\", {\n    name: \"username\",\n    value: username,\n    type: \"text\",\n    placeholder: \"username\",\n    onChange: onChange\n  }), __jsx(\"input\", {\n    name: \"code\",\n    value: code,\n    type: \"text\",\n    placeholder: \"confirm code\",\n    onChange: onChange\n  }), __jsx(\"button\", {\n    type: \"submit\"\n  }, \"Submit\")));\n};\n\nexport default Branch;","map":{"version":3,"sources":["C:/Users/Admin/Desktop/transactions/pages/branch.js"],"names":["React","useState","Auth","Branch","formData","setFormData","username","email","password","code","formType","onChange","e","target","name","value","signUp","user","attributes","console","log","error","confirm","confirmSignUp","signIn"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport { Auth } from 'aws-amplify'\r\n\r\nconst Branch = () => {\r\n    const [formData, setFormData] = useState({\r\n        username: '',\r\n        email: '',\r\n        password: '',\r\n        code: '',\r\n        formType: 'signUp'\r\n    })\r\n\r\n    const onChange = (e) => {\r\n        setFormData({ ...formData, [e.target.name]: e.target.value })\r\n    }\r\n\r\n    const signUp = async () => {\r\n        const { username, email, password } = formData\r\n        try {\r\n            const { user } = await Auth.signUp({ username, password, attributes: { email } })\r\n\r\n            console.log(user)\r\n            setFormData({ ...formData, formType: 'confirm' })\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    const confirm = async () => {\r\n        const { username, code } = formData\r\n        try {\r\n            await Auth.confirmSignUp(username, code)\r\n            setFormData({ ...formData, formType: 'signIn' })\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    const signIn = async () => {\r\n        const { username, password } = formData\r\n        try {\r\n            const user = Auth.signIn(username, password)\r\n            console.log('User: user')\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    const { username, email, password, code, formType } = formData\r\n\r\n    return (\r\n        <div>\r\n            {formType === 'signUp' && (\r\n                <form>\r\n                    <input\r\n                        name=\"username\"\r\n                        value={username}\r\n                        type=\"text\"\r\n                        placeholder=\"username\"\r\n                        onChange={onChange}\r\n                    />\r\n                    <input\r\n                        name=\"password\"\r\n                        value={password}\r\n                        type=\"password\"\r\n                        placeholder=\"password\"\r\n                        onChange={onChange}\r\n                    />\r\n                    <input\r\n                        name=\"email\"\r\n                        value={email}\r\n                        type=\"text\"\r\n                        placeholder=\"email\"\r\n                        onChange={onChange}\r\n                    />\r\n                    <button type=\"submit\">Submit</button>\r\n                </form>\r\n            )}\r\n            {formType === 'signIn' && (\r\n                <form>\r\n                    <input\r\n                        name=\"username\"\r\n                        value={username}\r\n                        type=\"text\"\r\n                        placeholder=\"username\"\r\n                        onChange={onChange}\r\n                    />\r\n                    <input\r\n                        name=\"password\"\r\n                        value={password}\r\n                        type=\"password\"\r\n                        placeholder=\"password\"\r\n                        onChange={onChange}\r\n                    />\r\n                    <button type=\"submit\">Submit</button>\r\n                </form>\r\n            )}\r\n            {formType === 'confirm' && (\r\n                <form>\r\n                    <input\r\n                        name=\"username\"\r\n                        value={username}\r\n                        type=\"text\"\r\n                        placeholder=\"username\"\r\n                        onChange={onChange}\r\n                    />\r\n                    <input\r\n                        name=\"code\"\r\n                        value={code}\r\n                        type=\"text\"\r\n                        placeholder=\"confirm code\"\r\n                        onChange={onChange}\r\n                    />\r\n                    <button type=\"submit\">Submit</button>\r\n                </form>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Branch\r\n"]},"metadata":{},"sourceType":"module"}