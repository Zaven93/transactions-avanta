{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useQuery } from \"react-query\";\nimport { PaymentService } from \"../services\";\n\nvar useFetchPaymentRequest = function useFetchPaymentRequest(branchId, status, limit, nextToken) {\n  _s();\n\n  var paymentRequests;\n\n  if (nextToken !== \"\") {\n    paymentRequests = useQuery([\"payment-request\", {\n      branchId: branchId,\n      status: status,\n      limit: limit,\n      nextToken: nextToken\n    }], PaymentService.fetchPaymentRequest, {\n      enabled: false\n    });\n    return paymentRequests;\n  }\n\n  paymentRequests = useQuery([\"payment-request\", {\n    branchId: branchId,\n    status: status,\n    limit: limit\n  }], PaymentService.fetchPaymentRequest, {\n    enabled: false\n  });\n  return paymentRequests;\n}; // const useFetchPaymentRequest = () => {\n//   const [fetchPaymentRequest, { isLoading, error, data }] = useMutation(\n//     PaymentService.fetchPaymentRequest\n//   )\n//   return {\n//     fetchPaymentRequest,\n//     isLoading,\n//     error,\n//     data,\n//   }\n// }\n\n\n_s(useFetchPaymentRequest, \"mn4J3+ExfyLz+EHcTadVPXTeWq4=\", false, function () {\n  return [useQuery, useQuery];\n});\n\nexport default useFetchPaymentRequest;","map":{"version":3,"sources":["/var/www/transactions-avanta/core/hooks/useFetchPaymentRequest.js"],"names":["React","useQuery","PaymentService","useFetchPaymentRequest","branchId","status","limit","nextToken","paymentRequests","fetchPaymentRequest","enabled"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,cAAT,QAA+B,aAA/B;;AAEA,IAAMC,sBAAsB,GAAG,SAAzBA,sBAAyB,CAACC,QAAD,EAAWC,MAAX,EAAmBC,KAAnB,EAA0BC,SAA1B,EAAwC;AAAA;;AACrE,MAAIC,eAAJ;;AAEA,MAAID,SAAS,KAAK,EAAlB,EAAsB;AACpBC,IAAAA,eAAe,GAAGP,QAAQ,CACxB,CAAC,iBAAD,EAAoB;AAAEG,MAAAA,QAAQ,EAARA,QAAF;AAAYC,MAAAA,MAAM,EAANA,MAAZ;AAAoBC,MAAAA,KAAK,EAALA,KAApB;AAA2BC,MAAAA,SAAS,EAATA;AAA3B,KAApB,CADwB,EAExBL,cAAc,CAACO,mBAFS,EAGxB;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAHwB,CAA1B;AAKA,WAAOF,eAAP;AACD;;AAEDA,EAAAA,eAAe,GAAGP,QAAQ,CACxB,CAAC,iBAAD,EAAoB;AAAEG,IAAAA,QAAQ,EAARA,QAAF;AAAYC,IAAAA,MAAM,EAANA,MAAZ;AAAoBC,IAAAA,KAAK,EAALA;AAApB,GAApB,CADwB,EAExBJ,cAAc,CAACO,mBAFS,EAGxB;AAAEC,IAAAA,OAAO,EAAE;AAAX,GAHwB,CAA1B;AAKA,SAAOF,eAAP;AACD,CAlBD,C,CAoBA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;GA/BML,sB;UAIgBF,Q,EAQFA,Q;;;AAqBpB,eAAeE,sBAAf","sourcesContent":["import React from \"react\"\nimport { useQuery } from \"react-query\"\nimport { PaymentService } from \"../services\"\n\nconst useFetchPaymentRequest = (branchId, status, limit, nextToken) => {\n  let paymentRequests\n\n  if (nextToken !== \"\") {\n    paymentRequests = useQuery(\n      [\"payment-request\", { branchId, status, limit, nextToken }],\n      PaymentService.fetchPaymentRequest,\n      { enabled: false }\n    )\n    return paymentRequests\n  }\n\n  paymentRequests = useQuery(\n    [\"payment-request\", { branchId, status, limit }],\n    PaymentService.fetchPaymentRequest,\n    { enabled: false }\n  )\n  return paymentRequests\n}\n\n// const useFetchPaymentRequest = () => {\n//   const [fetchPaymentRequest, { isLoading, error, data }] = useMutation(\n//     PaymentService.fetchPaymentRequest\n//   )\n\n//   return {\n//     fetchPaymentRequest,\n//     isLoading,\n//     error,\n//     data,\n//   }\n// }\n\nexport default useFetchPaymentRequest\n"]},"metadata":{},"sourceType":"module"}