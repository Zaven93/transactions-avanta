{"ast":null,"code":"var _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useCallback, useEffect } from \"react\";\nimport { Auth, API, graphqlOperation } from \"aws-amplify\";\nimport { Redirect } from \"@shopify/app-bridge/actions\";\nimport createApp from \"@shopify/app-bridge\";\nimport { Card, DataTable, Button, Page, TextField, Icon, Stack } from \"@shopify/polaris\";\nimport { SearchMajorMonotone, TransactionMajorMonotone, BalanceMajorMonotone, LogOutMinor } from \"@shopify/polaris-icons\";\nimport { useBranchByAdmin } from \"../core/hooks\";\nimport { toCurrency, formatDate, extractNumbersFromString } from \"../utils/helper\";\nimport PaymentRequest from \"./PaymentRequest\";\nimport { branchByAdminId } from \"../graphql/queries\";\nimport { onCreateTransaction, onDeleteTransaction } from \"../graphql/subscriptions\";\n\nvar BranchData = function BranchData(_ref) {\n  _s();\n\n  var user = _ref.user,\n      updateUser = _ref.updateUser;\n\n  var _useState = useState(\"\"),\n      branchInfo = _useState[0],\n      setBranchInfo = _useState[1];\n\n  var _useState2 = useState(null),\n      searchValue = _useState2[0],\n      setSearchValue = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      newCreatedTransaction = _useState3[0],\n      setNewCreatedTransaction = _useState3[1];\n\n  var _useState4 = useState(false),\n      showPaymentRequest = _useState4[0],\n      setShowPaymentRequest = _useState4[1];\n\n  var _useBranchByAdmin = useBranchByAdmin(user.attributes.sub),\n      branchData = _useBranchByAdmin.data,\n      getBranch = _useBranchByAdmin.refetch;\n\n  var handleSearchInput = useCallback(function (newValue) {\n    return setSearchValue(newValue);\n  }, []);\n  var app = createApp({\n    apiKey: \"cb7879ce44f538b136e4da86bc6f612c\",\n    shopOrigin: \"avanta-clinics.myshopify.com\"\n  });\n  var redirect = Redirect.create(app);\n  useEffect(function () {\n    getBranch();\n    var createListener = API.graphql(graphqlOperation(onCreateTransaction)).subscribe({\n      next: function next(createdTransaction) {\n        return setNewCreatedTransaction(createdTransaction);\n      }\n    });\n    var deleteListener = API.graphql(graphqlOperation(onDeleteTransaction)).subscribe({\n      next: function next(deletedTransaction) {\n        return setNewCreatedTransaction(deletedTransaction);\n      }\n    });\n    return function () {\n      createListener.unsubscribe();\n      deleteListener.unsubscribe();\n    };\n  }, [newCreatedTransaction, user]);\n  useEffect(function () {\n    setBranchInfo(branchData && branchData.data.branchByAdminId.items[0]);\n  }, [branchData]);\n  console.log(\"User sub\", user.attributes.sub);\n  console.log(\"Branch data\", branchData);\n  return __jsx(React.Fragment, null, showPaymentRequest ? __jsx(PaymentRequest, {\n    setShowPaymentRequest: setShowPaymentRequest,\n    branchId: branchInfo ? branchInfo.id : \"\"\n  }) : __jsx(Page, {\n    title: branchInfo && branchInfo.branchName\n  }, __jsx(TextField, {\n    label: \"Search Product\",\n    value: searchValue,\n    onChange: handleSearchInput,\n    prefix: __jsx(Icon, {\n      source: SearchMajorMonotone\n    }),\n    placeholder: \"Search by Customer phone number\"\n  }), __jsx(Stack, null, __jsx(Stack.Item, {\n    fill: true\n  }, __jsx(Button, {\n    id: \"Accept-Payment\",\n    onClick: function onClick() {\n      return setShowPaymentRequest(true);\n    }\n  }, __jsx(Icon, {\n    source: BalanceMajorMonotone\n  }), \" Accept Payment\")), __jsx(Stack.Item, null, __jsx(Button, {\n    id: \"Create-Transaction\",\n    primary: true,\n    onClick: function onClick() {\n      return redirect.dispatch(Redirect.Action.REMOTE, {\n        url: \"https://new-refactored-branch.d273bytjbzt6nb.amplifyapp.com/transactions/\".concat(user.attributes.sub),\n        newContext: true\n      });\n    }\n  }, __jsx(Icon, {\n    source: TransactionMajorMonotone\n  }), \" Create transaction\")), __jsx(Stack.Item, null, __jsx(Button, {\n    primary: true,\n    id: \"Logout\",\n    onClick: function onClick() {\n      Auth.signOut();\n      updateUser(null);\n    }\n  }, __jsx(Icon, {\n    source: LogOutMinor\n  }), \" Logout\"))), branchInfo && __jsx(Card, null, __jsx(DataTable, {\n    columnContentTypes: [\"text\", \"text\", \"text\", \"text\"],\n    headings: [\"Customer phone number\", \"TotalPrice\", \"TotalBonusAmount\", \"Minus from Bonus Amount\", \"CreatedAt\"],\n    rows: branchInfo && branchInfo.transactions.items.filter(function (transaction) {\n      if (searchValue == null) {\n        return transaction;\n      } else if (transaction.customer[0].phone.toLowerCase().includes(searchValue.toLowerCase())) {\n        return transaction;\n      }\n    }).sort(function (a, b) {\n      return new Date(b.createdAt) - new Date(a.createdAt);\n    }).map(function (transaction) {\n      return [__jsx(Button, {\n        primary: true,\n        onClick: function onClick() {\n          return redirect.dispatch(Redirect.Action.ADMIN_PATH, {\n            path: \"/customers/\".concat(transaction.customer[0].id),\n            newContext: true\n          });\n        }\n      }, transaction.customer[0].phone), toCurrency(Number(transaction.totalPrice)), toCurrency(Number(transaction.totalBonusAmount)), transaction.note === null ? \"\" : toCurrency(extractNumbersFromString(transaction.note)), formatDate(transaction.createdAt)];\n    })\n  }))));\n};\n\n_s(BranchData, \"JyVlUFgbffyi0jpFRsxNIrvuvZM=\", false, function () {\n  return [useBranchByAdmin];\n});\n\n_c = BranchData;\nexport default BranchData;\n\nvar _c;\n\n$RefreshReg$(_c, \"BranchData\");","map":{"version":3,"sources":["/var/www/transactions-avanta/components/BranchData.js"],"names":["React","useState","useCallback","useEffect","Auth","API","graphqlOperation","Redirect","createApp","Card","DataTable","Button","Page","TextField","Icon","Stack","SearchMajorMonotone","TransactionMajorMonotone","BalanceMajorMonotone","LogOutMinor","useBranchByAdmin","toCurrency","formatDate","extractNumbersFromString","PaymentRequest","branchByAdminId","onCreateTransaction","onDeleteTransaction","BranchData","user","updateUser","branchInfo","setBranchInfo","searchValue","setSearchValue","newCreatedTransaction","setNewCreatedTransaction","showPaymentRequest","setShowPaymentRequest","attributes","sub","branchData","data","getBranch","refetch","handleSearchInput","newValue","app","apiKey","shopOrigin","redirect","create","createListener","graphql","subscribe","next","createdTransaction","deleteListener","deletedTransaction","unsubscribe","items","console","log","id","branchName","dispatch","Action","REMOTE","url","newContext","signOut","transactions","filter","transaction","customer","phone","toLowerCase","includes","sort","a","b","Date","createdAt","map","ADMIN_PATH","path","Number","totalPrice","totalBonusAmount","note"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, useEffect } from \"react\"\nimport { Auth, API, graphqlOperation } from \"aws-amplify\"\nimport { Redirect } from \"@shopify/app-bridge/actions\"\nimport createApp from \"@shopify/app-bridge\"\nimport { Card, DataTable, Button, Page, TextField, Icon, Stack } from \"@shopify/polaris\"\nimport {\n  SearchMajorMonotone,\n  TransactionMajorMonotone,\n  BalanceMajorMonotone,\n  LogOutMinor,\n} from \"@shopify/polaris-icons\"\nimport { useBranchByAdmin } from \"../core/hooks\"\nimport { toCurrency, formatDate, extractNumbersFromString } from \"../utils/helper\"\nimport PaymentRequest from \"./PaymentRequest\"\nimport { branchByAdminId } from \"../graphql/queries\"\nimport { onCreateTransaction, onDeleteTransaction } from \"../graphql/subscriptions\"\n\nconst BranchData = ({ user, updateUser }) => {\n  const [branchInfo, setBranchInfo] = useState(\"\")\n  const [searchValue, setSearchValue] = useState(null)\n  const [newCreatedTransaction, setNewCreatedTransaction] = useState(\"\")\n  const [showPaymentRequest, setShowPaymentRequest] = useState(false)\n\n  const { data: branchData, refetch: getBranch } = useBranchByAdmin(user.attributes.sub)\n\n  const handleSearchInput = useCallback((newValue) => setSearchValue(newValue), [])\n\n  const app = createApp({\n    apiKey: \"cb7879ce44f538b136e4da86bc6f612c\",\n    shopOrigin: \"avanta-clinics.myshopify.com\",\n  })\n\n  const redirect = Redirect.create(app)\n\n  useEffect(() => {\n    getBranch()\n    const createListener = API.graphql(graphqlOperation(onCreateTransaction)).subscribe({\n      next: (createdTransaction) => setNewCreatedTransaction(createdTransaction),\n    })\n\n    const deleteListener = API.graphql(graphqlOperation(onDeleteTransaction)).subscribe({\n      next: (deletedTransaction) => setNewCreatedTransaction(deletedTransaction),\n    })\n\n    return () => {\n      createListener.unsubscribe()\n      deleteListener.unsubscribe()\n    }\n  }, [newCreatedTransaction, user])\n\n  useEffect(() => {\n    setBranchInfo(branchData && branchData.data.branchByAdminId.items[0])\n  }, [branchData])\n\n  console.log(\"User sub\", user.attributes.sub)\n  console.log(\"Branch data\", branchData)\n\n  return (\n    <>\n      {showPaymentRequest ? (\n        <PaymentRequest\n          setShowPaymentRequest={setShowPaymentRequest}\n          branchId={branchInfo ? branchInfo.id : \"\"}\n        />\n      ) : (\n        <Page title={branchInfo && branchInfo.branchName}>\n          <TextField\n            label=\"Search Product\"\n            value={searchValue}\n            onChange={handleSearchInput}\n            prefix={<Icon source={SearchMajorMonotone} />}\n            placeholder=\"Search by Customer phone number\"\n          />\n          <Stack>\n            <Stack.Item fill>\n              <Button id=\"Accept-Payment\" onClick={() => setShowPaymentRequest(true)}>\n                <Icon source={BalanceMajorMonotone} /> Accept Payment\n              </Button>\n            </Stack.Item>\n            <Stack.Item>\n              <Button\n                id=\"Create-Transaction\"\n                primary\n                onClick={() =>\n                  redirect.dispatch(Redirect.Action.REMOTE, {\n                    url: `https://new-refactored-branch.d273bytjbzt6nb.amplifyapp.com/transactions/${user.attributes.sub}`,\n                    newContext: true,\n                  })\n                }>\n                <Icon source={TransactionMajorMonotone} /> Create transaction\n              </Button>\n            </Stack.Item>\n            <Stack.Item>\n              <Button\n                primary\n                id=\"Logout\"\n                onClick={() => {\n                  Auth.signOut()\n                  updateUser(null)\n                }}>\n                <Icon source={LogOutMinor} /> Logout\n              </Button>\n            </Stack.Item>\n          </Stack>\n          {branchInfo && (\n            <Card>\n              <DataTable\n                columnContentTypes={[\"text\", \"text\", \"text\", \"text\"]}\n                headings={[\n                  \"Customer phone number\",\n                  \"TotalPrice\",\n                  \"TotalBonusAmount\",\n                  \"Minus from Bonus Amount\",\n                  \"CreatedAt\",\n                ]}\n                rows={\n                  branchInfo &&\n                  branchInfo.transactions.items\n                    .filter((transaction) => {\n                      if (searchValue == null) {\n                        return transaction\n                      } else if (\n                        transaction.customer[0].phone\n                          .toLowerCase()\n                          .includes(searchValue.toLowerCase())\n                      ) {\n                        return transaction\n                      }\n                    })\n                    .sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt))\n                    .map((transaction) => [\n                      <Button\n                        primary\n                        onClick={() =>\n                          redirect.dispatch(Redirect.Action.ADMIN_PATH, {\n                            path: `/customers/${transaction.customer[0].id}`,\n                            newContext: true,\n                          })\n                        }>\n                        {transaction.customer[0].phone}\n                      </Button>,\n                      toCurrency(Number(transaction.totalPrice)),\n                      toCurrency(Number(transaction.totalBonusAmount)),\n                      transaction.note === null\n                        ? \"\"\n                        : toCurrency(extractNumbersFromString(transaction.note)),\n                      formatDate(transaction.createdAt),\n                    ])\n                }\n              />\n            </Card>\n          )}\n        </Page>\n      )}\n    </>\n  )\n}\n\nexport default BranchData\n"]},"metadata":{},"sourceType":"module"}