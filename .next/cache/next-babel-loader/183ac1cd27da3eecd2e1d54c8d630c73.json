{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar __jsx = React.createElement;\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n    query listBranchs {\\n        listBranchs {\\n            items {\\n                adminId\\n                branchName\\n                createdAt\\n                id\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation createBranch($input: CreateBranchInput!) {\\n        createBranch(input: $input) {\\n            id\\n            adminId\\n            branchName\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { Auth, API, graphqlOperation } from 'aws-amplify';\nimport gql from 'graphql-tag';\nimport { v4 as uuidv4 } from 'uuid';\nimport { Page, Button, Modal, Form, FormLayout, TextField, Badge } from '@shopify/polaris';\nimport { Table, Popup, Header, Icon } from 'semantic-ui-react';\nimport ProductList from './ProductsList';\nimport { formatDate } from '../utils/helper';\nimport config from '../aws-exports';\nimport BranchProducts from './BranchProducts';\nimport BranchList from './BranchList';\nimport AdminBranchInfo from './AdminBranchInfo';\nAPI.configure(config);\nvar createBranch = gql(_templateObject());\nvar listBranchs = gql(_templateObject2());\n\nvar BranchConsole = function BranchConsole(_ref) {\n  var updateUser = _ref.updateUser;\n\n  var _useState = useState(false),\n      active = _useState[0],\n      setActive = _useState[1];\n\n  var _useState2 = useState(''),\n      branchName = _useState2[0],\n      setBranchName = _useState2[1];\n\n  var _useState3 = useState(''),\n      username = _useState3[0],\n      setUsername = _useState3[1];\n\n  var _useState4 = useState(''),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(''),\n      password = _useState5[0],\n      setPassword = _useState5[1];\n\n  var _useState6 = useState(''),\n      code = _useState6[0],\n      setCode = _useState6[1];\n\n  var _useState7 = useState('signUp'),\n      formType = _useState7[0],\n      setFormType = _useState7[1];\n\n  var _useState8 = useState(null),\n      userSub = _useState8[0],\n      setUserSub = _useState8[1];\n\n  var _useState9 = useState(''),\n      branches = _useState9[0],\n      setBranches = _useState9[1];\n\n  var _useState10 = useState(null),\n      branchId = _useState10[0],\n      setBranchId = _useState10[1];\n\n  var onChangeBranchName = useCallback(function (newValue) {\n    setBranchName(newValue);\n  }, []);\n  var onChangeUsername = useCallback(function (newValue) {\n    setUsername(newValue);\n  }, []);\n  var onChangePassword = useCallback(function (newValue) {\n    setPassword(newValue);\n  }, []);\n  var onChangeEmail = useCallback(function (newValue) {\n    setEmail(newValue);\n  }, []);\n  var onChangeCode = useCallback(function (newValue) {\n    setCode(newValue);\n  }, []);\n\n  var handleChange = function handleChange() {\n    setActive(!active);\n  };\n\n  var signUp = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var user;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              _context.prev = 1;\n              _context.next = 4;\n              return Auth.signUp({\n                username: username,\n                password: password,\n                attributes: {\n                  email: email\n                }\n              });\n\n            case 4:\n              user = _context.sent;\n              setUserSub(user.userSub);\n              console.log('Signed Up User from Modal', user);\n              setFormType('confirm');\n              _context.next = 13;\n              break;\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](1);\n              console.log(_context.t0);\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 10]]);\n    }));\n\n    return function signUp(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var confirm = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(e) {\n      var confirmedUser, branch;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              e.preventDefault();\n              _context2.prev = 1;\n              _context2.next = 4;\n              return Auth.confirmSignUp(username, code);\n\n            case 4:\n              confirmedUser = _context2.sent;\n              console.log('Confirmed user', confirmedUser);\n              _context2.next = 8;\n              return API.graphql(graphqlOperation(createBranch, {\n                input: {\n                  adminId: userSub,\n                  branchUsername: username,\n                  branchName: branchName,\n                  id: uuidv4()\n                }\n              }));\n\n            case 8:\n              branch = _context2.sent;\n              console.log('New created branch', branch);\n              setFormType('signUp');\n              handleChange();\n              _context2.next = 17;\n              break;\n\n            case 14:\n              _context2.prev = 14;\n              _context2.t0 = _context2[\"catch\"](1);\n              console.log(_context2.t0);\n\n            case 17:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[1, 14]]);\n    }));\n\n    return function confirm(_x2) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var fetchBranches = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var getBranches;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return API.graphql(graphqlOperation(listBranchs));\n\n            case 3:\n              getBranches = _context3.sent;\n              setBranches(getBranches.data);\n              _context3.next = 10;\n              break;\n\n            case 7:\n              _context3.prev = 7;\n              _context3.t0 = _context3[\"catch\"](0);\n              console.log(_context3.t0);\n\n            case 10:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[0, 7]]);\n    }));\n\n    return function fetchBranches() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    fetchBranches();\n  }, []);\n  console.log('Branch name', branchName);\n  console.log('Username', username);\n  console.log('Password', password);\n  console.log('Email', email);\n  console.log('Code', code);\n  console.log('Fetched branches', branches);\n  return __jsx(React.Fragment, null, branchId && __jsx(AdminBranchInfo, {\n    setBranchId: setBranchId,\n    branchId: branchId\n  }), !branchId && __jsx(React.Fragment, null, __jsx(Button, {\n    onClick: handleChange,\n    primary: true\n  }, \"Create branch\"), __jsx(Button, {\n    primary: true,\n    id: \"Logout\",\n    onClick: function onClick() {\n      Auth.signOut();\n      updateUser(null);\n    }\n  }, __jsx(Icon, {\n    name: \"sign out\"\n  }), \" Logout\"), __jsx(BranchList, {\n    setBranchId: setBranchId\n  }), __jsx(Modal, {\n    open: active,\n    onClose: handleChange,\n    title: \"Fill in Branch info\"\n  }, __jsx(Modal.Section, null, formType === 'signUp' && __jsx(Form, {\n    onSubmit: signUp\n  }, __jsx(FormLayout, null, __jsx(TextField, {\n    value: branchName,\n    onChange: onChangeBranchName,\n    label: \"Branch Name\"\n  }), __jsx(TextField, {\n    value: username,\n    onChange: onChangeUsername,\n    label: \"Branch admin username\"\n  }), __jsx(TextField, {\n    value: email,\n    onChange: onChangeEmail,\n    label: \"Branch admin email\"\n  }), __jsx(TextField, {\n    type: \"password\",\n    value: password,\n    onChange: onChangePassword,\n    label: \"Branch admin password\"\n  }), __jsx(Button, {\n    primary: true,\n    submit: true\n  }, \"Create Branch\"))), formType === 'confirm' && __jsx(Form, {\n    onSubmit: confirm\n  }, __jsx(FormLayout, null, __jsx(TextField, {\n    value: username,\n    onChange: onChangeUsername,\n    label: \"Branch admin username\"\n  }), __jsx(TextField, {\n    value: code,\n    onChange: onChangeCode,\n    label: \"Confirmation code\"\n  }), __jsx(Button, {\n    primary: true,\n    submit: true\n  }, \"Confirm\")))))));\n};\n\nexport default BranchConsole;","map":null,"metadata":{},"sourceType":"module"}