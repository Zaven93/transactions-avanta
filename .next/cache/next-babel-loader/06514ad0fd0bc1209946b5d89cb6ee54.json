{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useCallback, useEffect } from \"react\";\nimport { Card, Button, TextField, Form, FormLayout } from \"@shopify/polaris\";\nimport { Icon } from 'semantic-ui-react';\nimport { useMutation } from \"react-query\";\nimport { useForm } from \"react-hook-form\";\nimport { AuthService } from \"../core/services\";\nimport { useLogin } from \"../core/hooks\";\nconst Profile = React.forwardRef(({\n  setUser\n}, ref) => {\n  const {\n    0: username,\n    1: setUsername\n  } = useState(\"\");\n  const {\n    0: password,\n    1: setPassword\n  } = useState(\"\");\n  const {\n    handleSubmit,\n    errors,\n    register\n  } = useForm();\n  const {\n    login,\n    status,\n    data,\n    error\n  } = useLogin();\n  const onChangeUsername = useCallback(newValue => {\n    setUsername(newValue);\n  }, []);\n  const onChangePassword = useCallback(newValue => {\n    setPassword(newValue);\n  }, []); // const handleSubmit = (e) => {\n  //   e.preventDefault()\n  //   login({ username, password })\n  // }\n\n  console.log(\"Errors\", errors);\n  useEffect(() => {\n    setUser(data);\n  }, [data]);\n  return __jsx(\"div\", {\n    className: \"authentication-container\"\n  }, __jsx(Card, {\n    title: \"Log into your branch\",\n    sectioned: true\n  }, __jsx(\"form\", {\n    onSubmit: handleSubmit(login)\n  }, __jsx(\"div\", {\n    className: \"form-controll\"\n  }, __jsx(\"input\", {\n    className: \"input\",\n    name: \"username\",\n    ref: register({\n      required: \"Username is required\"\n    }),\n    placeholder: \"Username\"\n  }), errors.username && __jsx(\"p\", {\n    className: \"error-notification\"\n  }, errors.username.message)), __jsx(\"div\", {\n    className: \"form\"\n  }, __jsx(\"input\", {\n    className: \"input\",\n    name: \"password\",\n    type: \"password\",\n    ref: register({\n      required: \"Password is required\"\n    }),\n    placeholder: \"Password\"\n  }), errors.password && __jsx(\"p\", {\n    className: \"error-notification\"\n  }, errors.password.message)), __jsx(Button, {\n    primary: true,\n    submit: true\n  }, __jsx(Icon, {\n    name: \"sign-in\"\n  }), \" Login\"))));\n});\nexport default Profile;","map":{"version":3,"sources":["/var/www/transactions-avanta/components/Login.js"],"names":["useState","useCallback","useEffect","Card","Button","TextField","Form","FormLayout","Icon","useMutation","useForm","AuthService","useLogin","Profile","React","forwardRef","setUser","ref","username","setUsername","password","setPassword","handleSubmit","errors","register","login","status","data","error","onChangeUsername","newValue","onChangePassword","console","log","required","message"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,WAAnB,EAAgCC,SAAhC,QAAiD,OAAjD;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,SAAvB,EAAkCC,IAAlC,EAAwCC,UAAxC,QAA0D,kBAA1D;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,QAAT,QAAyB,eAAzB;AAEA,MAAMC,OAAO,GAAGC,KAAK,CAACC,UAAN,CAAiB,CAAC;AAAEC,EAAAA;AAAF,CAAD,EAAcC,GAAd,KAAsB;AACrD,QAAM;AAAA,OAACC,QAAD;AAAA,OAAWC;AAAX,MAA0BnB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM;AAAA,OAACoB,QAAD;AAAA,OAAWC;AAAX,MAA0BrB,QAAQ,CAAC,EAAD,CAAxC;AAEA,QAAM;AAAEsB,IAAAA,YAAF;AAAgBC,IAAAA,MAAhB;AAAwBC,IAAAA;AAAxB,MAAqCd,OAAO,EAAlD;AAEA,QAAM;AAAEe,IAAAA,KAAF;AAASC,IAAAA,MAAT;AAAiBC,IAAAA,IAAjB;AAAuBC,IAAAA;AAAvB,MAAiChB,QAAQ,EAA/C;AAEA,QAAMiB,gBAAgB,GAAG5B,WAAW,CAAE6B,QAAD,IAAc;AACjDX,IAAAA,WAAW,CAACW,QAAD,CAAX;AACD,GAFmC,EAEjC,EAFiC,CAApC;AAIA,QAAMC,gBAAgB,GAAG9B,WAAW,CAAE6B,QAAD,IAAc;AACjDT,IAAAA,WAAW,CAACS,QAAD,CAAX;AACD,GAFmC,EAEjC,EAFiC,CAApC,CAZqD,CAgBrD;AACA;AACA;AACA;;AAEAE,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBV,MAAtB;AAEArB,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,OAAO,CAACW,IAAD,CAAP;AACD,GAFQ,EAEN,CAACA,IAAD,CAFM,CAAT;AAIA,SACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE,MAAC,IAAD;AAAM,IAAA,KAAK,EAAC,sBAAZ;AAAmC,IAAA,SAAS;AAA5C,KACE;AAAM,IAAA,QAAQ,EAAEL,YAAY,CAACG,KAAD;AAA5B,KACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACA;AACE,IAAA,SAAS,EAAC,OADZ;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,GAAG,EAAED,QAAQ,CAAC;AAAEU,MAAAA,QAAQ,EAAE;AAAZ,KAAD,CAHf;AAIE,IAAA,WAAW,EAAC;AAJd,IADA,EAOCX,MAAM,CAACL,QAAP,IAAmB;AAAG,IAAA,SAAS,EAAC;AAAb,KAAmCK,MAAM,CAACL,QAAP,CAAgBiB,OAAnD,CAPpB,CADF,EAUE;AAAK,IAAA,SAAS,EAAC;AAAf,KACA;AACE,IAAA,SAAS,EAAC,OADZ;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,IAAI,EAAC,UAHP;AAIE,IAAA,GAAG,EAAEX,QAAQ,CAAC;AAAEU,MAAAA,QAAQ,EAAE;AAAZ,KAAD,CAJf;AAKE,IAAA,WAAW,EAAC;AALd,IADA,EAQCX,MAAM,CAACH,QAAP,IAAmB;AAAG,IAAA,SAAS,EAAC;AAAb,KAAmCG,MAAM,CAACH,QAAP,CAAgBe,OAAnD,CARpB,CAVF,EAoBE,MAAC,MAAD;AAAQ,IAAA,OAAO,MAAf;AAAgB,IAAA,MAAM;AAAtB,KACI,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC;AAAX,IADJ,WApBF,CADF,CADF,CADF;AA4CD,CAvEe,CAAhB;AAyEA,eAAetB,OAAf","sourcesContent":["import { useState, useCallback, useEffect } from \"react\"\nimport { Card, Button, TextField, Form, FormLayout } from \"@shopify/polaris\"\nimport { Icon } from 'semantic-ui-react'\nimport { useMutation } from \"react-query\"\nimport { useForm } from \"react-hook-form\"\nimport { AuthService } from \"../core/services\"\nimport { useLogin } from \"../core/hooks\"\n\nconst Profile = React.forwardRef(({ setUser }, ref) => {\n  const [username, setUsername] = useState(\"\")\n  const [password, setPassword] = useState(\"\")\n\n  const { handleSubmit, errors, register } = useForm()\n\n  const { login, status, data, error } = useLogin()\n\n  const onChangeUsername = useCallback((newValue) => {\n    setUsername(newValue)\n  }, [])\n\n  const onChangePassword = useCallback((newValue) => {\n    setPassword(newValue)\n  }, [])\n\n  // const handleSubmit = (e) => {\n  //   e.preventDefault()\n  //   login({ username, password })\n  // }\n\n  console.log(\"Errors\", errors)\n\n  useEffect(() => {\n    setUser(data)\n  }, [data])\n\n  return (\n    <div className=\"authentication-container\">\n      <Card title=\"Log into your branch\" sectioned>\n        <form onSubmit={handleSubmit(login)}>\n          <div className=\"form-controll\">\n          <input\n            className=\"input\"\n            name=\"username\"\n            ref={register({ required: \"Username is required\" })}\n            placeholder=\"Username\"\n          />\n          {errors.username && <p className=\"error-notification\">{errors.username.message}</p>}\n          </div>\n          <div className=\"form\">\n          <input\n            className=\"input\"\n            name=\"password\"\n            type=\"password\"\n            ref={register({ required: \"Password is required\" })}\n            placeholder=\"Password\"\n          />\n          {errors.password && <p className=\"error-notification\">{errors.password.message}</p>}\n          </div>\n          <Button primary submit>\n              <Icon name=\"sign-in\" /> Login\n            </Button>\n        </form>\n        {/* <Form onSubmit={handleSubmit}>\n          <FormLayout>\n            <TextField value={username} onChange={onChangeUsername} label=\"Username\" />\n            <TextField\n              type=\"password\"\n              value={password}\n              onChange={onChangePassword}\n              label=\"Password\"\n            />\n            <Button primary submit>\n              Login\n            </Button>\n          </FormLayout>\n        </Form> */}\n      </Card>\n    </div>\n  )\n})\n\nexport default Profile\n"]},"metadata":{},"sourceType":"module"}