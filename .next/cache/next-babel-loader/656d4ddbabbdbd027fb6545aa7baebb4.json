{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { API } from 'aws-amplify';\nimport config from '../aws-exports';\nAPI.configure(config);\n\nvar AcceptPayment = /*#__PURE__*/function (_React$Component) {\n  _inherits(AcceptPayment, _React$Component);\n\n  var _super = _createSuper(AcceptPayment);\n\n  function AcceptPayment() {\n    var _this;\n\n    _classCallCheck(this, AcceptPayment);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      paymentRequestItems: _this.props.paymentRequests\n    });\n\n    return _this;\n  }\n\n  _createClass(AcceptPayment, [{\n    key: \"render\",\n    value: function render() {\n      console.log('Payment request data from class component', this.state.paymentRequestItems);\n      return __jsx(\"div\", null, \"Hello from payment\");\n    }\n  }]);\n\n  return AcceptPayment;\n}(React.Component);\n\nexport var __N_SSG = true;\nexport default AcceptPayment;","map":{"version":3,"sources":["C:/Users/Admin/Desktop/transactions/pages/accept-payment.js"],"names":["API","config","configure","AcceptPayment","paymentRequestItems","props","paymentRequests","console","log","state","React","Component"],"mappings":";;;;;;;;;;;;;;AAAA,SAASA,GAAT,QAAsC,aAAtC;AAEA,OAAOC,MAAP,MAAmB,gBAAnB;AAEAD,GAAG,CAACE,SAAJ,CAAcD,MAAd;;IAkBME,a;;;;;;;;;;;;;;;;4DACM;AACJC,MAAAA,mBAAmB,EAAE,MAAKC,KAAL,CAAWC;AAD5B,K;;;;;;;6BAIC;AACLC,MAAAA,OAAO,CAACC,GAAR,CAAY,2CAAZ,EAAyD,KAAKC,KAAL,CAAWL,mBAApE;AACA,aAAO,wCAAP;AACH;;;;EARuBM,KAAK,CAACC,S;;;AA4BlC,eAAeR,aAAf","sourcesContent":["import { API, graphqlOperation } from 'aws-amplify'\r\nimport gql from 'graphql-tag'\r\nimport config from '../aws-exports'\r\n\r\nAPI.configure(config)\r\n\r\nconst listPaymentRequest = gql`\r\n    query listPaymentRequest {\r\n        listPaymentRequests {\r\n            items {\r\n                bonusAmount\r\n                createdAt\r\n                customerId\r\n                id\r\n                orderId\r\n                status\r\n                updatedAt\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nclass AcceptPayment extends React.Component {\r\n    state = {\r\n        paymentRequestItems: this.props.paymentRequests\r\n    }\r\n\r\n    render() {\r\n        console.log('Payment request data from class component', this.state.paymentRequestItems)\r\n        return <div>Hello from payment</div>\r\n    }\r\n}\r\n\r\nexport async function getStaticProps() {\r\n    let result\r\n    try {\r\n        result = await API.graphql(graphqlOperation(listPaymentRequest))\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n\r\n    if (result.errors) {\r\n        console.warn('Failed to fetch transactions.', result.errors)\r\n        return { props: { paymentRequests: [] } }\r\n    }\r\n    if (result.data !== null) {\r\n        return { props: { paymentRequests: result.data } }\r\n    }\r\n}\r\n\r\nexport default AcceptPayment\r\n"]},"metadata":{},"sourceType":"module"}