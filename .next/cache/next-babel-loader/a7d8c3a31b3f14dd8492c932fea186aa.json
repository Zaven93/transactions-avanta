{"ast":null,"code":"import AWS from \"aws-sdk\";\nimport { API, graphqlOperation } from \"aws-amplify\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { getBranchById, listBranchs, branchByAdminId, getBranchByName } from \"../../graphql/queries\";\nimport { createBranch, removeBranch, deleteTransaction, deleteBranchProduct, deletePaymentRequest } from \"../../graphql/mutation\";\nimport config from \"../../aws-exports\";\nAWS.config.update({\n  accessKeyId: \"AKIA5VX4IMFOFHT7M2O2\",\n  secretAccessKey: \"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\",\n  region: \"us-east-1\"\n});\nconst cognito = new AWS.CognitoIdentityServiceProvider();\nexport const getBranch = (key, {\n  branchId\n}) => API.graphql(graphqlOperation(getBranchById, {\n  id: branchId\n}));\nexport const getBranchByAdmin = (key, {\n  adminId\n}) => API.graphql(graphqlOperation(branchByAdminId, {\n  adminId\n}));\nexport const createBranchEntity = ({\n  userSub,\n  username,\n  branchName\n}) => API.graphql(graphqlOperation(createBranch, {\n  input: {\n    adminId: userSub,\n    branchUsername: username,\n    branchName: branchName,\n    id: uuidv4()\n  }\n}));\nexport const checkBranchName = ({\n  branchName\n}) => API.graphql(graphqlOperation(getBranchByName, {\n  branchName\n}));\nexport const listBranchEntities = key => API.graphql(graphqlOperation(listBranchs));\nexport const deleteBranch = async ({\n  branches,\n  username,\n  id\n}) => {\n  console.log(\"Branch data that should be deleted\", branches);\n  const branchToDelete = branches.listBranchs.items.filter(item => item.id === id)[0];\n  console.log(\"Branch to delete Zaven\", branchToDelete);\n  const transactionsToDelete = branchToDelete.transactions.items ? branchToDelete.transactions.items.map(transaction => transaction.id) : \"\";\n  const productsToDelete = branchToDelete.branchProducts.items ? branchToDelete.branchProducts.items.map(product => product.id) : \"\";\n  const paymentRequestToDelete = branchToDelete.branchPaymentRequests.items ? branchToDelete.branchPaymentRequests.items.map(paymentRequest => paymentRequest.id) : \"\";\n  console.log(\"Transactions to Delete\", transactionsToDelete);\n  console.log(\"Products to delete\", productsToDelete);\n  console.log(\"PaymentRequests to delete\", paymentRequestToDelete);\n  console.log(\"Username to delete\", username);\n\n  try {\n    const deletedBranch = await API.graphql(graphqlOperation(removeBranch, {\n      input: {\n        id\n      }\n    }));\n    await Promise.all(transactionsToDelete.map(transactionId => {\n      API.graphql(graphqlOperation(deleteTransaction, {\n        input: {\n          id: transactionId\n        }\n      }));\n    })).catch(err => console.log(err));\n    await Promise.all(productsToDelete.map(productId => {\n      API.graphql(graphqlOperation(deleteBranchProduct, {\n        input: {\n          id: productId\n        }\n      }));\n    })).catch(err => console.log(err));\n    await Promise.all(paymentRequestToDelete.map(paymentId => {\n      API.graphql(graphqlOperation(deletePaymentRequest, {\n        input: {\n          id: paymentId\n        }\n      }));\n    }));\n    await cognito.adminDeleteUser({\n      UserPoolId: \"us-east-1_xuc7kseKp\",\n      Username: username\n    }).promise();\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"sources":["/var/www/transactions-avanta/core/services/branch.service.js"],"names":["AWS","API","graphqlOperation","v4","uuidv4","getBranchById","listBranchs","branchByAdminId","getBranchByName","createBranch","removeBranch","deleteTransaction","deleteBranchProduct","deletePaymentRequest","config","update","accessKeyId","secretAccessKey","region","cognito","CognitoIdentityServiceProvider","getBranch","key","branchId","graphql","id","getBranchByAdmin","adminId","createBranchEntity","userSub","username","branchName","input","branchUsername","checkBranchName","listBranchEntities","deleteBranch","branches","console","log","branchToDelete","items","filter","item","transactionsToDelete","transactions","map","transaction","productsToDelete","branchProducts","product","paymentRequestToDelete","branchPaymentRequests","paymentRequest","deletedBranch","Promise","all","transactionId","catch","err","productId","paymentId","adminDeleteUser","UserPoolId","Username","promise","error"],"mappings":"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","sourcesContent":["import AWS from \"aws-sdk\"\nimport { API, graphqlOperation } from \"aws-amplify\"\nimport { v4 as uuidv4 } from \"uuid\"\nimport { getBranchById, listBranchs, branchByAdminId, getBranchByName } from \"../../graphql/queries\"\nimport {\n  createBranch,\n  removeBranch,\n  deleteTransaction,\n  deleteBranchProduct,\n  deletePaymentRequest,\n} from \"../../graphql/mutation\"\nimport config from \"../../aws-exports\"\n\nAWS.config.update({\n  accessKeyId: \"AKIA5VX4IMFOFHT7M2O2\",\n  secretAccessKey: \"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\",\n  region: \"us-east-1\",\n})\n\nconst cognito = new AWS.CognitoIdentityServiceProvider()\n\nexport const getBranch = (key, { branchId }) =>\n  API.graphql(graphqlOperation(getBranchById, { id: branchId }))\n\nexport const getBranchByAdmin = (key, { adminId }) =>\n  API.graphql(graphqlOperation(branchByAdminId, { adminId }))\n\nexport const createBranchEntity = ({ userSub, username, branchName }) =>\n  API.graphql(\n    graphqlOperation(createBranch, {\n      input: {\n        adminId: userSub,\n        branchUsername: username,\n        branchName: branchName,\n        id: uuidv4(),\n      },\n    })\n  )\n\nexport const checkBranchName = ({ branchName }) =>\n  API.graphql(\n    graphqlOperation(getBranchByName, {\n      branchName,\n    })\n  )\n\nexport const listBranchEntities = (key) => API.graphql(graphqlOperation(listBranchs))\n\nexport const deleteBranch = async ({ branches, username, id }) => {\n  console.log(\"Branch data that should be deleted\", branches)\n  const branchToDelete = branches.listBranchs.items.filter((item) => item.id === id)[0]\n\n  console.log(\"Branch to delete Zaven\", branchToDelete)\n\n  const transactionsToDelete = branchToDelete.transactions.items\n    ? branchToDelete.transactions.items.map((transaction) => transaction.id)\n    : \"\"\n\n  const productsToDelete = branchToDelete.branchProducts.items\n    ? branchToDelete.branchProducts.items.map((product) => product.id)\n    : \"\"\n\n  const paymentRequestToDelete = branchToDelete.branchPaymentRequests.items\n    ? branchToDelete.branchPaymentRequests.items.map((paymentRequest) => paymentRequest.id)\n    : \"\"\n\n  console.log(\"Transactions to Delete\", transactionsToDelete)\n  console.log(\"Products to delete\", productsToDelete)\n  console.log(\"PaymentRequests to delete\", paymentRequestToDelete)\n  console.log(\"Username to delete\", username)\n  try {\n    const deletedBranch = await API.graphql(graphqlOperation(removeBranch, { input: { id } }))\n\n    await Promise.all(\n      transactionsToDelete.map((transactionId) => {\n        API.graphql(graphqlOperation(deleteTransaction, { input: { id: transactionId } }))\n      })\n    ).catch((err) => console.log(err))\n\n    await Promise.all(\n      productsToDelete.map((productId) => {\n        API.graphql(graphqlOperation(deleteBranchProduct, { input: { id: productId } }))\n      })\n    ).catch((err) => console.log(err))\n\n    await Promise.all(\n      paymentRequestToDelete.map((paymentId) => {\n        API.graphql(graphqlOperation(deletePaymentRequest, { input: { id: paymentId } }))\n      })\n    )\n\n    await cognito\n      .adminDeleteUser({\n        UserPoolId: \"us-east-1_xuc7kseKp\",\n        Username: username,\n      })\n      .promise()\n  } catch (error) {\n    console.log(error)\n  }\n}\n"]},"metadata":{},"sourceType":"module"}