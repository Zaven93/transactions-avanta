{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useCallback, useEffect } from 'react';\nimport { API, graphqlOperation } from 'aws-amplify';\nimport { Page, Card, Toast, Frame, Tabs } from '@shopify/polaris';\nimport config from '../aws-exports';\nimport AcceptedPaymentRequest from '../components/AcceptedPaymentRequest';\nimport PendingPaymentRequest from '../components/PendingPaymentRequest';\nimport DeclinedPaymentRequest from '../components/DeclinedPaymentRequest';\nimport { onUpdatePaymentSubscription, paymentSubscription } from '../graphql/subscriptions';\nAPI.configure(config);\n\nconst AcceptPayment = ({\n  branchId,\n  setShowPaymentRequest\n}) => {\n  const {\n    0: activeToast,\n    1: setActiveToast\n  } = useState(false);\n  const {\n    0: selected,\n    1: setSelected\n  } = useState(0);\n  const {\n    0: createUpdatePaymentSubscription,\n    1: setCreateUpdatePaymentSubscription\n  } = useState('');\n  const handleTabChange = useCallback(selectedTabIndex => setSelected(selectedTabIndex), []);\n  useEffect(() => {\n    const listener = API.graphql(graphqlOperation(paymentSubscription)).subscribe({\n      next: paymentResponse => {\n        setCreateUpdatePaymentSubscription(paymentResponse);\n      }\n    });\n    const onUpdatePayment = API.graphql(graphqlOperation(onUpdatePaymentSubscription)).subscribe({\n      next: onUpdatePaymentResponse => {\n        setCreateUpdatePaymentSubscription(onUpdatePaymentResponse);\n      }\n    });\n    return () => {\n      listener.unsubscribe();\n      onUpdatePayment.unsubscribe();\n    };\n  }, []);\n  const tabs = [{\n    id: 'pending-payments',\n    content: 'Pending Payment Requests',\n    accessibilityLabel: 'Pending Requests',\n    panelID: 'pending-payments-content'\n  }, {\n    id: 'accepted-payments',\n    content: 'Accepted Payment Requests',\n    accessibilityLabel: 'Accepted Request',\n    panelID: 'accepted-payments-content'\n  }, {\n    id: 'declined-payments',\n    content: 'Declined Payment Requests',\n    accessibilityLabel: 'Declined Requests',\n    panelID: 'declined-payments-content'\n  }];\n  const toastMarkup = activeToast ? __jsx(Toast, {\n    content: \"Order has been successfully created\",\n    onDismiss: () => setActiveToast(false)\n  }) : null;\n\n  const renderPaymentRequest = selected => {\n    switch (selected) {\n      case 0:\n        return __jsx(PendingPaymentRequest, {\n          branchId: branchId,\n          createUpdatePaymentSubscription: createUpdatePaymentSubscription\n        });\n\n      case 1:\n        return __jsx(AcceptedPaymentRequest, {\n          branchId: branchId\n        });\n\n      case 2:\n        return __jsx(DeclinedPaymentRequest, {\n          branchId: branchId\n        });\n\n      default:\n        return;\n    }\n  };\n\n  return __jsx(Frame, null, __jsx(Page, {\n    title: \"Payment Request\"\n  }, __jsx(Button, {\n    onClick: () => setShowPaymentRequest(false)\n  }, \"Go back\"), __jsx(Card, null, __jsx(Tabs, {\n    tabs: tabs,\n    selected: selected,\n    onSelect: handleTabChange\n  }, __jsx(Card.Section, {\n    title: tabs[selected].content\n  }, renderPaymentRequest(selected)))), toastMarkup));\n};\n\nexport default AcceptPayment;","map":null,"metadata":{},"sourceType":"module"}